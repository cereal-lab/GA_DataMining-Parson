Problem No. 4
Using Template # 100
The Problem:
}}
System.out.println(s1 + " and " +s2 + " are same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println("Neither same content nor same object");
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
if (s1.equals(s2))
else if (s1 == s2) // This line should be written before Line X
String s1 = "Hello World", s2 = "Hello Worlds";
public static void main(String[] args) {
public class StringOperation {
else if (s1.compareTo(s2) == 0) // This is Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: 	}}
2. Moved from problem to solution at line 1: public class StringOperation {
3. Moved from problem to solution at line 2: 	public static void main(String[] args) {
4. Moved from problem to solution at line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 4: 		if (s1.equals(s2))
6. Moved from problem to solution at line 5: 			System.out.println(s1 + " and " +s2 + " are same object");
7. Moved from problem to solution at line 6: 		else
8. Moved from problem to solution at line 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
9. Moved from problem to trash at line 0: 		else if (s1.compareTo(s2) == 0) // This is Line X
10. Moved from problem to trash at line 1: 		else if (s1 == s2) // This line should be written before Line X
11. Moved from problem to trash at line 2: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
12. Moved from problem to trash at line 2: 			System.out.println("Neither same content nor same object");
13. Moved from problem to trash at line 2: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1500678139569
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
14. Moved from trash to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1500678161225
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500678165414
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500678166624
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
15. Moved from solution to trash at line 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
16. Reordered from line 7 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
17. Reordered from line 6 to 8: 			System.out.println(s1 + " and " +s2 + " are same object");
18. Reordered from line 8 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
Submit Parsons Solution clicked @ 1500678191966
This line is not in its correct location: 		else
Insert this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Moved from trash to solution at line 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1500678228225
This line is not in its correct location: 		else
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 8 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
Submit Parsons Solution clicked @ 1500678240438
This line is not in its correct location: 		else
Insert this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Moved from trash to solution at line 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
22. Moved from trash to solution at line 10: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1500678267026
This line is not in its correct location: 		else
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from trash to solution at line 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1500678282704
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
2. Moved from problem to solution at line 1
Line 2 (1 moves): 	public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 3 (1 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
4. Moved from problem to solution at line 3
Line 4 (1 moves): 		if (s1.equals(s2))
5. Moved from problem to solution at line 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Moved from problem to solution at line 7
16. Reordered from line 7 to 5
Line 6 (2 moves): 		else if (s1 == s2) // This line should be written before Line X
10. Moved from problem to trash at line 1
19. Moved from trash to solution at line 6
Line 7 (4 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
6. Moved from problem to solution at line 5
17. Reordered from line 6 to 8
18. Reordered from line 8 to 7
20. Reordered from line 8 to 7
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
9. Moved from problem to trash at line 0
21. Moved from trash to solution at line 8
Line 9 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
11. Moved from problem to trash at line 2
23. Moved from trash to solution at line 9
Line 10 (1 moves): 		else
7. Moved from problem to solution at line 6
Line 11 (2 moves): 			System.out.println("Neither same content nor same object");
12. Moved from problem to trash at line 2
22. Moved from trash to solution at line 10
Line 12 (1 moves): 	}}
1. Moved from problem to solution at line 0
Line 5 (16) (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
13. Moved from problem to trash at line 2
14. Moved from trash to solution at line 5
15. Moved from solution to trash at line 4
Your Grade:
You took 23 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1500678306545
Time spent on this problem: 304 seconds
<HR>
