Problem No. 4
Using Template # 100
The Problem:
if (s.charAt(low) != s.charAt(high)) {
else
public class Palindrome {
if (isPalindrome)
System.out.println(s + " is a palindrome");
int low, high, isPalindrome;          // This is line Y
while (low < high) {
while (low < high {
public static void main(String[] args) {
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}}
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
}
isPalindrome = false;
low++; high--;
String s = input.nextLine();          // This is line X
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     }}
7. Reordered from line 3 to 4:     }}
Submit Parsons Solution clicked @ 1500658481815
Please clear all the lines from the left panel before submitting your answer.
8. Moved from problem to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to trash at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to trash at line 2:     String s = input.nextLine();          // This is line X
11. Moved from problem to trash at line 3:       low++; high--;
12. Moved from problem to trash at line 4:         isPalindrome = false;
13. Moved from problem to trash at line 5:       }
14. Moved from problem to trash at line 4:       System.out.println(s + " is not a palindrome");
15. Moved from problem to trash at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to trash at line 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
17. Moved from problem to trash at line 3:         break;}
18. Moved from problem to trash at line 1:     while (low < high {
19. Moved from problem to trash at line 3:     while (low < high) {
20. Moved from problem to trash at line 4:     int low, high, isPalindrome;          // This is line Y
21. Moved from problem to trash at line 2:       System.out.println(s + " is a palindrome");
22. Moved from problem to trash at line 1:     if (isPalindrome)
23. Moved from problem to trash at line 2:     else
24. Moved from problem to trash at line 3:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500659284891
This line is not in its correct location:     }}
Insert this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from trash to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1500659305900
This line is not in its correct location:     }}
Insert this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500659321814
This line is not in its correct location:     }}
Insert this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from trash to solution at line 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500659335630
This line is not in its correct location:     }}
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500659346992
This line is not in its correct location:     }}
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500659365308
This line is not in its correct location:     }}
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500659387542
This line is not in its correct location:     }}
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500659400951
This line is not in its correct location:     }}
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500659415599
This line is not in its correct location:     }}
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 11:         break;}
34. Reordered from line 11 to 12:         break;}
Submit Parsons Solution clicked @ 1500659425322
This line is not in its correct location:     }}
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1500659432825
This line is not in its correct location:     }}
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 13:       }
37. Reordered from line 13 to 14:       }
Submit Parsons Solution clicked @ 1500659441957
This line is not in its correct location:     }}
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500659458582
This line is not in its correct location:     }}
Insert this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from trash to solution at line 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1500659464833
This line is not in its correct location:     }}
Insert this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Moved from trash to solution at line 17:     else
Submit Parsons Solution clicked @ 1500659473711
This line is not in its correct location:     }}
Insert this line in its place:       System.out.println(s + " is not a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500659480318
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
16. Moved from problem to trash at line 2
25. Moved from trash to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to trash at line 1
26. Moved from trash to solution at line 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to trash at line 2
27. Moved from trash to solution at line 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
20. Moved from problem to trash at line 4
28. Moved from trash to solution at line 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to trash at line 1
29. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to trash at line 3
30. Moved from trash to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
24. Moved from problem to trash at line 3
31. Moved from trash to solution at line 10
Line 11 (2 moves):         isPalindrome = false;
12. Moved from problem to trash at line 4
32. Moved from trash to solution at line 11
Line 12 (3 moves):         break;}
17. Moved from problem to trash at line 3
33. Moved from trash to solution at line 11
34. Reordered from line 11 to 12
Line 13 (2 moves):       low++; high--;
11. Moved from problem to trash at line 3
35. Moved from trash to solution at line 13
Line 14 (3 moves):       }
13. Moved from problem to trash at line 5
36. Moved from trash to solution at line 13
37. Reordered from line 13 to 14
Line 15 (2 moves):     if (isPalindrome)
22. Moved from problem to trash at line 1
38. Moved from trash to solution at line 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
21. Moved from problem to trash at line 2
39. Moved from trash to solution at line 16
Line 17 (2 moves):     else
23. Moved from problem to trash at line 2
40. Moved from trash to solution at line 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
14. Moved from problem to trash at line 4
41. Moved from trash to solution at line 18
Line 19 (2 moves):     }}
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
8. Moved from problem to trash at line 0
Line 9 (5) (1 moves):     while (low < high {
18. Moved from problem to trash at line 1
Your Grade:
You took 41 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500659483535
Time spent on this problem: 1277 seconds
<HR>
