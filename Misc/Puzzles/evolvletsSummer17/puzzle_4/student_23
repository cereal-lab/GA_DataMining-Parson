Problem No. 4
Using Template # 100
The Problem:
}
public class Palindrome {
break;}
import java.util.Scanner;
low++; high--;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
System.out.println(s + " is not a palindrome");
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
if (isPalindrome)
}}
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
while while (low <= high) {
while (low < high) {
isPalindrome = false;
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   public static void main(String[] args) {
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Reordered from line 2 to 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3: public class Palindrome {
6. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
7. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 1 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
11. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 7:       System.out.println(s + " is not a palindrome");
13. Moved from solution to problem at line 13:       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 7:     while (low < high) {
15. Reordered from line 7 to 8:     while (low < high) {
16. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
18. Reordered from line 10 to 8:     while (low < high) {
19. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
20. Reordered from line 10 to 11:       System.out.println(s + " is a palindrome");
21. Moved from problem to solution at line 11:    while while (low <= high) {
22. Reordered from line 11 to 12:    while while (low <= high) {
23. Moved from problem to solution at line 12:       if (s.charAt(low) != s.charAt(high)) {
24. Reordered from line 12 to 13:       if (s.charAt(low) != s.charAt(high)) {
25. Moved from problem to solution at line 11:       low++; high--;
26. Moved from problem to solution at line 14:     }}
27. Reordered from line 14 to 15:     }}
28. Moved from problem to solution at line 15:         isPalindrome = false;
29. Moved from problem to solution at line 16:     if (isPalindrome)
30. Moved from problem to solution at line 16:       System.out.println(s + " is not a palindrome");
31. Reordered from line 16 to 17:       System.out.println(s + " is not a palindrome");
32. Moved from problem to solution at line 18:     else
33. Moved from problem to solution at line 19:         break;}
34. Moved from problem to solution at line 20:       }
Submit Parsons Solution clicked @ 1500864789248
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 2 to 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1500864799031
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 5 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500864815885
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from solution to trash at line 0:       }
Submit Parsons Solution clicked @ 1500864825369
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 6 to 9:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500864946541
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500864948080
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500864948914
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500864949589
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 7 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500864958284
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 7 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500864974579
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 20:       }
Submit Parsons Solution clicked @ 1500864983845
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500864998734
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1500865009988
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
5. Moved from problem to solution at line 3
Line 3 (2 moves):   public static void main(String[] args) {
1. Moved from problem to solution at line 0
35. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
3. Moved from problem to solution at line 2
4. Reordered from line 2 to 3
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 1
9. Reordered from line 1 to 6
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 6
11. Reordered from line 6 to 7
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 4
7. Reordered from line 4 to 5
36. Reordered from line 5 to 6
38. Reordered from line 6 to 9
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 8
40. Reordered from line 7 to 8
Line 9 (4 moves):     while (low < high) {
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
18. Reordered from line 10 to 8
39. Reordered from line 7 to 9
Line 13 (1 moves):       low++; high--;
25. Moved from problem to solution at line 11
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 10
20. Reordered from line 10 to 11
Line 9 (37) (2 moves):    while while (low <= high) {
21. Moved from problem to solution at line 11
22. Reordered from line 11 to 12
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to solution at line 12
24. Reordered from line 12 to 13
Line 11 (1 moves):         isPalindrome = false;
28. Moved from problem to solution at line 15
Line 15 (1 moves):     if (isPalindrome)
29. Moved from problem to solution at line 16
Line 18 (4 moves):       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 7
13. Moved from solution to problem at line 13
30. Moved from problem to solution at line 16
31. Reordered from line 16 to 17
Line 17 (1 moves):     else
32. Moved from problem to solution at line 18
Line 12 (1 moves):         break;}
33. Moved from problem to solution at line 19
Line 14 (3 moves):       }
34. Moved from problem to solution at line 20
37. Moved from solution to trash at line 0
41. Moved from trash to solution at line 20
Line 19 (2 moves):     }}
26. Moved from problem to solution at line 14
27. Reordered from line 14 to 15
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9
42. Moved from solution to trash at line 0
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
low++; high--;
System.out.println(s + " is a palindrome");
while while (low <= high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
if (isPalindrome)
System.out.println(s + " is not a palindrome");
else
break;}
}
}}
The lines you deleted so far are as follows:
low= 1; high = s.length() - 1; isPalindrome = true;
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1500865021622
Time spent on this problem: 747 seconds
<HR>
