Problem No. 4
Using Template # 100
The Problem:
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
if (isPalindrome)
while (low < high {
while while (low <= high) {
while (low < high) {
isPalindrome = false;
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
System.out.println(s + " is a palindrome");
}}
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
else
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:    while while (low <= high) {
10. Moved from problem to solution at line 8:     else
11. Reordered from line 8 to 10:     else
12. Reordered from line 10 to 9:     else
13. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 11:       low++; high--;
15. Moved from problem to solution at line 10:     if (isPalindrome)
16. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
18. Reordered from line 10 to 15:     if (isPalindrome)
19. Reordered from line 14 to 15:     }}
20. Reordered from line 11 to 15:       System.out.println(s + " is not a palindrome");
21. Reordered from line 15 to 14:       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 11:         isPalindrome = false;
23. Moved from problem to solution at line 15:       System.out.println(s + " is a palindrome");
24. Reordered from line 12 to 16:     else
25. Reordered from line 16 to 15:     else
26. Moved from problem to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1500868078028
Please clear all the lines from the left panel before submitting your answer.
27. Moved from problem to trash at line 0:     while (low < high) {
28. Moved from problem to trash at line 1:     while (low < high {
29. Moved from problem to solution at line 14:       }
Submit Parsons Solution clicked @ 1500868096385
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
31. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500868124032
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from solution to trash at line 2:    while while (low <= high) {
33. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500868139573
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
30. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
31. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
27. Moved from problem to trash at line 0
33. Moved from trash to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 11
Line 11 (1 moves):         isPalindrome = false;
22. Moved from problem to solution at line 11
Line 12 (1 moves):         break;}
26. Moved from problem to solution at line 12
Line 13 (1 moves):       low++; high--;
14. Moved from problem to solution at line 11
Line 14 (1 moves):       }
29. Moved from problem to solution at line 14
Line 15 (2 moves):     if (isPalindrome)
15. Moved from problem to solution at line 10
18. Reordered from line 10 to 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 15
Line 17 (5 moves):     else
10. Moved from problem to solution at line 8
11. Reordered from line 8 to 10
12. Reordered from line 10 to 9
24. Reordered from line 12 to 16
25. Reordered from line 16 to 15
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 12
20. Reordered from line 11 to 15
21. Reordered from line 15 to 14
Line 19 (2 moves):     }}
1. Moved from problem to solution at line 0
19. Reordered from line 14 to 15
Line 9 (5) (1 moves):     while (low < high {
28. Moved from problem to trash at line 1
Line 9 (37) (2 moves):    while while (low <= high) {
9. Moved from problem to solution at line 8
32. Moved from solution to trash at line 2
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500868145599
Time spent on this problem: 499 seconds
<HR>
