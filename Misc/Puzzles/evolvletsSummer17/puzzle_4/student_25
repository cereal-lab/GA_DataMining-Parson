Problem No. 4
Using Template # 100
The Problem:
public static void main(String[] args) {
}
import java.util.Scanner;
if (isPalindrome)
break;}
low++; high--;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
while while (low <= high) {
while (low < high {
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
isPalindrome = false;
System.out.println(s + " is not a palindrome");
}}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
3. Moved from problem to solution at line 1:         isPalindrome = false;
4. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
5. Moved from problem to solution at line 2:    while while (low <= high) {
6. Reordered from line 2 to 1:    while while (low <= high) {
7. Moved from problem to solution at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 1: public class Palindrome {
9. Moved from problem to solution at line 1: import java.util.Scanner;
10. Moved from problem to solution at line 3:   public static void main(String[] args) {
11. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
12. Moved from problem to solution at line 7:     if (isPalindrome)
13. Reordered from line 6 to 8:    while while (low <= high) {
14. Reordered from line 8 to 7:    while while (low <= high) {
15. Reordered from line 7 to 6:    while while (low <= high) {
16. Moved from problem to solution at line 8:         break;}
17. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 9:       low++; high--;
19. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
20. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
21. Moved from problem to solution at line 12:       }
22. Moved from problem to solution at line 13:     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 8:     while (low < high {
24. Moved from problem to solution at line 10:     while (low < high) {
25. Moved from problem to solution at line 20:     else
Submit Parsons Solution clicked @ 1500927586936
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500927591548
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500927596472
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from solution to trash at line 0:     while (low < high {
Submit Parsons Solution clicked @ 1500927600800
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1500927605334
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 13 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500927608978
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 15 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500927614121
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 16 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500927617154
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1500927620342
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1500927623078
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 15 to 13:       }
36. Reordered from line 13 to 14:       }
Submit Parsons Solution clicked @ 1500927627502
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1500927630346
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
9. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
8. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
10. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 1
26. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
19. Moved from problem to solution at line 6
27. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
20. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 13
30. Reordered from line 13 to 8
Line 9 (1 moves):     while (low < high) {
24. Moved from problem to solution at line 10
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 10
31. Reordered from line 15 to 10
Line 11 (2 moves):         isPalindrome = false;
3. Moved from problem to solution at line 1
32. Reordered from line 16 to 11
Line 12 (2 moves):         break;}
16. Moved from problem to solution at line 8
33. Reordered from line 13 to 12
Line 13 (2 moves):       low++; high--;
18. Moved from problem to solution at line 9
34. Reordered from line 14 to 13
Line 14 (3 moves):       }
21. Moved from problem to solution at line 12
35. Reordered from line 15 to 13
36. Reordered from line 13 to 14
Line 15 (1 moves):     if (isPalindrome)
12. Moved from problem to solution at line 7
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
4. Moved from problem to solution at line 1
Line 17 (2 moves):     else
25. Moved from problem to solution at line 20
37. Reordered from line 18 to 17
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
2. Moved from problem to solution at line 1
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (2 moves):     while (low < high {
23. Moved from problem to solution at line 8
28. Moved from solution to trash at line 0
Line 9 (37) (6 moves):    while while (low <= high) {
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 1
13. Reordered from line 6 to 8
14. Reordered from line 8 to 7
15. Reordered from line 7 to 6
29. Moved from solution to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500927631489
Time spent on this problem: 2484 seconds
<HR>
