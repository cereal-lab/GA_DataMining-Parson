Problem No. 4
Using Template # 100
The Problem:
}
import java.util.Scanner;
}}
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while while (low <= high) {
while (low < high) {
String s = input.nextLine();          // This is line X
if (isPalindrome)
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
break;}
isPalindrome = false;
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to trash at line 0:    while while (low <= high) {
11. Moved from problem to solution at line 9:     if (isPalindrome)
12. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 9:       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 12:     while (low < high) {
15. Moved from problem to solution at line 13:       low++; high--;
16. Moved from problem to solution at line 14:         break;}
17. Moved from problem to solution at line 10:     else
18. Moved from problem to solution at line 10:         isPalindrome = false;
19. Moved from problem to solution at line 14:     low= 0; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500865804133
Please clear all the lines from the left panel before submitting your answer.
21. Moved from problem to solution at line 11:       }
Submit Parsons Solution clicked @ 1500865815866
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 5 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500865846482
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500865855736
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 8 to 14:       if (s.charAt(low) != s.charAt(high)) {
25. Reordered from line 13 to 16:       System.out.println(s + " is a palindrome");
26. Reordered from line 16 to 15:       System.out.println(s + " is a palindrome");
27. Reordered from line 15 to 13:       System.out.println(s + " is a palindrome");
28. Reordered from line 11 to 13:     else
29. Reordered from line 10 to 13:       }
30. Reordered from line 13 to 12:       }
31. Reordered from line 9 to 12:         isPalindrome = false;
32. Reordered from line 12 to 11:         isPalindrome = false;
33. Reordered from line 8 to 16:       System.out.println(s + " is not a palindrome");
34. Reordered from line 16 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500865951307
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 14 to 9:     low= 0; high = s.length() - 1; isPalindrome = true;
36. Reordered from line 11 to 16:         isPalindrome = false;
37. Reordered from line 16 to 15:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500865982800
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 8 to 9:     if (isPalindrome)
39. Reordered from line 15 to 9:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500866004964
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 9 to 16:         isPalindrome = false;
41. Reordered from line 16 to 15:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500866017170
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 9 to 16:     if (isPalindrome)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500866028898
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1500866032771
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
22. Reordered from line 5 to 6
23. Reordered from line 6 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 14
35. Reordered from line 14 to 9
Line 16 (4 moves):       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 10
25. Reordered from line 13 to 16
26. Reordered from line 16 to 15
27. Reordered from line 15 to 13
Line 14 (3 moves):       }
21. Moved from problem to solution at line 11
29. Reordered from line 10 to 13
30. Reordered from line 13 to 12
Line 17 (2 moves):     else
17. Moved from problem to solution at line 10
28. Reordered from line 11 to 13
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
9. Moved from problem to solution at line 8
24. Reordered from line 8 to 14
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 9
33. Reordered from line 8 to 16
34. Reordered from line 16 to 15
Line 11 (8 moves):         isPalindrome = false;
18. Moved from problem to solution at line 10
31. Reordered from line 9 to 12
32. Reordered from line 12 to 11
36. Reordered from line 11 to 16
37. Reordered from line 16 to 15
39. Reordered from line 15 to 9
40. Reordered from line 9 to 16
41. Reordered from line 16 to 15
Line 9 (1 moves):     while (low < high) {
14. Moved from problem to solution at line 12
Line 15 (3 moves):     if (isPalindrome)
11. Moved from problem to solution at line 9
38. Reordered from line 8 to 9
42. Reordered from line 9 to 16
Line 13 (1 moves):       low++; high--;
15. Moved from problem to solution at line 13
Line 12 (1 moves):         break;}
16. Moved from problem to solution at line 14
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
10. Moved from problem to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to trash at line 1
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
}
else
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
isPalindrome = false;
while (low < high) {
if (isPalindrome)
low++; high--;
break;}
}}
The lines you deleted so far are as follows:
while while (low <= high) {
low= 1; high = s.length() - 1; isPalindrome = true;
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1500866035345
Time spent on this problem: 672 seconds
<HR>
