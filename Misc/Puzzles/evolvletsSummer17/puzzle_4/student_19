Problem No. 4
Using Template # 100
The Problem:
}
String s = input.nextLine();          // This is line X
if (isPalindrome)
break;}
while (low < high) {
while while (low <= high) {
else
int low, high, isPalindrome;          // This is line Y
System.out.println(s + " is a palindrome");
System.out.println(s + " is not a palindrome");
low++; high--;
}}
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: public class Palindrome {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 7:     if (isPalindrome)
14. Reordered from line 7 to 8:     if (isPalindrome)
15. Moved from problem to solution at line 8:     while (low < high) {
16. Reordered from line 8 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500739262832
Please clear all the lines from the left panel before submitting your answer.
17. Moved from problem to solution at line 9:       low++; high--;
18. Reordered from line 9 to 10:       low++; high--;
19. Moved from problem to trash at line 0:    while while (low <= high) {
20. Moved from problem to solution at line 10:     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
22. Reordered from line 11 to 12:       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to solution at line 12:       System.out.println(s + " is a palindrome");
24. Reordered from line 12 to 13:       System.out.println(s + " is a palindrome");
25. Moved from problem to solution at line 13:     else
26. Reordered from line 13 to 14:     else
27. Moved from problem to trash at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
28. Moved from problem to solution at line 14:         isPalindrome = false;
29. Reordered from line 14 to 15:         isPalindrome = false;
30. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
31. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
32. Moved from problem to solution at line 16:     }}
33. Reordered from line 16 to 17:     }}
34. Moved from problem to trash at line 2:         break;}
35. Moved from problem to trash at line 3:       }
Submit Parsons Solution clicked @ 1500739380287
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
37. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500739410640
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500739426851
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500739436529
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 13 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500739447368
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 16 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500739456935
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 12:         break;}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500739466996
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1500739474356
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from trash to solution at line 14:       }
45. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500739494740
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (2 moves): public class Palindrome {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 3 (1 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
10. Reordered from line 5 to 6
36. Reordered from line 6 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
37. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
27. Moved from problem to trash at line 1
38. Moved from trash to solution at line 8
Line 9 (3 moves):     while (low < high) {
15. Moved from problem to solution at line 8
16. Reordered from line 8 to 9
39. Reordered from line 10 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 11
22. Reordered from line 11 to 12
40. Reordered from line 13 to 10
Line 11 (3 moves):         isPalindrome = false;
28. Moved from problem to solution at line 14
29. Reordered from line 14 to 15
41. Reordered from line 16 to 11
Line 12 (2 moves):         break;}
34. Moved from problem to trash at line 2
42. Moved from trash to solution at line 12
Line 13 (3 moves):       low++; high--;
17. Moved from problem to solution at line 9
18. Reordered from line 9 to 10
43. Reordered from line 15 to 13
Line 14 (2 moves):       }
35. Moved from problem to trash at line 3
44. Moved from trash to solution at line 14
Line 15 (2 moves):     if (isPalindrome)
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 12
24. Reordered from line 12 to 13
Line 17 (2 moves):     else
25. Moved from problem to solution at line 13
26. Reordered from line 13 to 14
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
30. Moved from problem to solution at line 15
31. Reordered from line 15 to 16
Line 19 (2 moves):     }}
32. Moved from problem to solution at line 16
33. Reordered from line 16 to 17
Line 9 (37) (1 moves):    while while (low <= high) {
19. Moved from problem to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 10
45. Moved from solution to trash at line 1
Your Grade:
You took 45 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500739509689
Time spent on this problem: 840 seconds
<HR>
