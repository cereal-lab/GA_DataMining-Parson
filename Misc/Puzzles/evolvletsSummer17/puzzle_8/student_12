Problem No. 8
Using Template # 100
The Problem:
for (int i = 1; i <= 9; i++) {
System.out.printf("%4d", i * j);}
public static void main(String[] args) {
for (int j = 1; j <= 9; j++) {
System.out.println("\n-----------------------------------------");
System.out.println();}
System.out.println("           Multiplication Table");
System.out.prcharln("           Multiplication Table");
System.out.print("   " + j);
System.out.print(i + " | ");
System.out.print("    ");
public class MultiplicationTable {
}}
for (int j = 1; j <= 9; j++)
for (int j = 1; j <= 9; j++
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: }}
2. Moved from problem to solution at line 1: public class MultiplicationTable {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to trash at line 0:     System.out.prcharln("           Multiplication Table");
5. Moved from problem to solution at line 3:     System.out.println("           Multiplication Table");
6. Moved from problem to solution at line 4:     for (int j = 1; j <= 9; j++)
7. Moved from problem to solution at line 5:       for (int j = 1; j <= 9; j++) {
8. Moved from solution to trash at line 1:     for (int j = 1; j <= 9; j++)
9. Moved from problem to trash at line 2:     for (int i = 1; i <= 9; i++) {
10. Moved from problem to trash at line 3:     for (int j = 1; j <= 9; j++
11. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
12. Moved from problem to solution at line 5:         System.out.printf("%4d", i * j);}
13. Moved from problem to solution at line 7:       System.out.println();}
14. Moved from problem to solution at line 7:       System.out.print(i + " | ");
15. Moved from problem to solution at line 9:     System.out.print("    ");
16. Moved from problem to trash at line 3:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1500671917059
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
17. Reordered from line 9 to 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1500671921223
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Moved from trash to solution at line 5:     for (int j = 1; j <= 9; j++)
19. Moved from solution to trash at line 3:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1500671933794
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Moved from trash to solution at line 7:       System.out.print("   " + j);
21. Moved from solution to trash at line 3:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1500671942899
This line is not in its correct location:       System.out.print(i + " | ");
Insert this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Moved from trash to solution at line 9:       for (int j = 1; j <= 9; j++) {
23. Moved from solution to trash at line 4:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1500671959015
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Insert this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from trash to solution at line 8:     for (int i = 1; i <= 9; i++) {
25. Moved from solution to trash at line 4:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1500671967533
This line is not in its correct location:       System.out.println();}
Insert this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 10:       System.out.print(i + " | ");
27. Moved from solution to trash at line 1:       System.out.print(i + " | ");
28. Moved from solution to trash at line 2:       System.out.println();}
29. Moved from trash to solution at line 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1500671980090
This line is not in its correct location: }}
Insert this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 10:       for (int j = 1; j <= 9; j++) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500671986354
This line is not in its correct location: }}
Insert this line in its place:         System.out.printf("%4d", i * j);}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 11:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1500671990884
This line is not in its correct location: }}
Insert this line in its place:       System.out.println();}
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1500671996162
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
2. Moved from problem to solution at line 1
Line 2 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 3 (1 moves):     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 3
Line 4 (2 moves):     System.out.print("    ");
15. Moved from problem to solution at line 9
17. Reordered from line 9 to 4
Line 5 (3 moves):     for (int j = 1; j <= 9; j++)
6. Moved from problem to solution at line 4
8. Moved from solution to trash at line 1
18. Moved from trash to solution at line 5
Line 6 (2 moves):       System.out.print("   " + j);
16. Moved from problem to trash at line 3
20. Moved from trash to solution at line 7
Line 7 (1 moves):     System.out.println("\n-----------------------------------------");
11. Moved from problem to solution at line 5
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
9. Moved from problem to trash at line 2
24. Moved from trash to solution at line 8
Line 9 (5 moves):       System.out.print(i + " | ");
14. Moved from problem to solution at line 7
23. Moved from solution to trash at line 4
26. Moved from trash to solution at line 10
27. Moved from solution to trash at line 1
29. Moved from trash to solution at line 9
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
7. Moved from problem to solution at line 5
19. Moved from solution to trash at line 3
22. Moved from trash to solution at line 9
25. Moved from solution to trash at line 4
30. Moved from trash to solution at line 10
Line 11 (3 moves):         System.out.printf("%4d", i * j);}
12. Moved from problem to solution at line 5
21. Moved from solution to trash at line 3
31. Moved from trash to solution at line 11
Line 12 (3 moves):       System.out.println();}
13. Moved from problem to solution at line 7
28. Moved from solution to trash at line 2
32. Moved from trash to solution at line 12
Line 13 (1 moves): }}
1. Moved from problem to solution at line 0
Line 3 (11) (1 moves):     System.out.prcharln("           Multiplication Table");
4. Moved from problem to trash at line 0
Line 5 (5) (1 moves):     for (int j = 1; j <= 9; j++
10. Moved from problem to trash at line 3
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1500671998018
Time spent on this problem: 254 seconds
<HR>
