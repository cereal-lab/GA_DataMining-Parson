Problem No. 8
Using Template # 100
The Problem:
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public class Palindrome {
low++; high--;
if (isPalindrome)
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
import java.util.Scanner;
else
System.out.println(s + " is a palindrome");
isPalindrome = false;
while while (low <= high) {
while (low < high {
while (low < high) {
}}
String s = input.nextLine();          // This is line X
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:     }}
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:   public static void main(String[] args) {
7. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 9:     while (low < high {
13. Reordered from line 9 to 8:     while (low < high {
14. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 10:         isPalindrome = false;
16. Moved from problem to solution at line 7:     while (low < high) {
17. Reordered from line 7 to 8:     while (low < high) {
18. Moved from solution to problem at line 11:     while (low < high {
19. Moved from problem to trash at line 0:     while (low < high {
20. Moved from problem to trash at line 1:    while while (low <= high) {
21. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 12:       low++; high--;
23. Moved from problem to solution at line 13:     if (isPalindrome)
24. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
25. Reordered from line 11 to 12:       System.out.println(s + " is not a palindrome");
26. Reordered from line 13 to 16:       low++; high--;
27. Reordered from line 16 to 15:       low++; high--;
*  Indented line 14:       System.out.println(s + " is a palindrome");
28. Reordered from line 14 to 13:       System.out.println(s + " is a palindrome");
*  Outdented line 13:       System.out.println(s + " is a palindrome");
29. Reordered from line 13 to 14:       System.out.println(s + " is a palindrome");
30. Reordered from line 15 to 12:       low++; high--;
31. Moved from problem to solution at line 16:     else
32. Reordered from line 13 to 17:       System.out.println(s + " is not a palindrome");
33. Reordered from line 17 to 16:       System.out.println(s + " is not a palindrome");
34. Moved from problem to solution at line 12:         break;}
*  Outdented line 13:       low++; high--;
35. Reordered from line 16 to 12:     else
36. Reordered from line 13 to 11:         break;}
37. Reordered from line 11 to 12:         break;}
*  Indented line 13:     else
38. Moved from solution to problem at line 6:     else
39. Moved from problem to solution at line 13:     else
40. Moved from solution to problem at line 8:     else
41. Moved from problem to solution at line 13:     else
*  Outdented line 13:     else
*  Outdented line 13:     else
Submit Parsons Solution clicked @ 1500918108105
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500918109497
Please clear all the lines from the left panel before submitting your answer.
42. Moved from problem to solution at line 18:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500918114289
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
44. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500918138393
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 15 to 13:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500918144784
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Indented line 13:     if (isPalindrome)
*  Outdented line 13:     if (isPalindrome)
46. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1500918168018
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 18 to 17:       }
48. Reordered from line 18 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500918175377
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Outdented line 14:       System.out.println(s + " is not a palindrome");
49. Reordered from line 14 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500918183997
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 13 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500918187746
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 15 to 14:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500918191272
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 16 to 14:     else
Submit Parsons Solution clicked @ 1500918194863
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1500918198570
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 16 to 15:     if (isPalindrome)
55. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1500918209661
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
5. Reordered from line 3 to 2
Line 3 (1 moves):   public static void main(String[] args) {
6. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 4
43. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 5
44. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
16. Moved from problem to solution at line 7
17. Reordered from line 7 to 8
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 8
Line 11 (1 moves):         isPalindrome = false;
15. Moved from problem to solution at line 10
Line 12 (3 moves):         break;}
34. Moved from problem to solution at line 12
36. Reordered from line 13 to 11
37. Reordered from line 11 to 12
Line 13 (6 moves):       low++; high--;
22. Moved from problem to solution at line 12
26. Reordered from line 13 to 16
27. Reordered from line 16 to 15
30. Reordered from line 15 to 12
*  Outdented line 13
46. Reordered from line 15 to 13
Line 14 (3 moves):       }
42. Moved from problem to solution at line 18
47. Reordered from line 18 to 17
53. Reordered from line 18 to 14
Line 15 (6 moves):     if (isPalindrome)
23. Moved from problem to solution at line 13
45. Reordered from line 15 to 13
*  Indented line 13
*  Outdented line 13
51. Reordered from line 15 to 14
54. Reordered from line 16 to 15
Line 16 (6 moves):       System.out.println(s + " is a palindrome");
14. Moved from problem to solution at line 10
*  Indented line 14
28. Reordered from line 14 to 13
*  Outdented line 13
29. Reordered from line 13 to 14
55. Reordered from line 18 to 16
Line 17 (10 moves):     else
31. Moved from problem to solution at line 16
35. Reordered from line 16 to 12
*  Indented line 13
38. Moved from solution to problem at line 6
39. Moved from problem to solution at line 13
40. Moved from solution to problem at line 8
41. Moved from problem to solution at line 13
*  Outdented line 13
*  Outdented line 13
52. Reordered from line 16 to 14
Line 18 (8 moves):       System.out.println(s + " is not a palindrome");
24. Moved from problem to solution at line 11
25. Reordered from line 11 to 12
32. Reordered from line 13 to 17
33. Reordered from line 17 to 16
48. Reordered from line 18 to 14
*  Outdented line 14
49. Reordered from line 14 to 13
50. Reordered from line 13 to 14
Line 19 (1 moves):     }}
4. Moved from problem to solution at line 2
Line 9 (5) (4 moves):     while (low < high {
12. Moved from problem to solution at line 9
13. Reordered from line 9 to 8
18. Moved from solution to problem at line 11
19. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
20. Moved from problem to trash at line 1
Your Grade:
You took 55 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500918240584
Time spent on this problem: 684 seconds
<HR>
