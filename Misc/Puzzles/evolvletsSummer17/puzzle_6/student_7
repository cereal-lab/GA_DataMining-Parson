Problem No. 6
Using Template # 100
The Problem:
public static void main(String[] args) {
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
public class StringOperation {
else if (s1.compareTo(s2) == 0) // This is Line X
else if (s1 == s2) // This line should be written before Line X
String s1 = "Hello World", s2 = "Hello Worlds";
System.out.println(s1 + " and " +s2 + " are same object");
System.out.println("Neither same content nor same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
}}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: 	}}
2. Moved from problem to solution at line 1: 			System.out.println("Neither same content nor same object");
3. Moved from problem to solution at line 1: 		else
4. Moved from problem to solution at line 1: 			System.out.println(s1 + " and " +s2 + " are same object");
5. Moved from problem to solution at line 1: 		else if (s1.compareTo(s2) == 0) // This is Line X
6. Moved from problem to solution at line 1: 		else if (s1 == s2) // This line should be written before Line X
7. Moved from problem to solution at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Moved from problem to solution at line 1: 		if (s1.equals(s2))
9. Moved from problem to solution at line 1: 		String s1 = "Hello World", s2 = "Hello Worlds";
10. Moved from problem to solution at line 1: 	public static void main(String[] args) {
11. Moved from problem to solution at line 1: public class StringOperation {
12. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
13. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1500858510596
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
14. Reordered from line 7 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1500858529484
This line is not in its correct location: 		else
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
15. Reordered from line 9 to 7: 		else
16. Reordered from line 7 to 6: 		else
17. Reordered from line 6 to 5: 		else
Submit Parsons Solution clicked @ 1500858563412
This line is not in its correct location: 		else
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Reordered from line 5 to 7: 		else
Submit Parsons Solution clicked @ 1500858573591
This line is not in its correct location: 		else
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Reordered from line 7 to 8: 		else
Submit Parsons Solution clicked @ 1500858580133
This line is not in its correct location: 		else
Move this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 8 to 9: 		else
Submit Parsons Solution clicked @ 1500858584974
This line is not in its correct location: 		else
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 9 to 10: 		else
Submit Parsons Solution clicked @ 1500858592132
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 11 to 10: 	}}
23. Reordered from line 10 to 11: 	}}
Submit Parsons Solution clicked @ 1500858611726
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 9 to 7: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1500858623565
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 5: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1500858632732
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858633626
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 10 to 8: 		else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
27. Reordered from line 7 to 8: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1500858640804
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858641260
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858641438
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858641617
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858641763
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858641935
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858642074
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858642205
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 11 to 9: 	}}
29. Reordered from line 8 to 3: 		else if (s1 == s2) // This line should be written before Line X
30. Reordered from line 2 to 8: 	public static void main(String[] args) {
31. Reordered from line 7 to 11: 		else
Submit Parsons Solution clicked @ 1500858645733
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858646200
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858646449
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858646658
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858647006
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858647334
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500858647632
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 	public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1500858648596
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
11. Moved from problem to solution at line 1
Line 6 (3 moves): 		else if (s1 == s2) // This line should be written before Line X
6. Moved from problem to solution at line 1
27. Reordered from line 7 to 8
29. Reordered from line 8 to 3
Line 3 (1 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
9. Moved from problem to solution at line 1
Line 4 (1 moves): 		if (s1.equals(s2))
8. Moved from problem to solution at line 1
Line 11 (3 moves): 			System.out.println("Neither same content nor same object");
2. Moved from problem to solution at line 1
24. Reordered from line 9 to 7
25. Reordered from line 7 to 5
Line 5 (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
7. Moved from problem to solution at line 1
Line 2 (2 moves): 	public static void main(String[] args) {
10. Moved from problem to solution at line 1
30. Reordered from line 2 to 8
Line 12 (4 moves): 	}}
1. Moved from problem to solution at line 0
22. Reordered from line 11 to 10
23. Reordered from line 10 to 11
28. Reordered from line 11 to 9
Line 7 (1 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
4. Moved from problem to solution at line 1
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
5. Moved from problem to solution at line 1
14. Reordered from line 7 to 8
Line 10 (10 moves): 		else
3. Moved from problem to solution at line 1
15. Reordered from line 9 to 7
16. Reordered from line 7 to 6
17. Reordered from line 6 to 5
18. Reordered from line 5 to 7
19. Reordered from line 7 to 8
20. Reordered from line 8 to 9
21. Reordered from line 9 to 10
26. Reordered from line 10 to 8
31. Reordered from line 7 to 11
Line 9 (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
12. Moved from problem to trash at line 0
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
13. Moved from problem to trash at line 1
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 31 steps before bailing out of a Parsons puzzle containing 13 lines of code.
Your answer so far is as follows:
public class StringOperation {
else if (s1 == s2) // This line should be written before Line X
String s1 = "Hello World", s2 = "Hello Worlds";
if (s1.equals(s2))
System.out.println("Neither same content nor same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
public static void main(String[] args) {
}}
System.out.println(s1 + " and " +s2 + " are same object");
else if (s1.compareTo(s2) == 0) // This is Line X
else
The lines you deleted so far are as follows:
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
The correct answer is as follows:
public class StringOperation {
public static void main(String[] args) {
String s1 = "Hello World", s2 = "Hello Worlds";
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
else if (s1 == s2) // This line should be written before Line X
System.out.println(s1 + " and " +s2 + " are same object");
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
else
System.out.println("Neither same content nor same object");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1500858651618
Time spent on this problem: 1256 seconds
<HR>
