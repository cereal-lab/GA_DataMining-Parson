Problem No. 6
Using Template # 100
The Problem:
public class StringOperation {
}}
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
String s1 = "Hello World", s2 = "Hello Worlds";
else if (s1 == s2) // This line should be written before Line X
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println(s1 + " and " +s2 + " are same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println("Neither same content nor same object");
else
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: 	}}
2. Moved from problem to solution at line 1: public class StringOperation {
3. Moved from problem to solution at line 2: 	public static void main(String[] args) {
4. Reordered from line 3 to 2: 	}}
5. Reordered from line 3 to 2: 	public static void main(String[] args) {
6. Moved from problem to solution at line 3: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
7. Moved from problem to solution at line 4: 		String s1 = "Hello World", s2 = "Hello Worlds";
8. Moved from problem to solution at line 5: 		if (s1.equals(s2))
9. Moved from problem to solution at line 6: 			System.out.println(s1 + " and " +s2 + " are same object");
10. Moved from problem to solution at line 7: 		else if (s1 == s2) // This line should be written before Line X
11. Moved from problem to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
12. Moved from problem to solution at line 9: 		else if (s1.compareTo(s2) == 0) // This is Line X
13. Moved from solution to trash at line 0: 		else if (s1 == s2) // This line should be written before Line X
14. Moved from solution to problem at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
15. Moved from trash to solution at line 7: 		else if (s1 == s2) // This line should be written before Line X
16. Moved from problem to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
17. Moved from problem to solution at line 10: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
18. Moved from problem to solution at line 11: 		else
19. Moved from problem to solution at line 12: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1500478248192
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 		String s1 = "Hello World", s2 = "Hello Worlds";
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 4 to 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
Submit Parsons Solution clicked @ 1500478265364
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 		if (s1.equals(s2))
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 5 to 4: 		if (s1.equals(s2))
Submit Parsons Solution clicked @ 1500478277282
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 8 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
23. Reordered from line 6 to 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
24. Reordered from line 9 to 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1500478313516
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from solution to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1500478379002
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 9 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500478395459
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 6: 		else if (s1 == s2) // This line should be written before Line X
28. Reordered from line 9 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1500478417550
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
2. Moved from problem to solution at line 1
Line 2 (2 moves): 	public static void main(String[] args) {
3. Moved from problem to solution at line 2
5. Reordered from line 3 to 2
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
7. Moved from problem to solution at line 4
20. Reordered from line 4 to 3
Line 4 (2 moves): 		if (s1.equals(s2))
8. Moved from problem to solution at line 5
21. Reordered from line 5 to 4
Line 5 (4 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
11. Moved from problem to solution at line 8
14. Moved from solution to problem at line 5
17. Moved from problem to solution at line 10
26. Reordered from line 9 to 5
Line 6 (4 moves): 		else if (s1 == s2) // This line should be written before Line X
10. Moved from problem to solution at line 7
13. Moved from solution to trash at line 0
15. Moved from trash to solution at line 7
27. Reordered from line 7 to 6
Line 7 (1 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
9. Moved from problem to solution at line 6
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
12. Moved from problem to solution at line 9
28. Reordered from line 9 to 8
Line 9 (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
6. Moved from problem to solution at line 3
23. Reordered from line 6 to 9
24. Reordered from line 9 to 8
Line 10 (1 moves): 		else
18. Moved from problem to solution at line 11
Line 11 (1 moves): 			System.out.println("Neither same content nor same object");
19. Moved from problem to solution at line 12
Line 12 (2 moves): 	}}
1. Moved from problem to solution at line 0
4. Reordered from line 3 to 2
Line 5 (16) (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
16. Moved from problem to solution at line 8
22. Reordered from line 8 to 5
25. Moved from solution to trash at line 0
Your Grade:
You took 28 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1500478420503
Time spent on this problem: 509 seconds
<HR>
