Problem No. 7
Using Template # 100
The Problem:
if (isPalindrome)
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
while while (low <= high) {
while (low < high) {
else
}
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
isPalindrome = false;
}}
low++; high--;
System.out.println(s + " is not a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
3. Moved from problem to solution at line 1:     else
4. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
5. Moved from problem to trash at line 0:    while while (low <= high) {
6. Moved from problem to solution at line 1:     while (low < high) {
7. Moved from problem to solution at line 1:   public static void main(String[] args) {
8. Moved from problem to solution at line 3:       }
9. Moved from problem to solution at line 4:     if (isPalindrome)
10. Reordered from line 7 to 5:       System.out.println(s + " is a palindrome");
11. Reordered from line 6 to 8:       System.out.println(s + " is not a palindrome");
12. Reordered from line 8 to 7:       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 1: public class Palindrome {
14. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
15. Moved from problem to solution at line 1: import java.util.Scanner;
16. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
17. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
18. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
19. Moved from problem to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
20. Moved from problem to solution at line 10:         break;}
21. Moved from problem to solution at line 10:         isPalindrome = false;
22. Moved from problem to solution at line 12:       low++; high--;
23. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500591376827
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 5 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500591439421
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
15. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
13. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
7. Moved from problem to solution at line 1
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
14. Moved from problem to solution at line 3
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
17. Moved from problem to solution at line 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
18. Moved from problem to solution at line 5
25. Reordered from line 5 to 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
6. Moved from problem to solution at line 1
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
19. Moved from problem to solution at line 9
Line 11 (1 moves):         isPalindrome = false;
21. Moved from problem to solution at line 10
Line 12 (1 moves):         break;}
20. Moved from problem to solution at line 10
Line 13 (1 moves):       low++; high--;
22. Moved from problem to solution at line 12
Line 14 (1 moves):       }
8. Moved from problem to solution at line 3
Line 15 (1 moves):     if (isPalindrome)
9. Moved from problem to solution at line 4
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
2. Moved from problem to solution at line 1
10. Reordered from line 7 to 5
Line 17 (1 moves):     else
3. Moved from problem to solution at line 1
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
4. Moved from problem to solution at line 1
11. Reordered from line 6 to 8
12. Reordered from line 8 to 7
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
5. Moved from problem to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to trash at line 1
Your Grade:
You took 25 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500591470400
Time spent on this problem: 666 seconds
<HR>
