Problem No. 2
Using Template # 100
The Problem:
sum += data;
}}
Scanner input = new Scanner(System.in); // This is line X
} while (data != 0);
import java.util.Scanner;
System.out.print("Enter an int value (the program exits if the input is 0): ");
public static void main(String[] args) {
data = sum = 0;
int data, sum;   //This line should immediately be placed before Line X
System.out.println("The sum is " + sum);
Public class TestDoWhile {
public class TestDoWhile {
data = input.nextInt();
do{
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 14 lines.
Re-assemble them with 15 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class TestDoWhile {
2. Moved from problem to solution at line 1:     } while (data != 0);
3. Reordered from line 1 to 2:     } while (data != 0);
4. Moved from problem to solution at line 2:     do{
5. Reordered from line 2 to 3:     do{
6. Moved from problem to solution at line 1: import java.util.Scanner;
7. Moved from problem to solution at line 4:       System.out.print("Enter an int value (the program exits if the input is 0): ");
8. Reordered from line 4 to 5:       System.out.print("Enter an int value (the program exits if the input is 0): ");
9. Moved from problem to solution at line 5:     int data, sum;   //This line should immediately be placed before Line X
10. Reordered from line 5 to 6:     int data, sum;   //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); // This is line X
12. Reordered from line 6 to 7:     Scanner input = new Scanner(System.in); // This is line X
13. Moved from problem to solution at line 2:   public static void main(String[] args) {
14. Moved from problem to solution at line 8:       data = input.nextInt();
15. Reordered from line 8 to 9:       data = input.nextInt();
16. Moved from problem to solution at line 9:       sum += data;
17. Reordered from line 9 to 10:       sum += data;
18. Moved from problem to solution at line 10:     System.out.println("The sum is " + sum);
19. Reordered from line 10 to 11:     System.out.println("The sum is " + sum);
20. Moved from problem to trash at line 0:     data = sum = 0;
21. Moved from problem to trash at line 1: Public class TestDoWhile {
22. Moved from problem to solution at line 11:  }}
23. Reordered from line 11 to 12:  }}
Submit Parsons Solution clicked @ 1500657478707
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: public class TestDoWhile {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 3 to 2: public class TestDoWhile {
Submit Parsons Solution clicked @ 1500657495359
This line is not in its correct location:     } while (data != 0);
Move this line in its place:     int data, sum;   //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 4:     int data, sum;   //This line should immediately be placed before Line X
26. Reordered from line 8 to 5:     Scanner input = new Scanner(System.in); // This is line X
Submit Parsons Solution clicked @ 1500657518504
This line is not in its correct location:     } while (data != 0);
Insert this line in its place:     data = sum = 0;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from trash to solution at line 6:     data = sum = 0;
Submit Parsons Solution clicked @ 1500657532427
This line is not in its correct location:     } while (data != 0);
Move this line in its place:     do{
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 8 to 7:     do{
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500657542962
This line is not in its correct location:     } while (data != 0);
Move this line in its place:       System.out.print("Enter an int value (the program exits if the input is 0): ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 9 to 8:       System.out.print("Enter an int value (the program exits if the input is 0): ");
Submit Parsons Solution clicked @ 1500657557771
This line is not in its correct location:     } while (data != 0);
Move this line in its place:       data = input.nextInt();
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 10 to 9:       data = input.nextInt();
31. Reordered from line 11 to 10:       sum += data;
Submit Parsons Solution clicked @ 1500657573721
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
6. Moved from problem to solution at line 1
Line 2 (2 moves): public class TestDoWhile {
1. Moved from problem to solution at line 0
24. Reordered from line 3 to 2
Line 3 (1 moves):   public static void main(String[] args) {
13. Moved from problem to solution at line 2
Line 4 (3 moves):     int data, sum;   //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
10. Reordered from line 5 to 6
25. Reordered from line 7 to 4
Line 5 (3 moves):     Scanner input = new Scanner(System.in); // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
26. Reordered from line 8 to 5
Line 6 (2 moves):     data = sum = 0;
20. Moved from problem to trash at line 0
27. Moved from trash to solution at line 6
Line 7 (3 moves):     do{
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
28. Reordered from line 8 to 7
Line 8 (3 moves):       System.out.print("Enter an int value (the program exits if the input is 0): ");
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
29. Reordered from line 9 to 8
Line 9 (3 moves):       data = input.nextInt();
14. Moved from problem to solution at line 8
15. Reordered from line 8 to 9
30. Reordered from line 10 to 9
Line 10 (3 moves):       sum += data;
16. Moved from problem to solution at line 9
17. Reordered from line 9 to 10
31. Reordered from line 11 to 10
Line 11 (2 moves):     } while (data != 0);
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 12 (2 moves):     System.out.println("The sum is " + sum);
18. Moved from problem to solution at line 10
19. Reordered from line 10 to 11
Line 13 (2 moves):  }}
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
Line 2 (33) (1 moves): Public class TestDoWhile {
21. Moved from problem to trash at line 1
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 14 lines of code.
Next Problem clicked @ 1500657587359
Time spent on this problem: 319 seconds
<HR>
