Problem No. 2
Using Template # 100
The Problem:
}}
Scanner input = new Scanner(System.in); // This is line X
} while (data != 0);
System.out.print("Enter an int value (the program exits if the input is 0): ");
data = input.nextInt();
System.out.println("The sum is " + sum);
sum += data;
int data, sum;   //This line should immediately be placed before Line X
import java.util.Scanner;
public static void main(String[] args) {
data = sum = 0;
do{
Public class TestDoWhile {
public class TestDoWhile {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 14 lines.
Re-assemble them with 15 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:     do{
5. Reordered from line 3 to 2:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:       System.out.print("Enter an int value (the program exits if the input is 0): ");
7. Reordered from line 4 to 3:     do{
8. Moved from problem to solution at line 4:  }}
9. Reordered from line 5 to 4:       System.out.print("Enter an int value (the program exits if the input is 0): ");
10. Moved from problem to solution at line 4:     System.out.println("The sum is " + sum);
11. Reordered from line 5 to 4:       System.out.print("Enter an int value (the program exits if the input is 0): ");
12. Moved from problem to solution at line 6:       sum += data;
13. Reordered from line 6 to 5:       sum += data;
14. Moved from problem to solution at line 3:     } while (data != 0);
15. Reordered from line 3 to 5:     } while (data != 0);
16. Moved from problem to solution at line 6:       data = input.nextInt();
17. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); // This is line X
18. Reordered from line 4 to 5:     Scanner input = new Scanner(System.in); // This is line X
19. Moved from problem to solution at line 5:     int data, sum;   //This line should immediately be placed before Line X
20. Moved from problem to solution at line 9:     data = sum = 0;
21. Moved from problem to solution at line 3: public class TestDoWhile {
22. Reordered from line 3 to 2: public class TestDoWhile {
23. Reordered from line 1 to 2: import java.util.Scanner;
Submit Parsons Solution clicked @ 1500583302718
Please clear all the lines from the left panel before submitting your answer.
24. Moved from problem to solution at line 2: Public class TestDoWhile {
Submit Parsons Solution clicked @ 1500583315148
This line is not in its correct location: public class TestDoWhile {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 2 to 1: Public class TestDoWhile {
Submit Parsons Solution clicked @ 1500583321231
Sorry, that line has a bug
Delete this line: Public class TestDoWhile {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 3 to 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1500583325877
Sorry, that line has a bug
Delete this line: Public class TestDoWhile {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 3 to 2: public class TestDoWhile {
Submit Parsons Solution clicked @ 1500583333663
Sorry, that line has a bug
Delete this line: Public class TestDoWhile {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from solution to trash at line 0: Public class TestDoWhile {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500583346859
This line is not in its correct location:     do{
Move this line in its place:     int data, sum;   //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 10 to 4:     data = sum = 0;
Submit Parsons Solution clicked @ 1500583360819
This line is not in its correct location:     data = sum = 0;
Move this line in its place:     int data, sum;   //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 7 to 4:     int data, sum;   //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500583371011
This line is not in its correct location:     data = sum = 0;
Move this line in its place:     Scanner input = new Scanner(System.in); // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 8 to 5:     Scanner input = new Scanner(System.in); // This is line X
32. Reordered from line 6 to 9:     data = sum = 0;
Submit Parsons Solution clicked @ 1500583391829
This line is not in its correct location:     do{
Move this line in its place:     data = sum = 0;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 9 to 6:     data = sum = 0;
Submit Parsons Solution clicked @ 1500583397076
This line is not in its correct location:     } while (data != 0);
Move this line in its place:       data = input.nextInt();
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 10 to 9:       data = input.nextInt();
Submit Parsons Solution clicked @ 1500583405877
This line is not in its correct location:     } while (data != 0);
Move this line in its place:       sum += data;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 11 to 10:       sum += data;
Submit Parsons Solution clicked @ 1500583412443
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (4 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
23. Reordered from line 1 to 2
26. Reordered from line 3 to 1
Line 2 (3 moves): public class TestDoWhile {
21. Moved from problem to solution at line 3
22. Reordered from line 3 to 2
27. Reordered from line 3 to 2
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
5. Reordered from line 3 to 2
Line 4 (2 moves):     int data, sum;   //This line should immediately be placed before Line X
19. Moved from problem to solution at line 5
30. Reordered from line 7 to 4
Line 5 (3 moves):     Scanner input = new Scanner(System.in); // This is line X
17. Moved from problem to solution at line 4
18. Reordered from line 4 to 5
31. Reordered from line 8 to 5
Line 6 (4 moves):     data = sum = 0;
20. Moved from problem to solution at line 9
29. Reordered from line 10 to 4
32. Reordered from line 6 to 9
33. Reordered from line 9 to 6
Line 7 (2 moves):     do{
4. Moved from problem to solution at line 2
7. Reordered from line 4 to 3
Line 8 (3 moves):       System.out.print("Enter an int value (the program exits if the input is 0): ");
6. Moved from problem to solution at line 3
9. Reordered from line 5 to 4
11. Reordered from line 5 to 4
Line 9 (2 moves):       data = input.nextInt();
16. Moved from problem to solution at line 6
34. Reordered from line 10 to 9
Line 10 (3 moves):       sum += data;
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 5
35. Reordered from line 11 to 10
Line 11 (2 moves):     } while (data != 0);
14. Moved from problem to solution at line 3
15. Reordered from line 3 to 5
Line 12 (1 moves):     System.out.println("The sum is " + sum);
10. Moved from problem to solution at line 4
Line 13 (1 moves):  }}
8. Moved from problem to solution at line 4
Line 2 (33) (3 moves): Public class TestDoWhile {
24. Moved from problem to solution at line 2
25. Reordered from line 2 to 1
28. Moved from solution to trash at line 0
Your Grade:
You took 35 steps to solve a Parsons puzzle containing 14 lines of code.
Next Problem clicked @ 1500583460296
Time spent on this problem: 418 seconds
<HR>
