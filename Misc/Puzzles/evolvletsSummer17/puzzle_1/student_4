Problem No. 1
Using Template # 100
The Problem:
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
while (low < high {
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
low++; high--;
}
break;}
if (isPalindrome)
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
isPalindrome = false;
else
}}
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
while (low < high {
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
low++; high--;
}
break;}
if (isPalindrome)
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
isPalindrome = false;
else
}}
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 3:     int low, high, isPalindrome;          // This is line Y
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3:     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Reordered from line 6 to 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 7:     while (low < high) {
10. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 9:       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 9:       }
13. Moved from problem to solution at line 11:     while (low < high {
14. Moved from problem to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 13:       System.out.println(s + " is a palindrome");
16. Moved from problem to solution at line 13:         break;}
17. Moved from problem to solution at line 10:         isPalindrome = false;
18. Moved from problem to solution at line 15:       low++; high--;
19. Reordered from line 15 to 16:       low++; high--;
20. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 16:     if (isPalindrome)
22. Moved from problem to solution at line 17:     else
23. Reordered from line 15 to 18:         break;}
24. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
25. Moved from problem to solution at line 20:     }}
26. Reordered from line 21 to 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1500944468806
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 4 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500944492682
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500944504718
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500944512856
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 8 to 6:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500944519282
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 6 to 7:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500944534242
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500944543278
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 8 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500944551900
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500944552930
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 8 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500944566048
This line is not in its correct location:       }
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 11 to 12:       }
Submit Parsons Solution clicked @ 1500944574088
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 12 to 19:       }
Submit Parsons Solution clicked @ 1500944579560
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 12 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500944586420
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from solution to trash at line 0:     while (low < high {
Submit Parsons Solution clicked @ 1500944596400
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500944603146
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 12 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500944614406
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 12 to 14:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1500944621115
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 12 to 13:     else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500944626022
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 13 to 18:     else
Submit Parsons Solution clicked @ 1500944631926
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 13 to 17:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1500944641376
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 13 to 16:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500944648722
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 13 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500944655780
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 13 to 14:       }
Submit Parsons Solution clicked @ 1500944661564
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500944672224
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 16 to 17:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500944678728
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1500944687586
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
26. Reordered from line 21 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
8. Reordered from line 6 to 5
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 3
27. Reordered from line 4 to 6
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 3
28. Reordered from line 4 to 5
29. Reordered from line 5 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
4. Moved from problem to solution at line 3
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
9. Moved from problem to solution at line 7
34. Reordered from line 8 to 9
Line 10 (5 moves):       if (s.charAt(low) != s.charAt(high)) {
20. Moved from problem to solution at line 7
30. Reordered from line 8 to 6
31. Reordered from line 6 to 7
32. Reordered from line 7 to 8
33. Reordered from line 8 to 10
Line 11 (1 moves):         isPalindrome = false;
17. Moved from problem to solution at line 10
Line 12 (2 moves):         break;}
16. Moved from problem to solution at line 13
23. Reordered from line 15 to 18
Line 13 (2 moves):       low++; high--;
18. Moved from problem to solution at line 15
19. Reordered from line 15 to 16
Line 14 (4 moves):       }
12. Moved from problem to solution at line 9
35. Reordered from line 11 to 12
36. Reordered from line 12 to 19
47. Reordered from line 13 to 14
Line 15 (3 moves):     if (isPalindrome)
21. Moved from problem to solution at line 16
40. Reordered from line 12 to 15
45. Reordered from line 13 to 16
Line 16 (4 moves):       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 13
24. Reordered from line 17 to 16
41. Reordered from line 12 to 14
44. Reordered from line 13 to 17
Line 17 (4 moves):     else
22. Moved from problem to solution at line 17
42. Reordered from line 12 to 13
43. Reordered from line 13 to 18
50. Reordered from line 18 to 17
Line 18 (5 moves):       System.out.println(s + " is not a palindrome");
11. Moved from problem to solution at line 9
37. Reordered from line 12 to 18
46. Reordered from line 13 to 15
48. Reordered from line 15 to 16
49. Reordered from line 16 to 17
Line 19 (1 moves):     }}
25. Moved from problem to solution at line 20
Line 9 (5) (2 moves):     while (low < high {
13. Moved from problem to solution at line 11
38. Moved from solution to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 12
39. Moved from solution to trash at line 1
Your Grade:
You took 50 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500944692154
Time spent on this problem: 481 seconds
<HR>
