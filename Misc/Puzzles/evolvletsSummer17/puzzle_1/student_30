Problem No. 1
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
String s = input.nextLine();          // This is line X
while (low < high) {
while (low < high {
public static void main(String[] args) {
import java.util.Scanner;
System.out.println(s + " is a palindrome");
}}
public class Palindrome {
break;}
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}
else
if (isPalindrome)
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
String s = input.nextLine();          // This is line X
while (low < high) {
while (low < high {
public static void main(String[] args) {
import java.util.Scanner;
System.out.println(s + " is a palindrome");
}}
public class Palindrome {
break;}
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}
else
if (isPalindrome)
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
3. Moved from problem to solution at line 1: import java.util.Scanner;
4. Reordered from line 2 to 3:       System.out.println(s + " is a palindrome");
5. Moved from problem to trash at line 0:     while (low < high {
6. Moved from problem to solution at line 3:     while (low < high) {
7. Reordered from line 4 to 3:       System.out.println(s + " is a palindrome");
*  Outdented line 4:     while (low < high) {
*  Indented line 4:     while (low < high) {
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Reordered from line 4 to 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 6:       }
13. Reordered from line 6 to 7:       }
14. Reordered from line 7 to 6:       }
15. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
17. Moved from problem to solution at line 3:   public static void main(String[] args) {
18. Reordered from line 4 to 10:       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
20. Moved from problem to solution at line 9:       low++; high--;
21. Moved from problem to solution at line 10:     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 11:     low= 1; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 12:         isPalindrome = false;
24. Moved from problem to solution at line 12:     if (isPalindrome)
25. Reordered from line 16 to 13:       System.out.println(s + " is a palindrome");
26. Moved from problem to solution at line 14:     else
27. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
28. Moved from problem to solution at line 18:         break;}
29. Moved from problem to solution at line 19:     }}
Submit Parsons Solution clicked @ 1500925231619
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500925245863
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500925251567
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 10 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500925262015
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 20 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500925267313
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 17 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500925272041
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 19 to 12:         break;}
Submit Parsons Solution clicked @ 1500925275882
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500925284147
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1500925288291
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
3. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (1 moves):   public static void main(String[] args) {
17. Moved from problem to solution at line 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
10. Reordered from line 5 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 6
30. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
16. Moved from problem to solution at line 7
31. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 10
32. Reordered from line 10 to 8
Line 9 (4 moves):     while (low < high) {
6. Moved from problem to solution at line 3
*  Outdented line 4
*  Indented line 4
33. Reordered from line 20 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
19. Moved from problem to solution at line 8
Line 11 (2 moves):         isPalindrome = false;
23. Moved from problem to solution at line 12
34. Reordered from line 17 to 11
Line 12 (2 moves):         break;}
28. Moved from problem to solution at line 18
35. Reordered from line 19 to 12
Line 13 (1 moves):       low++; high--;
20. Moved from problem to solution at line 9
Line 14 (4 moves):       }
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
14. Reordered from line 7 to 6
37. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
24. Moved from problem to solution at line 12
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
2. Moved from problem to solution at line 1
4. Reordered from line 2 to 3
7. Reordered from line 4 to 3
18. Reordered from line 4 to 10
25. Reordered from line 16 to 13
Line 17 (1 moves):     else
26. Moved from problem to solution at line 14
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
27. Moved from problem to solution at line 15
Line 19 (1 moves):     }}
29. Moved from problem to solution at line 19
Line 9 (5) (1 moves):     while (low < high {
5. Moved from problem to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 11
36. Moved from solution to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500925294098
Time spent on this problem: 349 seconds
<HR>
