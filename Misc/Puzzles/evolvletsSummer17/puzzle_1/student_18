Problem No. 1
Using Template # 100
The Problem:
if (isPalindrome)
else
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
public class Palindrome {
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
System.out.println(s + " is a palindrome");
isPalindrome = false;
low++; high--;
}}
int low, high, isPalindrome;          // This is line Y
while while (low <= high) {
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
if (isPalindrome)
else
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
public class Palindrome {
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
System.out.println(s + " is a palindrome");
isPalindrome = false;
low++; high--;
}}
int low, high, isPalindrome;          // This is line Y
while while (low <= high) {
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 1 to 2:     }}
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 9:       low++; high--;
12. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 9:     while (low < high) {
14. Moved from problem to solution at line 11:         isPalindrome = false;
15. Moved from problem to solution at line 12:         break;}
16. Moved from problem to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to trash at line 1:    while while (low <= high) {
18. Moved from problem to solution at line 14:     if (isPalindrome)
19. Moved from problem to solution at line 14:       }
20. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
21. Moved from problem to solution at line 17:     else
22. Moved from problem to solution at line 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500581412307
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from solution to trash at line 2:       low++; high--;
24. Moved from trash to solution at line 12:       low++; high--;
25. Moved from solution to trash at line 2:         break;}
Submit Parsons Solution clicked @ 1500581523678
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
27. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500581574369
This line is not in its correct location:       low++; high--;
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1500581602649
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 6
26. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7
27. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
13. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 8
Line 11 (1 moves):         isPalindrome = false;
14. Moved from problem to solution at line 11
Line 12 (3 moves):         break;}
15. Moved from problem to solution at line 12
25. Moved from solution to trash at line 2
28. Moved from trash to solution at line 12
Line 13 (3 moves):       low++; high--;
11. Moved from problem to solution at line 9
23. Moved from solution to trash at line 2
24. Moved from trash to solution at line 12
Line 14 (1 moves):       }
19. Moved from problem to solution at line 14
Line 15 (1 moves):     if (isPalindrome)
18. Moved from problem to solution at line 14
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 16
Line 17 (1 moves):     else
21. Moved from problem to solution at line 17
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 18
Line 19 (2 moves):     }}
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
17. Moved from problem to trash at line 1
Your Grade:
You took 28 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500581617857
Time spent on this problem: 808 seconds
<HR>
