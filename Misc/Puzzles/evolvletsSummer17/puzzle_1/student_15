Problem No. 1
Using Template # 100
The Problem:
}
public static void main(String[] args) {
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
if (s.charAt(low) != s.charAt(high)) {
}}
int low, high, isPalindrome;          // This is line Y
while while (low <= high) {
while (low < high) {
public class Palindrome {
if (isPalindrome)
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
System.out.println(s + " is not a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
isPalindrome = false;
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
}
public static void main(String[] args) {
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
if (s.charAt(low) != s.charAt(high)) {
}}
int low, high, isPalindrome;          // This is line Y
while while (low <= high) {
while (low < high) {
public class Palindrome {
if (isPalindrome)
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
System.out.println(s + " is not a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
isPalindrome = false;
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 4 to 3:   public static void main(String[] args) {
8. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
9. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 5:     }}
11. Reordered from line 6 to 5:     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 6:       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 6:     else
14. Moved from problem to solution at line 6:       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 6:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 6:         break;}
17. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
18. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
19. Moved from problem to solution at line 11:         isPalindrome = false;
20. Reordered from line 11 to 12:         isPalindrome = false;
21. Moved from problem to solution at line 10:     if (isPalindrome)
22. Moved from problem to solution at line 10:       low++; high--;
23. Reordered from line 10 to 11:       low++; high--;
24. Reordered from line 8 to 9:         break;}
25. Reordered from line 8 to 9:       if (s.charAt(low) != s.charAt(high)) {
26. Reordered from line 10 to 8:     if (isPalindrome)
27. Reordered from line 8 to 10:     if (isPalindrome)
28. Reordered from line 11 to 9:       low++; high--;
29. Reordered from line 10 to 9:       if (s.charAt(low) != s.charAt(high)) {
30. Reordered from line 8 to 10:         break;}
31. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
32. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
33. Moved from problem to solution at line 10:    while while (low <= high) {
34. Moved from problem to solution at line 13:     while (low < high) {
35. Moved from solution to trash at line 0:     while (low < high) {
36. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1500479092386
Please clear all the lines from the left panel before submitting your answer.
37. Moved from trash to problem at line 21:    while while (low <= high) {
38. Moved from trash to problem at line 21:     while (low < high) {
Submit Parsons Solution clicked @ 1500479102535
Please clear all the lines from the left panel before submitting your answer.
39. Moved from problem to trash at line 0:     while (low < high) {
40. Moved from problem to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1500479118195
Please clear all the lines from the left panel before submitting your answer.
41. Moved from problem to solution at line 11:       }
42. Reordered from line 11 to 12:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1500479139935
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
44. Moved from solution to trash at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500479156417
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 8 to 7:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500479168413
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500479175919
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500479191832
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Moved from trash to solution at line 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1500479204920
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Moved from solution to trash at line 2:    while while (low <= high) {
Submit Parsons Solution clicked @ 1500479218790
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1500479227767
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 14 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500479239433
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 17 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500479248151
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 12 to 16:     if (isPalindrome)
54. Reordered from line 16 to 14:     if (isPalindrome)
Submit Parsons Solution clicked @ 1500479256978
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 15 to 12:         break;}
Submit Parsons Solution clicked @ 1500479263947
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (3 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
5. Reordered from line 3 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
7. Reordered from line 4 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
9. Reordered from line 5 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
17. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
18. Moved from problem to solution at line 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 4
11. Reordered from line 6 to 5
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
31. Moved from problem to solution at line 8
44. Moved from solution to trash at line 2
47. Moved from trash to solution at line 8
Line 9 (5 moves):     while (low < high) {
34. Moved from problem to solution at line 13
35. Moved from solution to trash at line 0
38. Moved from trash to problem at line 21
39. Moved from problem to trash at line 0
50. Moved from trash to solution at line 9
Line 10 (5 moves):       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 6
25. Reordered from line 8 to 9
29. Reordered from line 10 to 9
45. Reordered from line 8 to 7
46. Reordered from line 7 to 8
Line 11 (3 moves):         isPalindrome = false;
19. Moved from problem to solution at line 11
20. Reordered from line 11 to 12
52. Reordered from line 17 to 11
Line 12 (4 moves):         break;}
16. Moved from problem to solution at line 6
24. Reordered from line 8 to 9
30. Reordered from line 8 to 10
55. Reordered from line 15 to 12
Line 13 (3 moves):       low++; high--;
22. Moved from problem to solution at line 10
23. Reordered from line 10 to 11
28. Reordered from line 11 to 9
Line 14 (2 moves):       }
41. Moved from problem to solution at line 11
42. Reordered from line 11 to 12
Line 15 (6 moves):     if (isPalindrome)
21. Moved from problem to solution at line 10
26. Reordered from line 10 to 8
27. Reordered from line 8 to 10
51. Reordered from line 14 to 11
53. Reordered from line 12 to 16
54. Reordered from line 16 to 14
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
14. Moved from problem to solution at line 6
Line 17 (1 moves):     else
13. Moved from problem to solution at line 6
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 6
Line 19 (1 moves):     }}
10. Moved from problem to solution at line 5
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
32. Moved from problem to solution at line 8
43. Moved from solution to trash at line 2
Line 9 (37) (6 moves):    while while (low <= high) {
33. Moved from problem to solution at line 10
36. Moved from solution to trash at line 1
37. Moved from trash to problem at line 21
40. Moved from problem to trash at line 1
48. Moved from trash to solution at line 9
49. Moved from solution to trash at line 2
Your Grade:
You took 55 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1500479269980
Time spent on this problem: 1443 seconds
<HR>
