Problem No. 1
Using Template # 100
The Problem:
String s = input.nextLine();          // This is line X
break;}
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
}}
System.out.println(s + " is not a palindrome");
}
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
while (low < high) {
while (low < high {
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
String s = input.nextLine();          // This is line X
break;}
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
}}
System.out.println(s + " is not a palindrome");
}
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
while (low < high) {
while (low < high {
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
Submit Parsons Solution clicked @ 1500761706637
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761707529
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761708010
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761708441
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761708862
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761709284
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761709706
Please clear all the lines from the left panel before submitting your answer.
4. Moved from problem to solution at line 2:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500761718720
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761719582
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761720184
Please clear all the lines from the left panel before submitting your answer.
7. Moved from problem to solution at line 5:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500761723592
Please clear all the lines from the left panel before submitting your answer.
8. Moved from problem to solution at line 6:     while (low < high) {
Submit Parsons Solution clicked @ 1500761727031
Please clear all the lines from the left panel before submitting your answer.
9. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500761731071
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761731412
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761731742
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761732013
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761732293
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761732564
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761732785
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761733035
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761733276
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761733487
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761733667
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761734078
Please clear all the lines from the left panel before submitting your answer.
10. Moved from problem to solution at line 8:       System.out.println(s + " is a palindrome");
11. Moved from problem to solution at line 9:   public static void main(String[] args) {
12. Moved from problem to trash at line 0:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 10:     while (low < high {
14. Moved from problem to solution at line 11:         isPalindrome = false;
15. Moved from problem to solution at line 12:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 13:     String s = input.nextLine();          // This is line X
17. Moved from problem to solution at line 14:         break;}
Submit Parsons Solution clicked @ 1500761754307
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761754688
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761754969
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761755230
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1500761755460
Please clear all the lines from the left panel before submitting your answer.
18. Moved from problem to solution at line 15:     }}
19. Moved from problem to solution at line 16:       low++; high--;
20. Moved from problem to trash at line 1:     if (isPalindrome)
21. Moved from problem to trash at line 2:     else
22. Moved from problem to solution at line 17:       }
Submit Parsons Solution clicked @ 1500761774344
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761774906
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761775357
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761775708
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 11 to 7:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500761778314
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 12 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500761781581
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 18 to 3: public class Palindrome {
Submit Parsons Solution clicked @ 1500761788167
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 8 to 6:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500761813458
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 13 to 11:     while (low < high {
Submit Parsons Solution clicked @ 1500761816526
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 17 to 14:       low++; high--;
Submit Parsons Solution clicked @ 1500761819262
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 8 to 5:     while (low < high) {
Submit Parsons Solution clicked @ 1500761822109
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 7 to 5:         isPalindrome = false;
Submit Parsons Solution clicked @ 1500761825316
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 1 to 8: import java.util.Scanner;
Submit Parsons Solution clicked @ 1500761828563
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 15 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1500761831170
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 10 to 2:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500761834678
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 12 to 4:     while (low < high {
Submit Parsons Solution clicked @ 1500761838706
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 12 to 8:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1500761841433
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 10 to 7:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1500761844179
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 13 to 11:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1500761847176
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 13 to 6: import java.util.Scanner;
39. Reordered from line 1 to 9:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1500761852117
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 13 to 9:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1500761854782
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 1 to 12:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1500761859243
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761859774
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761860044
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761860314
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761860635
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761860936
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761861237
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1500761861527
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 18:     low= 0; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Explain Parsons Solution clicked @ 1500761866188
Your Answer:
Here is a summary of your actions sorted by line
Line 2 (3 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
25. Reordered from line 18 to 3
Line 9 (5) (3 moves):     while (low < high {
13. Moved from problem to solution at line 10
27. Reordered from line 13 to 11
34. Reordered from line 12 to 4
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
Line 1 (3 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
31. Reordered from line 1 to 8
38. Reordered from line 13 to 6
Line 11 (4 moves):         isPalindrome = false;
14. Moved from problem to solution at line 11
23. Reordered from line 11 to 7
26. Reordered from line 8 to 6
30. Reordered from line 7 to 5
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
6. Moved from problem to solution at line 4
36. Reordered from line 10 to 7
Line 9 (2 moves):     while (low < high) {
8. Moved from problem to solution at line 6
29. Reordered from line 8 to 5
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
7. Moved from problem to solution at line 5
40. Reordered from line 13 to 9
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
4. Moved from problem to solution at line 2
39. Reordered from line 1 to 9
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 7
35. Reordered from line 12 to 8
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
16. Moved from problem to solution at line 13
32. Reordered from line 15 to 6
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 12
24. Reordered from line 12 to 8
33. Reordered from line 10 to 2
41. Reordered from line 1 to 12
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 8
37. Reordered from line 13 to 11
Line 3 (1 moves):   public static void main(String[] args) {
11. Moved from problem to solution at line 9
Line 13 (2 moves):       low++; high--;
19. Moved from problem to solution at line 16
28. Reordered from line 17 to 14
Line 12 (1 moves):         break;}
17. Moved from problem to solution at line 14
Line 19 (1 moves):     }}
18. Moved from problem to solution at line 15
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to trash at line 0
42. Moved from trash to solution at line 18
Line 14 (1 moves):       }
22. Moved from problem to solution at line 17
Line 15 (1 moves):     if (isPalindrome)
20. Moved from problem to trash at line 1
Line 17 (1 moves):     else
21. Moved from problem to trash at line 2
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
public class Palindrome {
while (low < high {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
isPalindrome = false;
low= 1; high = s.length() - 1; isPalindrome = true;
while (low < high) {
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
low++; high--;
break;}
}}
low= 0; high = s.length() - 1; isPalindrome = true;
}
The lines you deleted so far are as follows:
if (isPalindrome)
else
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1500761912175
Time spent on this problem: 343 seconds
<HR>
