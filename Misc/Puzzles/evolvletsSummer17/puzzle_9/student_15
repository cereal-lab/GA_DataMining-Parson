Problem No. 9
Using Template # 100
The Problem:
for (int j = 1; j <= 9; j++) {
for (int i = 1; i <= 9; i++) {
public class MultiplicationTable {
System.out.print("   " + j);
System.out.println("\n-----------------------------------------");
System.out.print("    ");
}}
public static void Main(String[] args) {
public static void main(String[] args) {
System.out.print(i + " | ");
System.out.println("           Multiplication Table");
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.printf("%4d", i * j);}
System.out.println();}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: }}
2. Moved from problem to solution at line 1:   public static void Main(String[] args) {
3. Moved from problem to solution at line 1: public class MultiplicationTable {
4. Moved from problem to solution at line 3:     System.out.println("           Multiplication Table");
5. Moved from solution to trash at line 0:   public static void Main(String[] args) {
6. Moved from problem to solution at line 2:   public static void main(String[] args) {
7. Moved from problem to solution at line 4:       System.out.println();}
8. Moved from problem to solution at line 5:     for (int j = 1; j <= 9; j++)
9. Reordered from line 4 to 6:       System.out.println();}
10. Reordered from line 6 to 5:       System.out.println();}
11. Moved from solution to problem at line 15:       System.out.println();}
12. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 6:     for (int i = 1; i <= 9; i++) {
14. Moved from problem to solution at line 7:       System.out.print("   " + j);
15. Moved from problem to solution at line 4:     System.out.print("    ");
16. Moved from problem to solution at line 9:       for (int j = 1; j <= 9; j++) {
17. Moved from problem to solution at line 10:       System.out.print(i + " | ");
18. Moved from problem to solution at line 11:    for for (int j = 1; j < 9; j++)
19. Moved from problem to solution at line 12:         System.out.printf("%4d", i * j);}
20. Moved from problem to solution at line 12:       System.out.println();}
21. Reordered from line 12 to 13:       System.out.println();}
Submit Parsons Solution clicked @ 1500866671533
This line is not in its correct location:     System.out.println("\n-----------------------------------------");
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 8 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1500866679434
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 10 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1500866686499
Sorry, that line has a bug
Delete this line:    for for (int j = 1; j < 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from solution to trash at line 1:    for for (int j = 1; j < 9; j++)
Submit Parsons Solution clicked @ 1500866693525
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
3. Moved from problem to solution at line 1
Line 2 (1 moves):   public static void main(String[] args) {
6. Moved from problem to solution at line 2
Line 3 (1 moves):     System.out.println("           Multiplication Table");
4. Moved from problem to solution at line 3
Line 4 (1 moves):     System.out.print("    ");
15. Moved from problem to solution at line 4
Line 5 (1 moves):     for (int j = 1; j <= 9; j++)
8. Moved from problem to solution at line 5
Line 6 (2 moves):       System.out.print("   " + j);
14. Moved from problem to solution at line 7
22. Reordered from line 8 to 6
Line 7 (1 moves):     System.out.println("\n-----------------------------------------");
12. Moved from problem to solution at line 5
Line 8 (1 moves):     for (int i = 1; i <= 9; i++) {
13. Moved from problem to solution at line 6
Line 9 (2 moves):       System.out.print(i + " | ");
17. Moved from problem to solution at line 10
23. Reordered from line 10 to 9
Line 10 (1 moves):       for (int j = 1; j <= 9; j++) {
16. Moved from problem to solution at line 9
Line 11 (1 moves):         System.out.printf("%4d", i * j);}
19. Moved from problem to solution at line 12
Line 12 (6 moves):       System.out.println();}
7. Moved from problem to solution at line 4
9. Reordered from line 4 to 6
10. Reordered from line 6 to 5
11. Moved from solution to problem at line 15
20. Moved from problem to solution at line 12
21. Reordered from line 12 to 13
Line 13 (1 moves): }}
1. Moved from problem to solution at line 0
Line 2 (3) (2 moves):   public static void Main(String[] args) {
2. Moved from problem to solution at line 1
5. Moved from solution to trash at line 0
Line 5 (29) (2 moves):    for for (int j = 1; j < 9; j++)
18. Moved from problem to solution at line 11
24. Moved from solution to trash at line 1
Your Grade:
You took 24 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1500866701877
Time spent on this problem: 297 seconds
<HR>
