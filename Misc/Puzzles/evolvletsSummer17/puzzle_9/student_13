Problem No. 9
Using Template # 100
The Problem:
System.out.println();}
for (int j = 1; j <= 9; j++) {
System.out.print(i + " | ");
System.out.println("           Multiplication Table");
System.out.printf("%4d", i * j);}
System.out.print("    ");
public class MultiplicationTable {
public static void Main(String[] args) {
public static void main(String[] args) {
System.out.println("\n-----------------------------------------");
System.out.print("   " + j);
for for (int j = 1; j < 9; j++)
for (int j = 1; j <= 9; j++)
}}
for (int i = 1; i <= 9; i++) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
5. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
6. Moved from problem to solution at line 3:     System.out.print("    ");
7. Reordered from line 3 to 4:     System.out.print("    ");
8. Moved from problem to solution at line 4:       for (int j = 1; j <= 9; j++) {
9. Reordered from line 4 to 5:       for (int j = 1; j <= 9; j++) {
10. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
11. Reordered from line 5 to 6:     System.out.println("\n-----------------------------------------");
12. Moved from problem to trash at line 0:   public static void Main(String[] args) {
13. Moved from problem to trash at line 1:     for (int i = 1; i <= 9; i++) {
14. Moved from problem to trash at line 1:    for for (int j = 1; j < 9; j++)
15. Moved from problem to solution at line 6:     for (int j = 1; j <= 9; j++)
16. Reordered from line 6 to 5:     for (int j = 1; j <= 9; j++)
17. Moved from solution to problem at line 14:       for (int j = 1; j <= 9; j++) {
18. Moved from problem to solution at line 5:       System.out.print("   " + j);
19. Reordered from line 5 to 7:       System.out.print("   " + j);
20. Reordered from line 7 to 6:       System.out.print("   " + j);
21. Moved from trash to solution at line 7:     for (int i = 1; i <= 9; i++) {
22. Reordered from line 7 to 8:     for (int i = 1; i <= 9; i++) {
23. Moved from problem to solution at line 8:       System.out.print(i + " | ");
24. Reordered from line 8 to 9:       System.out.print(i + " | ");
25. Moved from problem to solution at line 9:       for (int j = 1; j <= 9; j++) {
26. Reordered from line 9 to 10:       for (int j = 1; j <= 9; j++) {
27. Moved from problem to solution at line 10:         System.out.printf("%4d", i * j);}
28. Reordered from line 10 to 11:         System.out.printf("%4d", i * j);}
29. Moved from problem to solution at line 11:       System.out.println();}
30. Reordered from line 11 to 12:       System.out.println();}
31. Moved from problem to solution at line 12: }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
32. Reordered from line 12 to 13: }}
Submit Parsons Solution clicked @ 1500742159856
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     System.out.print("    ");
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
15. Moved from problem to solution at line 6
16. Reordered from line 6 to 5
Line 6 (3 moves):       System.out.print("   " + j);
18. Moved from problem to solution at line 5
19. Reordered from line 5 to 7
20. Reordered from line 7 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
13. Moved from problem to trash at line 1
21. Moved from trash to solution at line 7
22. Reordered from line 7 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
23. Moved from problem to solution at line 8
24. Reordered from line 8 to 9
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
17. Moved from solution to problem at line 14
25. Moved from problem to solution at line 9
26. Reordered from line 9 to 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
27. Moved from problem to solution at line 10
28. Reordered from line 10 to 11
Line 12 (2 moves):       System.out.println();}
29. Moved from problem to solution at line 11
30. Reordered from line 11 to 12
Line 13 (2 moves): }}
31. Moved from problem to solution at line 12
32. Reordered from line 12 to 13
Line 2 (3) (1 moves):   public static void Main(String[] args) {
12. Moved from problem to trash at line 0
Line 5 (29) (1 moves):    for for (int j = 1; j < 9; j++)
14. Moved from problem to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1500742161630
Time spent on this problem: 486 seconds
<HR>
