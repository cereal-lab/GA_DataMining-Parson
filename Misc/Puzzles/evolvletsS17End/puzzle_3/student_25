Problem No. 3
Using Template # 100
The Problem:
import java.util.Scanner;
else
}
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
while (low < high {
while while (low <= high) {
while (low < high) {
isPalindrome = false;
String s = input.nextLine();          // This is line X
}}
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
break;}
low++; high--;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 6:     if (isPalindrome)
10. Moved from problem to solution at line 7:       System.out.println(s + " is a palindrome");
11. Moved from problem to solution at line 10:         isPalindrome = false;
12. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Reordered from line 8 to 7:     low= 0; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to trash at line 0:         break;}
16. Moved from problem to trash at line 1:       low++; high--;
17. Moved from problem to solution at line 8:     while (low < high {
18. Moved from solution to trash at line 2:     while (low < high {
19. Moved from problem to solution at line 8:     while (low < high) {
20. Moved from problem to solution at line 10:     else
21. Moved from problem to solution at line 10:       }
22. Moved from problem to trash at line 3:    while while (low <= high) {
23. Moved from problem to trash at line 2:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493680558843
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 12 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493680573937
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 13 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493680583307
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493680591034
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493680598599
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493680613485
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 15 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493680619500
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1493680626824
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1493680633427
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 16 to 14:       }
Submit Parsons Solution clicked @ 1493680641661
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 6
24. Reordered from line 12 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 4
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
5. Moved from problem to solution at line 4
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6
25. Reordered from line 13 to 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8
14. Reordered from line 8 to 7
26. Reordered from line 9 to 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to solution at line 8
27. Reordered from line 10 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to trash at line 2
28. Moved from trash to solution at line 10
Line 11 (2 moves):         isPalindrome = false;
11. Moved from problem to solution at line 10
29. Reordered from line 15 to 11
Line 12 (2 moves):         break;}
15. Moved from problem to trash at line 0
30. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
16. Moved from problem to trash at line 1
31. Moved from trash to solution at line 13
Line 14 (2 moves):       }
21. Moved from problem to solution at line 10
32. Reordered from line 16 to 14
Line 15 (1 moves):     if (isPalindrome)
9. Moved from problem to solution at line 6
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 7
Line 17 (1 moves):     else
20. Moved from problem to solution at line 10
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 11
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (2 moves):     while (low < high {
17. Moved from problem to solution at line 8
18. Moved from solution to trash at line 2
Line 9 (37) (1 moves):    while while (low <= high) {
22. Moved from problem to trash at line 3
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493680823449
Time spent on this problem: 1239 seconds
<HR>
