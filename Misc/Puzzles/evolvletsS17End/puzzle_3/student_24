Problem No. 3
Using Template # 100
The Problem:
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
low++; high--;
else
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is not a palindrome");
while while (low <= high) {
while (low < high) {
}
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
public class Palindrome {
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Reordered from line 3 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
9. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Reordered from line 5 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
12. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
13. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
14. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
15. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 8:     while (low < high) {
17. Reordered from line 8 to 9:     while (low < high) {
18. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Reordered from line 9 to 10:     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
21. Reordered from line 10 to 11:       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 11:     if (isPalindrome)
23. Reordered from line 11 to 12:     if (isPalindrome)
24. Moved from problem to solution at line 12:    while while (low <= high) {
25. Reordered from line 12 to 13:    while while (low <= high) {
26. Moved from problem to solution at line 13:     low= 0; high = s.length() - 1; isPalindrome = true;
27. Reordered from line 13 to 14:     low= 0; high = s.length() - 1; isPalindrome = true;
28. Moved from problem to solution at line 14:       low++; high--;
29. Reordered from line 14 to 15:       low++; high--;
30. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
31. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
32. Moved from problem to solution at line 15:         isPalindrome = false;
33. Moved from problem to solution at line 17:     else
34. Reordered from line 17 to 18:     else
35. Moved from problem to solution at line 18:         break;}
36. Reordered from line 18 to 19:         break;}
37. Moved from problem to solution at line 19:     }}
38. Reordered from line 19 to 20:     }}
39. Moved from problem to solution at line 20:       }
Submit Parsons Solution clicked @ 1493685435030
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 4 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493685442263
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493685459454
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493685478714
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 8 to 14:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493685487214
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 8 to 13:     while (low < high) {
Submit Parsons Solution clicked @ 1493685492564
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493685500564
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 8 to 11:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685504370
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 8 to 10:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685510697
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493685515314
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 9 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685520187
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 9 to 10:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685525249
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 10 to 12:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685530347
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 10 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685534380
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 11 to 13:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685540129
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 11 to 12:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685545397
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 12 to 17:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685548996
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 12 to 16:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685552751
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 12 to 15:       low++; high--;
Submit Parsons Solution clicked @ 1493685555610
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 12 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493685559829
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 12 to 13:     else
Submit Parsons Solution clicked @ 1493685563733
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Reordered from line 13 to 15:     else
Submit Parsons Solution clicked @ 1493685568474
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 13 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493685572615
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 14 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493685577178
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 14 to 17:     else
Submit Parsons Solution clicked @ 1493685581874
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
64. Reordered from line 14 to 16:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493685586106
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 14 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685590270
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
66. Reordered from line 15 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493685595751
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
40. Reordered from line 4 to 6
Line 6 (4 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
41. Reordered from line 4 to 5
42. Reordered from line 5 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
26. Moved from problem to solution at line 13
27. Reordered from line 13 to 14
Line 9 (3 moves):     while (low < high) {
16. Moved from problem to solution at line 8
17. Reordered from line 8 to 9
44. Reordered from line 8 to 13
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
43. Reordered from line 8 to 14
Line 11 (1 moves):         isPalindrome = false;
32. Moved from problem to solution at line 15
Line 12 (2 moves):         break;}
35. Moved from problem to solution at line 18
36. Reordered from line 18 to 19
Line 13 (3 moves):       low++; high--;
28. Moved from problem to solution at line 14
29. Reordered from line 14 to 15
57. Reordered from line 12 to 15
Line 14 (1 moves):       }
39. Moved from problem to solution at line 20
Line 15 (8 moves):     if (isPalindrome)
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
47. Reordered from line 8 to 10
49. Reordered from line 9 to 11
52. Reordered from line 10 to 11
53. Reordered from line 11 to 13
56. Reordered from line 12 to 16
64. Reordered from line 14 to 16
Line 16 (9 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 10
21. Reordered from line 10 to 11
46. Reordered from line 8 to 11
50. Reordered from line 9 to 10
51. Reordered from line 10 to 12
54. Reordered from line 11 to 12
55. Reordered from line 12 to 17
65. Reordered from line 14 to 15
66. Reordered from line 15 to 16
Line 17 (5 moves):     else
33. Moved from problem to solution at line 17
34. Reordered from line 17 to 18
59. Reordered from line 12 to 13
60. Reordered from line 13 to 15
63. Reordered from line 14 to 17
Line 18 (5 moves):       System.out.println(s + " is not a palindrome");
30. Moved from problem to solution at line 15
31. Reordered from line 15 to 16
58. Reordered from line 12 to 14
61. Reordered from line 13 to 14
62. Reordered from line 14 to 18
Line 19 (2 moves):     }}
37. Moved from problem to solution at line 19
38. Reordered from line 19 to 20
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 9
19. Reordered from line 9 to 10
45. Moved from solution to trash at line 0
Line 9 (37) (3 moves):    while while (low <= high) {
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 13
48. Moved from solution to trash at line 1
Your Grade:
You took 66 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493685638847
Time spent on this problem: 385 seconds
<HR>
