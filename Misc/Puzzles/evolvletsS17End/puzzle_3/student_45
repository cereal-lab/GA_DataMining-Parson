Problem No. 3
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
else if (Character.isDigit(ch))
}}
System.out.println("The decimal value for hex digit " + ch + " is " + value);}
if (ch < 'F' && ch >= 'A') {                           // This is Line Y
if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
if (hexString.length() != 1)
if (hexString.length() != 1) {
System.out.print("Enter a hex digit: ");   // This is Line X
System.out.println("You must enter exactly one character");
import java.util.Scanner;
public class HexDigit2Dec {
else
String hexString = input.nextLine();
System.out.println(ch + " is an invalid input");
int value = ch - 'A' + 10;
char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
public static void main(String[] args) {
System.exit(1);}
System.out.println("The decimal value for hex digit " + ch + " is " + ch);
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 20 lines.
Re-assemble them with 22 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class HexDigit2Dec {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5:     System.out.print("Enter a hex digit: ");   // This is Line X
7. Moved from problem to trash at line 0:       System.out.println("The decimal value for hex digit " + ch + " is " + ch);
8. Moved from problem to solution at line 6:       System.out.println("The decimal value for hex digit " + ch + " is " + value);}
9. Moved from problem to solution at line 7:       System.exit(1);}
10. Moved from problem to trash at line 1:     if (hexString.length() != 1)
11. Moved from problem to solution at line 5:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
12. Reordered from line 5 to 7:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
13. Reordered from line 7 to 6:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
14. Moved from problem to solution at line 7:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
15. Moved from problem to solution at line 8:     String hexString = input.nextLine();
16. Moved from problem to solution at line 9:     else if (Character.isDigit(ch))
17. Moved from problem to solution at line 10:       System.out.println("You must enter exactly one character");
18. Moved from problem to solution at line 11:     else
19. Moved from problem to solution at line 12:     if (hexString.length() != 1) {
20. Moved from problem to solution at line 13:       System.out.println(ch + " is an invalid input");
21. Moved from problem to solution at line 6:       int value = ch - 'A' + 10;
22. Moved from problem to trash at line 2:     if (ch < 'F' && ch >= 'A') {                           // This is Line Y
Submit Parsons Solution clicked @ 1493530793148
This line is not in its correct location:       int value = ch - 'A' + 10;
Move this line in its place:     String hexString = input.nextLine();
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 6 to 9:       int value = ch - 'A' + 10;
24. Reordered from line 9 to 8:       int value = ch - 'A' + 10;
Submit Parsons Solution clicked @ 1493530816016
This line is not in its correct location:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
Move this line in its place:     String hexString = input.nextLine();
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 8 to 7:       int value = ch - 'A' + 10;
26. Reordered from line 8 to 7:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
Submit Parsons Solution clicked @ 1493530849807
This line is not in its correct location:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
Move this line in its place:     String hexString = input.nextLine();
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 9 to 6:     String hexString = input.nextLine();
Submit Parsons Solution clicked @ 1493530870450
This line is not in its correct location:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 7 to 13:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
29. Reordered from line 13 to 12:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
30. Reordered from line 7 to 13:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
31. Reordered from line 13 to 12:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
Submit Parsons Solution clicked @ 1493530928878
This line is not in its correct location:       int value = ch - 'A' + 10;
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 7 to 12:       int value = ch - 'A' + 10;
Submit Parsons Solution clicked @ 1493530956191
This line is not in its correct location:     else if (Character.isDigit(ch))
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 7:     if (hexString.length() != 1)
Submit Parsons Solution clicked @ 1493530977081
Sorry, that line has a bug
Delete this line:     if (hexString.length() != 1)
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from solution to trash at line 2:     if (hexString.length() != 1)
Submit Parsons Solution clicked @ 1493530985344
This line is not in its correct location:     else if (Character.isDigit(ch))
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 7 to 12:     else if (Character.isDigit(ch))
Submit Parsons Solution clicked @ 1493530998484
This line is not in its correct location:       System.out.println("You must enter exactly one character");
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 12:       System.out.println("You must enter exactly one character");
Submit Parsons Solution clicked @ 1493531007835
This line is not in its correct location:     else
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 7 to 12:     else
Submit Parsons Solution clicked @ 1493531018605
This line is not in its correct location:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 7 to 13:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
39. Reordered from line 13 to 12:     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
Submit Parsons Solution clicked @ 1493531028883
This line is not in its correct location:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 7 to 12:     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493531034949
This line is not in its correct location:       int value = ch - 'A' + 10;
Move this line in its place:     if (hexString.length() != 1) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1493531037750
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class HexDigit2Dec {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
5. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a hex digit: ");   // This is Line X
6. Moved from problem to solution at line 5
Line 6 (2 moves):     String hexString = input.nextLine();
15. Moved from problem to solution at line 8
27. Reordered from line 9 to 6
Line 12 (5 moves):       int value = ch - 'A' + 10;
21. Moved from problem to solution at line 6
23. Reordered from line 6 to 9
24. Reordered from line 9 to 8
25. Reordered from line 8 to 7
32. Reordered from line 7 to 12
Line 14 (2 moves):     else if (Character.isDigit(ch))
16. Moved from problem to solution at line 9
35. Reordered from line 7 to 12
Line 8 (2 moves):       System.out.println("You must enter exactly one character");
17. Moved from problem to solution at line 10
36. Reordered from line 7 to 12
Line 16 (2 moves):     else
18. Moved from problem to solution at line 11
37. Reordered from line 7 to 12
Line 10 (7 moves):     char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 7
13. Reordered from line 7 to 6
28. Reordered from line 7 to 13
29. Reordered from line 13 to 12
38. Reordered from line 7 to 13
39. Reordered from line 13 to 12
Line 11 (5 moves):     if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
14. Moved from problem to solution at line 7
26. Reordered from line 8 to 7
30. Reordered from line 7 to 13
31. Reordered from line 13 to 12
40. Reordered from line 7 to 12
Line 7 (1 moves):     if (hexString.length() != 1) {
19. Moved from problem to solution at line 12
Line 17 (1 moves):       System.out.println(ch + " is an invalid input");
20. Moved from problem to solution at line 13
Line 13 (1 moves):       System.out.println("The decimal value for hex digit " + ch + " is " + value);}
8. Moved from problem to solution at line 6
Line 9 (1 moves):       System.exit(1);}
9. Moved from problem to solution at line 7
Line 18 (1 moves): }}
1. Moved from problem to solution at line 0
Line 15 (1 moves):       System.out.println("The decimal value for hex digit " + ch + " is " + ch);
7. Moved from problem to trash at line 0
Line 11 (13) (1 moves):     if (ch < 'F' && ch >= 'A') {                           // This is Line Y
22. Moved from problem to trash at line 2
Line 7 (14) (3 moves):     if (hexString.length() != 1)
10. Moved from problem to trash at line 1
33. Moved from trash to solution at line 7
34. Moved from solution to trash at line 2
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 40 steps before bailing out of a Parsons puzzle containing 20 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class HexDigit2Dec {
public static void main(String[] args) {
Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
System.out.print("Enter a hex digit: ");   // This is Line X
String hexString = input.nextLine();
int value = ch - 'A' + 10;
else if (Character.isDigit(ch))
System.out.println("You must enter exactly one character");
else
char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
if (hexString.length() != 1) {
System.out.println(ch + " is an invalid input");
System.out.println("The decimal value for hex digit " + ch + " is " + value);}
System.exit(1);}
}}
The lines you deleted so far are as follows:
System.out.println("The decimal value for hex digit " + ch + " is " + ch);
if (ch < 'F' && ch >= 'A') {                           // This is Line Y
if (hexString.length() != 1)
The correct answer is as follows:
import java.util.Scanner;
public class HexDigit2Dec {
public static void main(String[] args) {
Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
System.out.print("Enter a hex digit: ");   // This is Line X
String hexString = input.nextLine();
if (hexString.length() != 1) {
System.out.println("You must enter exactly one character");
System.exit(1);}
char ch = Character.toUpperCase(hexString.charAt(0));   //This line should immediately be placed before Line Y
if (ch <= 'F' && ch >= 'A') {                           // This is Line Y
int value = ch - 'A' + 10;
System.out.println("The decimal value for hex digit " + ch + " is " + value);}
else if (Character.isDigit(ch))
System.out.println("The decimal value for hex digit " + ch + " is " + ch);
else
System.out.println(ch + " is an invalid input");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1493531041336
Time spent on this problem: 745 seconds
<HR>
