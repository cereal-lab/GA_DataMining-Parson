Problem No. 3
Using Template # 100
The Problem:
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}
System.out.println(s + " is not a palindrome");
while while (low <= high) {
while (low < high) {
while (low < high {
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
low++; high--;
System.out.println(s + " is a palindrome");
else
import java.util.Scanner;
}}
break;}
isPalindrome = false;
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Reordered from line 3 to 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 7:     if (isPalindrome)
14. Reordered from line 7 to 8:     if (isPalindrome)
15. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9:       low++; high--;
18. Moved from problem to solution at line 11:     while (low < high {
19. Reordered from line 12 to 10:     if (isPalindrome)
20. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 12:    while while (low <= high) {
22. Moved from problem to solution at line 13:     else
23. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
24. Moved from problem to solution at line 13:       System.out.println(s + " is a palindrome");
25. Moved from problem to solution at line 14:     while (low < high) {
26. Moved from problem to solution at line 17:         isPalindrome = false;
27. Moved from problem to solution at line 18:         break;}
28. Reordered from line 18 to 19:         break;}
29. Moved from problem to solution at line 19:     }}
30. Moved from problem to solution at line 20:       }
Submit Parsons Solution clicked @ 1493662744187
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
32. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493662763578
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 14 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493662771916
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493662778201
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 17 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493662788747
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 21 to 12:         break;}
Submit Parsons Solution clicked @ 1493662793347
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 21 to 14:       }
Submit Parsons Solution clicked @ 1493662799110
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from solution to trash at line 0:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493662805279
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from solution to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1493662810363
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
4. Reordered from line 3 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
10. Reordered from line 5 to 6
31. Reordered from line 6 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
32. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
25. Moved from problem to solution at line 14
33. Reordered from line 14 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 8
20. Reordered from line 11 to 10
34. Reordered from line 11 to 10
Line 11 (2 moves):         isPalindrome = false;
26. Moved from problem to solution at line 17
35. Reordered from line 17 to 11
Line 12 (3 moves):         break;}
27. Moved from problem to solution at line 18
28. Reordered from line 18 to 19
36. Reordered from line 21 to 12
Line 13 (1 moves):       low++; high--;
17. Moved from problem to solution at line 9
Line 14 (2 moves):       }
30. Moved from problem to solution at line 20
37. Reordered from line 21 to 14
Line 15 (3 moves):     if (isPalindrome)
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
19. Reordered from line 12 to 10
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 13
Line 17 (1 moves):     else
22. Moved from problem to solution at line 13
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
23. Moved from problem to solution at line 14
Line 19 (1 moves):     }}
29. Moved from problem to solution at line 19
Line 9 (37) (2 moves):    while while (low <= high) {
21. Moved from problem to solution at line 12
38. Moved from solution to trash at line 0
Line 9 (5) (2 moves):     while (low < high {
18. Moved from problem to solution at line 11
39. Moved from solution to trash at line 1
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493663258913
Time spent on this problem: 723 seconds
<HR>
