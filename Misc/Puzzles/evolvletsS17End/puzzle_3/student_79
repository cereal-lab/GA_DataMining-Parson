Problem No. 3
Using Template # 100
The Problem:
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
else if (s1 == s2) // This line should be written before Line X
if (s1.equals(s2))
public class StringOperation {
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
String s1 = "Hello World", s2 = "Hello Worlds";
else
public static void main(String[] args) {
}}
System.out.println(s1 + " and " +s2 + " are same object");
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println("Neither same content nor same object");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class StringOperation {
2. Moved from problem to solution at line 1: 	public static void main(String[] args) {
3. Moved from problem to solution at line 2: 	}}
4. Reordered from line 3 to 2: public class StringOperation {
5. Moved from problem to solution at line 3: 			System.out.println("Neither same content nor same object");
6. Moved from problem to solution at line 4: 		if (s1.equals(s2))
7. Moved from problem to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Moved from problem to solution at line 5: 		else if (s1.compareTo(s2) == 0) // This is Line X
9. Moved from problem to solution at line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
10. Moved from problem to solution at line 7: 		else if (s1 == s2) // This line should be written before Line X
11. Moved from problem to solution at line 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
12. Moved from problem to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
13. Moved from problem to solution at line 11: 			System.out.println(s1 + " and " +s2 + " are same object");
14. Moved from problem to solution at line 11: 		else
15. Reordered from line 5 to 4: 		if (s1.equals(s2))
16. Reordered from line 11 to 5: 		else
17. Reordered from line 11 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
18. Reordered from line 8 to 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
19. Reordered from line 12 to 11: 			System.out.println(s1 + " and " +s2 + " are same object");
20. Reordered from line 11 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
21. Reordered from line 13 to 6: 	}}
22. Reordered from line 13 to 6: 		else if (s1 == s2) // This line should be written before Line X
23. Reordered from line 13 to 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
24. Reordered from line 11 to 7: 		else
25. Reordered from line 11 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
26. Reordered from line 11 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
27. Reordered from line 11 to 9: 	}}
28. Reordered from line 12 to 11: 			System.out.println("Neither same content nor same object");
29. Moved from solution to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
30. Reordered from line 9 to 12: 	}}
31. Reordered from line 11 to 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493698183815
This line is not in its correct location: 	public static void main(String[] args) {
Move this line in its place: public class StringOperation {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 2 to 1: public class StringOperation {
Submit Parsons Solution clicked @ 1493698189182
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (3 moves): public class StringOperation {
1. Moved from problem to solution at line 0
4. Reordered from line 3 to 2
32. Reordered from line 2 to 1
Line 2 (1 moves): 	public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 3 (1 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
9. Moved from problem to solution at line 3
Line 4 (2 moves): 		if (s1.equals(s2))
6. Moved from problem to solution at line 4
15. Reordered from line 5 to 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
7. Moved from problem to solution at line 5
17. Reordered from line 11 to 5
Line 6 (2 moves): 		else if (s1 == s2) // This line should be written before Line X
10. Moved from problem to solution at line 7
22. Reordered from line 13 to 6
Line 7 (4 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
13. Moved from problem to solution at line 11
19. Reordered from line 12 to 11
20. Reordered from line 11 to 7
25. Reordered from line 11 to 7
Line 8 (3 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
8. Moved from problem to solution at line 5
18. Reordered from line 8 to 6
26. Reordered from line 11 to 8
Line 9 (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
12. Moved from problem to solution at line 8
23. Reordered from line 13 to 7
31. Reordered from line 11 to 9
Line 10 (3 moves): 		else
14. Moved from problem to solution at line 11
16. Reordered from line 11 to 5
24. Reordered from line 11 to 7
Line 11 (2 moves): 			System.out.println("Neither same content nor same object");
5. Moved from problem to solution at line 3
28. Reordered from line 12 to 11
Line 12 (4 moves): 	}}
3. Moved from problem to solution at line 2
21. Reordered from line 13 to 6
27. Reordered from line 11 to 9
30. Reordered from line 9 to 12
Line 5 (16) (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
11. Moved from problem to solution at line 7
29. Moved from solution to trash at line 0
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1493698193638
Time spent on this problem: 631 seconds
<HR>
