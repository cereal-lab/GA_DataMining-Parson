Problem No. 3
Using Template # 100
The Problem:
else
}}
System.out.println("Neither same content nor same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
else if (s1 == s2) // This line should be written before Line X
String s1 = "Hello World", s2 = "Hello Worlds";
if (s1.equals(s2))
public class StringOperation {
public static void main(String[] args) {
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
System.out.println(s1 + " and " +s2 + " are same object");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: 	}}
2. Moved from problem to solution at line 1: public class StringOperation {
3. Moved from problem to solution at line 2: 	public static void main(String[] args) {
4. Moved from problem to solution at line 3: 		else if (s1 == s2) // This line should be written before Line X
5. Moved from problem to solution at line 4: 		String s1 = "Hello World", s2 = "Hello Worlds";
6. Moved from problem to solution at line 5: 		else if (s1.compareTo(s2) == 0) // This is Line X
7. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
8. Moved from problem to solution at line 6: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
9. Moved from problem to solution at line 7: 		else
10. Moved from problem to solution at line 8: 		if (s1.equals(s2))
11. Moved from problem to solution at line 9: 			System.out.println("Neither same content nor same object");
12. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " are same object");
13. Moved from problem to trash at line 2: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493677349406
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 		String s1 = "Hello World", s2 = "Hello Worlds";
Sorry, your solution is not yet complete and correct.
Please correct your answer
14. Reordered from line 4 to 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
Submit Parsons Solution clicked @ 1493677361461
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 		if (s1.equals(s2))
Sorry, your solution is not yet complete and correct.
Please correct your answer
15. Reordered from line 9 to 4: 			System.out.println("Neither same content nor same object");
16. Reordered from line 4 to 9: 			System.out.println("Neither same content nor same object");
17. Reordered from line 8 to 3: 		if (s1.equals(s2))
Submit Parsons Solution clicked @ 1493677382188
This line is not in its correct location: 		if (s1.equals(s2))
Move this line in its place: 		String s1 = "Hello World", s2 = "Hello Worlds";
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1493677382398
This line is not in its correct location: 		if (s1.equals(s2))
Move this line in its place: 		String s1 = "Hello World", s2 = "Hello Worlds";
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Reordered from line 3 to 4: 		if (s1.equals(s2))
Submit Parsons Solution clicked @ 1493677386572
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Moved from trash to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493677403604
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 8 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1493677425054
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 7 to 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493677434959
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Moved from trash to solution at line 7: 			System.out.println(s1 + " and " +s2 + " are same object");
Submit Parsons Solution clicked @ 1493677476216
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 9 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1493677488021
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
2. Moved from problem to solution at line 1
Line 2 (1 moves): 	public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 4
14. Reordered from line 4 to 3
Line 4 (3 moves): 		if (s1.equals(s2))
10. Moved from problem to solution at line 8
17. Reordered from line 8 to 3
18. Reordered from line 3 to 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Moved from problem to solution at line 6
20. Reordered from line 8 to 5
Line 6 (2 moves): 		else if (s1 == s2) // This line should be written before Line X
4. Moved from problem to solution at line 3
21. Reordered from line 7 to 6
Line 7 (2 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
12. Moved from problem to trash at line 1
22. Moved from trash to solution at line 7
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
6. Moved from problem to solution at line 5
23. Reordered from line 9 to 8
Line 9 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
13. Moved from problem to trash at line 2
19. Moved from trash to solution at line 5
Line 10 (1 moves): 		else
9. Moved from problem to solution at line 7
Line 11 (3 moves): 			System.out.println("Neither same content nor same object");
11. Moved from problem to solution at line 9
15. Reordered from line 9 to 4
16. Reordered from line 4 to 9
Line 12 (1 moves): 	}}
1. Moved from problem to solution at line 0
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
7. Moved from problem to trash at line 0
Your Grade:
You took 23 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1493678095899
Time spent on this problem: 959 seconds
<HR>
