Problem No. 2
Using Template # 100
The Problem:
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while while (low <= high) {
while (low < high {
while (low < high) {
String s = input.nextLine();          // This is line X
}
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
if (isPalindrome)
isPalindrome = false;
low++; high--;
else
}}
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to trash at line 0:     while (low < high {
10. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to trash at line 1:         isPalindrome = false;
12. Moved from problem to solution at line 9:    while while (low <= high) {
13. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 10:       low++; high--;
15. Moved from problem to solution at line 12:     if (isPalindrome)
16. Moved from solution to trash at line 1:     if (isPalindrome)
17. Moved from problem to solution at line 12:       System.out.println(s + " is a palindrome");
18. Moved from problem to solution at line 13:       }
19. Moved from problem to solution at line 14:     else
20. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
21. Moved from problem to trash at line 2:     while (low < high) {
22. Moved from problem to trash at line 2:         break;}
Submit Parsons Solution clicked @ 1493150851583
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493150864848
This line is not in its correct location:       low++; high--;
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from trash to solution at line 9:     while (low < high {
Submit Parsons Solution clicked @ 1493150875199
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from solution to trash at line 1:     while (low < high {
26. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493150887137
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493150893751
This line is not in its correct location:       low++; high--;
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493150901435
This line is not in its correct location:       low++; high--;
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 13:         break;}
30. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1493150915392
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1493150923553
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493150932452
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
8. Moved from problem to solution at line 7
Line 9 (2 moves):     while (low < high) {
21. Moved from problem to trash at line 2
26. Moved from trash to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 10
27. Reordered from line 11 to 10
Line 11 (2 moves):         isPalindrome = false;
11. Moved from problem to trash at line 1
28. Moved from trash to solution at line 11
Line 12 (3 moves):         break;}
22. Moved from problem to trash at line 2
29. Moved from trash to solution at line 13
30. Reordered from line 13 to 12
Line 13 (1 moves):       low++; high--;
14. Moved from problem to solution at line 10
Line 14 (2 moves):       }
18. Moved from problem to solution at line 13
31. Reordered from line 15 to 14
Line 15 (3 moves):     if (isPalindrome)
15. Moved from problem to solution at line 12
16. Moved from solution to trash at line 1
32. Moved from trash to solution at line 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 12
Line 17 (1 moves):     else
19. Moved from problem to solution at line 14
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 15
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (2 moves):    while while (low <= high) {
12. Moved from problem to solution at line 9
23. Moved from solution to trash at line 1
Line 9 (5) (3 moves):     while (low < high {
9. Moved from problem to trash at line 0
24. Moved from trash to solution at line 9
25. Moved from solution to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493150944938
Time spent on this problem: 582 seconds
<HR>
