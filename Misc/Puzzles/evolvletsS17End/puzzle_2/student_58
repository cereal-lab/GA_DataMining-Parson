Problem No. 2
Using Template # 100
The Problem:
System.out.println(s1 + " and " +s2 + " are same object");
public class StringOperation {
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
String s1 = "Hello World", s2 = "Hello Worlds";
else if (s1 == s2) // This line should be written before Line X
}}
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
System.out.println("Neither same content nor same object");
else if (s1.compareTo(s2) == 0) // This is Line X
public static void main(String[] args) {
if (s1.equals(s2))
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class StringOperation {
2. Moved from problem to solution at line 1: 	}}
3. Reordered from line 2 to 1: public class StringOperation {
4. Moved from problem to solution at line 2: 	public static void main(String[] args) {
5. Moved from problem to solution at line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
6. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
7. Moved from problem to solution at line 4: 		if (s1.equals(s2))
8. Moved from problem to solution at line 5: 			System.out.println(s1 + " and " +s2 + " are same object");
9. Moved from problem to solution at line 6: 		else if (s1 == s2) // This line should be written before Line X
10. Moved from problem to solution at line 7: 		else if (s1.compareTo(s2) == 0) // This is Line X
11. Moved from problem to solution at line 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
12. Moved from problem to solution at line 9: 			System.out.println("Neither same content nor same object");
13. Moved from problem to solution at line 10: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
14. Moved from problem to solution at line 11: 		else
Submit Parsons Solution clicked @ 1493653194638
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
15. Reordered from line 6 to 5: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493653203603
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
16. Reordered from line 8 to 5: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1493653207905
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
17. Reordered from line 11 to 5: 		else
Submit Parsons Solution clicked @ 1493653212184
This line is not in its correct location: 		else
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Reordered from line 11 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493653220297
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Moved from trash to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1493653226836
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 11 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1493653231483
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 8 to 6: 		else
Submit Parsons Solution clicked @ 1493653237139
This line is not in its correct location: 		else
Move this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 9 to 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1493653240954
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 10 to 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493653245975
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 9 to 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1493653251636
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 10 to 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493653255537
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 11 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493653259843
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Move this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 10 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1493653265042
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 11 to 10: 		else
Submit Parsons Solution clicked @ 1493653269553
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 12 to 11: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1493653272585
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from solution to trash at line 0: 	}}
31. Moved from solution to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
32. Moved from trash to solution at line 11: 	}}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
33. Reordered from line 12 to 11: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1493653285555
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class StringOperation {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): 	public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 3 (1 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 3
Line 4 (1 moves): 		if (s1.equals(s2))
7. Moved from problem to solution at line 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
11. Moved from problem to solution at line 7
20. Reordered from line 11 to 5
Line 6 (3 moves): 		else if (s1 == s2) // This line should be written before Line X
9. Moved from problem to solution at line 6
15. Reordered from line 6 to 5
23. Reordered from line 10 to 6
Line 7 (2 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
8. Moved from problem to solution at line 5
26. Reordered from line 11 to 7
Line 8 (4 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
10. Moved from problem to solution at line 7
16. Reordered from line 8 to 5
22. Reordered from line 9 to 6
27. Reordered from line 10 to 8
Line 9 (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
13. Moved from problem to solution at line 10
18. Reordered from line 11 to 5
25. Reordered from line 10 to 7
Line 10 (4 moves): 		else
14. Moved from problem to solution at line 11
17. Reordered from line 11 to 5
21. Reordered from line 8 to 6
28. Reordered from line 11 to 10
Line 11 (3 moves): 			System.out.println("Neither same content nor same object");
12. Moved from problem to solution at line 9
29. Reordered from line 12 to 11
33. Reordered from line 12 to 11
Line 12 (3 moves): 	}}
2. Moved from problem to solution at line 1
30. Moved from solution to trash at line 0
32. Moved from trash to solution at line 11
Line 5 (16) (4 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
6. Moved from problem to trash at line 0
19. Moved from trash to solution at line 5
24. Reordered from line 9 to 7
31. Moved from solution to trash at line 1
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1493653286926
Time spent on this problem: 396 seconds
<HR>
