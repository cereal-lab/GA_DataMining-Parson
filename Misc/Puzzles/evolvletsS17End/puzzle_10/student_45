Problem No. 10
Using Template # 100
The Problem:
int guess, number;
Int guess, number;
}}
else
System.out.print("\nEnter your guess: ");
import java.util.Scanner;
guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
System.out.println("Yes, the number is " + number);
else if (guess > number)
while (guess != number) {                 // This is line X
Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
if (guess == number)
guess = input.nextInt();
System.out.println("Your guess is too low");}
System.out.println("Your guess is too high");
public class GuessNumber {
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 18 lines.
Re-assemble them with 19 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: }}
3. Reordered from line 1 to 2: }}
4. Moved from problem to solution at line 2: public class GuessNumber {
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     int guess, number;
7. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
8. Moved from problem to solution at line 6:     while (guess != number) {                 // This is line X
9. Moved from problem to solution at line 5:     guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
10. Moved from problem to solution at line 8:       guess = input.nextInt();
11. Moved from problem to solution at line 9:       if (guess == number)
12. Moved from problem to trash at line 0:     Int guess, number;
13. Moved from problem to solution at line 4:       System.out.print("\nEnter your guess: ");
14. Moved from problem to solution at line 11:         System.out.println("Yes, the number is " + number);
15. Moved from problem to trash at line 1:     guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
16. Moved from problem to solution at line 12:       else if (guess > number)
17. Moved from problem to solution at line 13:         System.out.println("Your guess is too high");
18. Moved from problem to solution at line 14:       else
19. Moved from problem to solution at line 15:         System.out.println("Your guess is too low");}
Submit Parsons Solution clicked @ 1493686621116
This line is not in its correct location:       System.out.print("\nEnter your guess: ");
Move this line in its place:     int guess, number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 5 to 4:     int guess, number;
Submit Parsons Solution clicked @ 1493686625257
This line is not in its correct location:       System.out.print("\nEnter your guess: ");
Move this line in its place:     guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 6 to 5:     guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
22. Reordered from line 8 to 7:     while (guess != number) {                 // This is line X
23. Reordered from line 7 to 6:     while (guess != number) {                 // This is line X
24. Reordered from line 8 to 6:     Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493686638703
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (1 moves): public class GuessNumber {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (2 moves):     int guess, number;
6. Moved from problem to solution at line 4
20. Reordered from line 5 to 4
Line 5 (2 moves):     guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
9. Moved from problem to solution at line 5
21. Reordered from line 6 to 5
Line 6 (2 moves):     Scanner input = new Scanner(System.in);   //This line should immediately be placed before Line X
7. Moved from problem to solution at line 5
24. Reordered from line 8 to 6
Line 7 (3 moves):     while (guess != number) {                 // This is line X
8. Moved from problem to solution at line 6
22. Reordered from line 8 to 7
23. Reordered from line 7 to 6
Line 8 (1 moves):       System.out.print("\nEnter your guess: ");
13. Moved from problem to solution at line 4
Line 9 (1 moves):       guess = input.nextInt();
10. Moved from problem to solution at line 8
Line 10 (1 moves):       if (guess == number)
11. Moved from problem to solution at line 9
Line 11 (1 moves):         System.out.println("Yes, the number is " + number);
14. Moved from problem to solution at line 11
Line 12 (1 moves):       else if (guess > number)
16. Moved from problem to solution at line 12
Line 13 (1 moves):         System.out.println("Your guess is too high");
17. Moved from problem to solution at line 13
Line 14 (1 moves):       else
18. Moved from problem to solution at line 14
Line 15 (1 moves):         System.out.println("Your guess is too low");}
19. Moved from problem to solution at line 15
Line 16 (2 moves): }}
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (22) (1 moves):     Int guess, number;
12. Moved from problem to trash at line 0
Line 5 (16) (1 moves):     guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
15. Moved from problem to trash at line 1
Your Grade:
You took 24 steps to solve a Parsons puzzle containing 18 lines of code.
Next Problem clicked @ 1493686642248
Time spent on this problem: 155 seconds
<HR>
