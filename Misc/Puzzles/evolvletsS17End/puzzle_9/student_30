Problem No. 9
Using Template # 100
The Problem:
System.out.print(i + " | ");
for (int i = 1; i <= 9; i++) {
System.out.print("    ");
}}
public class MultiplicationTable {
for (int j = 1; j <= 9; j++) {
System.out.println("           Multiplication Table");
System.out.print("   " + j);
public static void main(String[] args) {
public static void Main(String[] args) {
System.out.println("\n-----------------------------------------");
System.out.println();}
for for (int j = 1; j < 9; j++)
for (int j = 1; j <= 9; j++)
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to trash at line 0:   public static void Main(String[] args) {
3. Moved from problem to solution at line 1:   public static void main(String[] args) {
4. Reordered from line 1 to 2:   public static void main(String[] args) {
5. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
6. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
7. Moved from problem to solution at line 3:     System.out.print("    ");
8. Reordered from line 3 to 4:     System.out.print("    ");
9. Moved from problem to solution at line 4:     for (int j = 1; j <= 9; j++)
10. Reordered from line 4 to 5:     for (int j = 1; j <= 9; j++)
11. Moved from problem to solution at line 5:       System.out.print("   " + j);
12. Reordered from line 5 to 6:       System.out.print("   " + j);
13. Moved from problem to solution at line 6:     System.out.println("\n-----------------------------------------");
14. Reordered from line 6 to 7:     System.out.println("\n-----------------------------------------");
15. Moved from problem to solution at line 7:     for (int i = 1; i <= 9; i++) {
16. Reordered from line 7 to 8:     for (int i = 1; i <= 9; i++) {
17. Moved from problem to solution at line 8:       System.out.print(i + " | ");
18. Reordered from line 8 to 9:       System.out.print(i + " | ");
19. Moved from problem to solution at line 9:       for (int j = 1; j <= 9; j++) {
20. Reordered from line 9 to 10:       for (int j = 1; j <= 9; j++) {
21. Moved from problem to solution at line 10:         System.out.printf("%4d", i * j);}
22. Reordered from line 10 to 11:         System.out.printf("%4d", i * j);}
23. Moved from problem to solution at line 11:       System.out.println();}
24. Reordered from line 11 to 12:       System.out.println();}
25. Moved from problem to trash at line 1:    for for (int j = 1; j < 9; j++)
26. Moved from problem to solution at line 12: }}
27. Reordered from line 12 to 13: }}
Submit Parsons Solution clicked @ 1493567210971
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
Line 2 (2 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 1
4. Reordered from line 1 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 4 (2 moves):     System.out.print("    ");
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 6 (2 moves):       System.out.print("   " + j);
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
15. Moved from problem to solution at line 7
16. Reordered from line 7 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
17. Moved from problem to solution at line 8
18. Reordered from line 8 to 9
Line 10 (2 moves):       for (int j = 1; j <= 9; j++) {
19. Moved from problem to solution at line 9
20. Reordered from line 9 to 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
21. Moved from problem to solution at line 10
22. Reordered from line 10 to 11
Line 12 (2 moves):       System.out.println();}
23. Moved from problem to solution at line 11
24. Reordered from line 11 to 12
Line 13 (2 moves): }}
26. Moved from problem to solution at line 12
27. Reordered from line 12 to 13
Line 2 (3) (1 moves):   public static void Main(String[] args) {
2. Moved from problem to trash at line 0
Line 5 (29) (1 moves):    for for (int j = 1; j < 9; j++)
25. Moved from problem to trash at line 1
Your Grade:
You took 27 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1493567214855
Time spent on this problem: 193 seconds
<HR>
