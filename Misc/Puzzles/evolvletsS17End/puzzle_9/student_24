Problem No. 9
Using Template # 100
The Problem:
public static void Main(String[] args) {
public static void main(String[] args) {
System.out.println("           Multiplication Table");
}}
for (int i = 1; i <= 9; i++) {
public class MultiplicationTable {
System.out.print(i + " | ");
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.println("\n-----------------------------------------");
for (int j = 1; j <= 9; j++) {
System.out.print("    ");
System.out.printf("%4d", i * j);}
System.out.println();}
System.out.print("   " + j);
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to trash at line 0:   public static void Main(String[] args) {
3. Moved from problem to solution at line 1:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:       System.out.println();}
5. Moved from problem to solution at line 3:     System.out.println("\n-----------------------------------------");
6. Moved from problem to solution at line 4:       for (int j = 1; j <= 9; j++) {
7. Moved from problem to solution at line 5:     for (int j = 1; j <= 9; j++)
8. Moved from problem to solution at line 6:    for for (int j = 1; j < 9; j++)
9. Moved from problem to solution at line 7:     System.out.println("           Multiplication Table");
10. Moved from problem to solution at line 8:     for (int i = 1; i <= 9; i++) {
11. Moved from problem to solution at line 9: }}
12. Moved from problem to solution at line 10:         System.out.printf("%4d", i * j);}
13. Moved from problem to solution at line 11:     System.out.print("    ");
14. Moved from problem to solution at line 12:       System.out.print(i + " | ");
15. Moved from problem to solution at line 13:       System.out.print("   " + j);
16. Reordered from line 7 to 4:     System.out.println("           Multiplication Table");
17. Reordered from line 5 to 3:       for (int j = 1; j <= 9; j++) {
18. Reordered from line 14 to 1: public class MultiplicationTable {
19. Reordered from line 6 to 3:     System.out.println("           Multiplication Table");
20. Reordered from line 10 to 14: }}
Submit Parsons Solution clicked @ 1493313670814
This line is not in its correct location:       System.out.println();}
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 11 to 4:     System.out.print("    ");
22. Reordered from line 6 to 5:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1493313695482
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 8 to 5:     for (int j = 1; j <= 9; j++)
24. Reordered from line 11 to 6:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1493313723346
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 13 to 6:       System.out.print("   " + j);
26. Reordered from line 12 to 8:     for (int i = 1; i <= 9; i++) {
27. Reordered from line 9 to 7:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1493313764057
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     System.out.println("\n-----------------------------------------");
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 11 to 7:     System.out.println("\n-----------------------------------------");
Submit Parsons Solution clicked @ 1493313770997
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 12 to 8:    for for (int j = 1; j < 9; j++)
Submit Parsons Solution clicked @ 1493313784492
Sorry, that line has a bug
Delete this line:    for for (int j = 1; j < 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from solution to trash at line 1:    for for (int j = 1; j < 9; j++)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493313793760
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 10 to 8:     for (int i = 1; i <= 9; i++) {
32. Reordered from line 10 to 9:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1493313807524
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 12 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1493313819068
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 11 to 10:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1493313826152
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
18. Reordered from line 14 to 1
Line 2 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 1
Line 3 (3 moves):     System.out.println("           Multiplication Table");
9. Moved from problem to solution at line 7
16. Reordered from line 7 to 4
19. Reordered from line 6 to 3
Line 4 (2 moves):     System.out.print("    ");
13. Moved from problem to solution at line 11
21. Reordered from line 11 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
7. Moved from problem to solution at line 5
23. Reordered from line 8 to 5
Line 6 (2 moves):       System.out.print("   " + j);
15. Moved from problem to solution at line 13
25. Reordered from line 13 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
5. Moved from problem to solution at line 3
28. Reordered from line 11 to 7
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
10. Moved from problem to solution at line 8
26. Reordered from line 12 to 8
31. Reordered from line 10 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
14. Moved from problem to solution at line 12
33. Reordered from line 12 to 9
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
6. Moved from problem to solution at line 4
17. Reordered from line 5 to 3
22. Reordered from line 6 to 5
27. Reordered from line 9 to 7
34. Reordered from line 11 to 10
Line 11 (3 moves):         System.out.printf("%4d", i * j);}
12. Moved from problem to solution at line 10
24. Reordered from line 11 to 6
32. Reordered from line 10 to 9
Line 12 (1 moves):       System.out.println();}
4. Moved from problem to solution at line 2
Line 13 (2 moves): }}
11. Moved from problem to solution at line 9
20. Reordered from line 10 to 14
Line 2 (3) (1 moves):   public static void Main(String[] args) {
2. Moved from problem to trash at line 0
Line 5 (29) (3 moves):    for for (int j = 1; j < 9; j++)
8. Moved from problem to solution at line 6
29. Reordered from line 12 to 8
30. Moved from solution to trash at line 1
Your Grade:
You took 34 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1493313832888
Time spent on this problem: 264 seconds
<HR>
