Problem No. 7
Using Template # 100
The Problem:
int number1, number2 ;
number1 = 100; number2 = 200;
else
import java.util.Scanner;
}}
System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
if (number1 - number2 = answer)
if (number1 - number2 == answer)
System.out.println("You are correct!");
Scanner input = new Scanner(System.in); // This is line X
public class SubtractionQuiz {
public Class SubtractionQuiz {
int answer = input.nextInt();
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class SubtractionQuiz {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 3 to 2: public class SubtractionQuiz {
6. Moved from problem to trash at line 0: public Class SubtractionQuiz {
7. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); // This is line X
8. Reordered from line 4 to 3:   public static void main(String[] args) {
9. Moved from problem to solution at line 4:     System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
11. Moved from problem to solution at line 6:     if (number1 - number2 = answer)
12. Moved from problem to solution at line 7:     if (number1 - number2 == answer)
13. Moved from problem to solution at line 8:       System.out.println("You are correct!");
14. Moved from problem to solution at line 9:     else
15. Moved from problem to solution at line 10:     int answer = input.nextInt();
16. Moved from problem to solution at line 11:     int number1, number2 ;
17. Moved from problem to solution at line 12:     number1 = 100; number2 = 200;
18. Moved from problem to solution at line 13: }}
19. Reordered from line 13 to 14: }}
Submit Parsons Solution clicked @ 1493313226564
This line is not in its correct location:     System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
Move this line in its place:     int number1, number2 ;
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 7 to 4:     if (number1 - number2 == answer)
Submit Parsons Solution clicked @ 1493313240944
This line is not in its correct location:     if (number1 - number2 == answer)
Move this line in its place:     int number1, number2 ;
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 11 to 4:     int number1, number2 ;
22. Reordered from line 12 to 5:     number1 = 100; number2 = 200;
Submit Parsons Solution clicked @ 1493313261156
This line is not in its correct location:     if (number1 - number2 == answer)
Move this line in its place:     System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 7 to 6:     System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493313279152
This line is not in its correct location:     if (number1 - number2 == answer)
Move this line in its place:     Scanner input = new Scanner(System.in); // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 13 to 7:     Scanner input = new Scanner(System.in); // This is line X
25. Reordered from line 13 to 8:     int answer = input.nextInt();
26. Reordered from line 10 to 9:       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
Submit Parsons Solution clicked @ 1493313303519
This line is not in its correct location:       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
Move this line in its place:     if (number1 - number2 == answer)
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 10 to 9:     if (number1 - number2 == answer)
Submit Parsons Solution clicked @ 1493313313639
This line is not in its correct location:       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
Move this line in its place:       System.out.println("You are correct!");
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 12 to 10:       System.out.println("You are correct!");
Submit Parsons Solution clicked @ 1493313321175
This line is not in its correct location:       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 13 to 11:     else
Submit Parsons Solution clicked @ 1493313332239
Sorry, that line has a bug
Delete this line:     if (number1 - number2 = answer)
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from solution to trash at line 1:     if (number1 - number2 = answer)
Submit Parsons Solution clicked @ 1493313341387
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class SubtractionQuiz {
2. Moved from problem to solution at line 1
5. Reordered from line 3 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
8. Reordered from line 4 to 3
Line 4 (2 moves):     int number1, number2 ;
16. Moved from problem to solution at line 11
21. Reordered from line 11 to 4
Line 5 (2 moves):     number1 = 100; number2 = 200;
17. Moved from problem to solution at line 12
22. Reordered from line 12 to 5
Line 6 (2 moves):     System.out.print ("What is " + number1 + " - " + number2 + "? ");  //This line should immediately be placed before Line X
9. Moved from problem to solution at line 4
23. Reordered from line 7 to 6
Line 7 (2 moves):     Scanner input = new Scanner(System.in); // This is line X
7. Moved from problem to solution at line 3
24. Reordered from line 13 to 7
Line 8 (2 moves):     int answer = input.nextInt();
15. Moved from problem to solution at line 10
25. Reordered from line 13 to 8
Line 9 (3 moves):     if (number1 - number2 == answer)
12. Moved from problem to solution at line 7
20. Reordered from line 7 to 4
27. Reordered from line 10 to 9
Line 10 (2 moves):       System.out.println("You are correct!");
13. Moved from problem to solution at line 8
28. Reordered from line 12 to 10
Line 11 (2 moves):     else
14. Moved from problem to solution at line 9
29. Reordered from line 13 to 11
Line 12 (2 moves):       System.out.println("Your answer is wrong.\n" + number1 + " - "  + number2 + " should be " + (number1 - number2));
10. Moved from problem to solution at line 5
26. Reordered from line 10 to 9
Line 13 (2 moves): }}
18. Moved from problem to solution at line 13
19. Reordered from line 13 to 14
Line 2 (8) (1 moves): public Class SubtractionQuiz {
6. Moved from problem to trash at line 0
Line 9 (10) (2 moves):     if (number1 - number2 = answer)
11. Moved from problem to solution at line 6
30. Moved from solution to trash at line 1
Your Grade:
You took 30 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1493313343079
Time spent on this problem: 231 seconds
<HR>
