Problem No. 7
Using Template # 100
The Problem:
break;}
int low, high, isPalindrome;          // This is line Y
System.out.println(s + " is not a palindrome");
low++; high--;
System.out.println(s + " is a palindrome");
import java.util.Scanner;
public static void main(String[] args) {
isPalindrome = false;
String s = input.nextLine();          // This is line X
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
}}
while while (low <= high) {
while (low < high) {
if (isPalindrome)
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 10:     if (isPalindrome)
12. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 12:     else
14. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 14:     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 15:       }
17. Moved from problem to solution at line 15:       low++; high--;
18. Moved from problem to trash at line 0:    while while (low <= high) {
19. Moved from problem to trash at line 1:     while (low < high) {
20. Moved from problem to trash at line 2:         isPalindrome = false;
21. Moved from problem to trash at line 3:         break;}
Submit Parsons Solution clicked @ 1493686804509
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
23. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493686821360
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493686828273
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493686835073
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 14 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493686842671
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from trash to solution at line 17:     while (low < high) {
28. Reordered from line 17 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493686857176
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from solution to problem at line 21:     low= 1; high = s.length() - 1; isPalindrome = true;
30. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493686869529
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493686877633
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1493686885412
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 17 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493686892263
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493686899381
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 6
22. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
5. Moved from problem to solution at line 4
24. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 5
25. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 7
23. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 14
26. Reordered from line 14 to 8
Line 9 (3 moves):     while (low < high) {
19. Moved from problem to trash at line 1
27. Moved from trash to solution at line 17
28. Reordered from line 17 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
9. Moved from problem to solution at line 8
Line 11 (2 moves):         isPalindrome = false;
20. Moved from problem to trash at line 2
31. Moved from trash to solution at line 11
Line 12 (2 moves):         break;}
21. Moved from problem to trash at line 3
32. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
17. Moved from problem to solution at line 15
33. Reordered from line 17 to 13
Line 14 (2 moves):       }
16. Moved from problem to solution at line 15
34. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
11. Moved from problem to solution at line 10
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 11
Line 17 (1 moves):     else
13. Moved from problem to solution at line 12
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 13
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
18. Moved from problem to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 9
29. Moved from solution to problem at line 21
30. Moved from problem to trash at line 2
Your Grade:
You took 34 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493686912850
Time spent on this problem: 453 seconds
<HR>
