Problem No. 7
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
while (low < high) {
while while (low <= high) {
while (low < high {
String s = input.nextLine();          // This is line X
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
low++; high--;
System.out.println(s + " is not a palindrome");
isPalindrome = false;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
import java.util.Scanner;
else
break;}
}
}}
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 9:       low++; high--;
11. Moved from problem to solution at line 10:     if (isPalindrome)
12. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 12:     else
14. Moved from problem to solution at line 13:         isPalindrome = false;
15. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 11:     while (low < high) {
18. Moved from problem to trash at line 0:    while while (low <= high) {
19. Moved from problem to trash at line 1:     while (low < high {
20. Moved from problem to trash at line 2:         break;}
21. Moved from problem to trash at line 3:       }
Submit Parsons Solution clicked @ 1493680226392
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
23. Reordered from line 7 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493680238699
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493680252876
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493680260813
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 11 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493680269623
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493680278441
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 15 to 12:         isPalindrome = false;
29. Reordered from line 16 to 13:       System.out.println(s + " is not a palindrome");
30. Reordered from line 16 to 14:     else
Submit Parsons Solution clicked @ 1493680289953
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 12 to 11:         isPalindrome = false;
32. Reordered from line 13 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493680299787
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1493680307339
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 15 to 13:     else
Submit Parsons Solution clicked @ 1493680312516
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493680317422
This line is not in its correct location:     else
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 14:       }
Submit Parsons Solution clicked @ 1493680324910
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 17 to 15:     if (isPalindrome)
38. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493680333536
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
22. Reordered from line 5 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7
23. Reordered from line 7 to 6
24. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 6
25. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 4
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
17. Moved from problem to solution at line 11
26. Reordered from line 11 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 10
27. Reordered from line 11 to 10
Line 11 (3 moves):         isPalindrome = false;
14. Moved from problem to solution at line 13
28. Reordered from line 15 to 12
31. Reordered from line 12 to 11
Line 12 (2 moves):         break;}
20. Moved from problem to trash at line 2
33. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
10. Moved from problem to solution at line 9
35. Reordered from line 15 to 13
Line 14 (2 moves):       }
21. Moved from problem to trash at line 3
36. Moved from trash to solution at line 14
Line 15 (2 moves):     if (isPalindrome)
11. Moved from problem to solution at line 10
37. Reordered from line 17 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 11
38. Reordered from line 18 to 16
Line 17 (3 moves):     else
13. Moved from problem to solution at line 12
30. Reordered from line 16 to 14
34. Reordered from line 15 to 13
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 14
29. Reordered from line 16 to 13
32. Reordered from line 13 to 12
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
18. Moved from problem to trash at line 0
Line 9 (5) (1 moves):     while (low < high {
19. Moved from problem to trash at line 1
Your Grade:
You took 38 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493680352983
Time spent on this problem: 356 seconds
<HR>
