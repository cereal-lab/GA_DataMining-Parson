Problem No. 7
Using Template # 100
The Problem:
public class Palindrome {
if (isPalindrome)
else
break;}
import java.util.Scanner;
while (low < high) {
while while (low <= high) {
low++; high--;
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is not a palindrome");
int low, high, isPalindrome;          // This is line Y
}
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
isPalindrome = false;
public static void main(String[] args) {
System.out.println(s + " is a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:     }}
4. Reordered from line 3 to 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 6:     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to trash at line 0:       low++; high--;
10. Moved from trash to problem at line 21:       low++; high--;
11. Moved from problem to trash at line 0:    while while (low <= high) {
12. Moved from problem to solution at line 7:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
13. Moved from problem to solution at line 8:     String s = input.nextLine();          // This is line X
14. Reordered from line 6 to 9:     low= 0; high = s.length() - 1; isPalindrome = true;
15. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9:     while (low < high) {
18. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
19. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 12:     if (isPalindrome)
21. Reordered from line 12 to 11:     if (isPalindrome)
22. Moved from problem to solution at line 12:       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 13:     else
24. Moved from problem to solution at line 12:         break;}
25. Reordered from line 12 to 11:         break;}
26. Moved from problem to solution at line 12:       low++; high--;
27. Moved from problem to solution at line 13:       }
28. Moved from problem to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493684028628
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
30. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493684074371
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
4. Reordered from line 3 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
12. Moved from problem to solution at line 7
29. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 8
30. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 5
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
8. Moved from problem to solution at line 6
14. Reordered from line 6 to 9
15. Reordered from line 9 to 8
Line 9 (1 moves):     while (low < high) {
17. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 10
Line 11 (1 moves):         isPalindrome = false;
28. Moved from problem to solution at line 11
Line 12 (2 moves):         break;}
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 11
Line 13 (3 moves):       low++; high--;
9. Moved from problem to trash at line 0
10. Moved from trash to problem at line 21
26. Moved from problem to solution at line 12
Line 14 (1 moves):       }
27. Moved from problem to solution at line 13
Line 15 (2 moves):     if (isPalindrome)
20. Moved from problem to solution at line 12
21. Reordered from line 12 to 11
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 12
Line 17 (1 moves):     else
23. Moved from problem to solution at line 13
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
19. Moved from problem to solution at line 11
Line 19 (1 moves):     }}
3. Moved from problem to solution at line 2
Line 9 (37) (1 moves):    while while (low <= high) {
11. Moved from problem to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to trash at line 1
Your Grade:
You took 30 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493684077343
Time spent on this problem: 398 seconds
<HR>
