Problem No. 4
Using Template # 100
The Problem:
public class Palindrome {
break;}
low++; high--;
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
}}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
isPalindrome = false;
String s = input.nextLine();          // This is line X
while (low < high {
while (low < high) {
}
System.out.println(s + " is not a palindrome");
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Reordered from line 3 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4:     if (isPalindrome)
9. Reordered from line 4 to 5:     if (isPalindrome)
10. Moved from problem to solution at line 4:       System.out.println(s + " is a palindrome");
11. Moved from problem to solution at line 4:     while (low < high {
12. Reordered from line 4 to 7:     while (low < high {
13. Moved from problem to solution at line 7:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
14. Moved from problem to solution at line 8:     String s = input.nextLine();          // This is line X
15. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 10:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 11:     int low, high, isPalindrome;          // This is line Y
18. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
19. Moved from problem to solution at line 13:         isPalindrome = false;
20. Moved from problem to solution at line 14:     while (low < high) {
21. Moved from problem to solution at line 15:       if (s.charAt(low) != s.charAt(high)) {
22. Moved from problem to solution at line 16:       low++; high--;
23. Moved from problem to solution at line 17:         break;}
24. Moved from problem to solution at line 18:     else
25. Moved from problem to solution at line 19:     }}
26. Moved from problem to trash at line 0:       }
27. Reordered from line 19 to 20:     }}
Submit Parsons Solution clicked @ 1493677058341
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 6 to 4:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493677073987
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 6 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493677080117
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 12 to 4:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493677087502
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 9 to 4:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493677094264
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 10 to 4:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677099416
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 12 to 4:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493677103382
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 15 to 4:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493677107261
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 19 to 4:     while (low < high {
Submit Parsons Solution clicked @ 1493677115708
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 13 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493677122125
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493677127554
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 8 to 5:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677132381
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 8 to 5:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493677136001
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 12 to 5:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493677140215
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 14 to 5:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677154388
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 10 to 5:     while (low < high {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493677166216
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1493677749273
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1493677756116
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 6 to 5:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493677761913
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 12 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493677766856
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 12 to 6:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493677789763
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 13 to 6:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493677804967
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 8 to 6:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493677809001
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 13 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493677817133
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 13 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493677824384
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 13 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677831884
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 12 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677837373
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493677851539
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 14 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493677856596
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 13 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493677864001
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 14 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493677876520
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 16 to 12:         break;}
Submit Parsons Solution clicked @ 1493677881263
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 16 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493677886098
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Moved from trash to solution at line 14:       }
Submit Parsons Solution clicked @ 1493677893416
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Reordered from line 18 to 15:     else
Submit Parsons Solution clicked @ 1493677897448
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 16 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493677903828
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493677907496
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
5. Reordered from line 3 to 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
13. Moved from problem to solution at line 7
36. Reordered from line 13 to 4
Line 5 (4 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
29. Reordered from line 6 to 4
45. Reordered from line 12 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 8
31. Reordered from line 9 to 4
49. Reordered from line 13 to 6
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
17. Moved from problem to solution at line 11
33. Reordered from line 12 to 4
37. Reordered from line 7 to 5
50. Reordered from line 13 to 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 10
41. Reordered from line 14 to 5
52. Reordered from line 12 to 8
Line 9 (2 moves):     while (low < high) {
20. Moved from problem to solution at line 14
54. Reordered from line 14 to 9
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 15
34. Reordered from line 15 to 4
39. Reordered from line 8 to 5
55. Reordered from line 13 to 10
Line 11 (2 moves):         isPalindrome = false;
19. Moved from problem to solution at line 13
56. Reordered from line 14 to 11
Line 12 (2 moves):         break;}
23. Moved from problem to solution at line 17
57. Reordered from line 16 to 12
Line 13 (2 moves):       low++; high--;
22. Moved from problem to solution at line 16
58. Reordered from line 16 to 13
Line 14 (2 moves):       }
26. Moved from problem to trash at line 0
59. Moved from trash to solution at line 14
Line 15 (7 moves):     if (isPalindrome)
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
28. Reordered from line 6 to 4
40. Reordered from line 12 to 5
44. Reordered from line 6 to 5
48. Reordered from line 8 to 6
61. Reordered from line 16 to 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 4
47. Reordered from line 13 to 6
62. Reordered from line 17 to 16
Line 17 (2 moves):     else
24. Moved from problem to solution at line 18
60. Reordered from line 18 to 15
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 12
30. Reordered from line 12 to 4
46. Reordered from line 12 to 6
Line 19 (2 moves):     }}
25. Moved from problem to solution at line 19
27. Reordered from line 19 to 20
Line 9 (5) (5 moves):     while (low < high {
11. Moved from problem to solution at line 4
12. Reordered from line 4 to 7
35. Reordered from line 19 to 4
42. Reordered from line 10 to 5
43. Moved from solution to trash at line 1
Line 8 (7) (5 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 9
32. Reordered from line 10 to 4
38. Reordered from line 8 to 5
51. Reordered from line 13 to 8
53. Moved from solution to trash at line 1
Your Grade:
You took 62 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493677912275
Time spent on this problem: 984 seconds
<HR>
