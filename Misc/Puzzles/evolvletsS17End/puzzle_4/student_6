Problem No. 4
Using Template # 100
The Problem:
while (low < high) {
while while (low <= high) {
while (low < high {
isPalindrome = false;
public class Palindrome {
}}
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}
low= 0; high = s.length() - 1; isPalindrome = true;
low++; high--;
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
else
System.out.println(s + " is a palindrome");
import java.util.Scanner;
break;}
if (isPalindrome)
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   public static void main(String[] args) {
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 1: import java.util.Scanner;
4. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Reordered from line 4 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     }}
7. Reordered from line 4 to 5:     }}
8. Moved from problem to solution at line 5:       System.out.println(s + " is a palindrome");
9. Moved from problem to solution at line 6:         break;}
10. Moved from problem to solution at line 5:     else
11. Moved from problem to solution at line 5:       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 7:       low++; high--;
13. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
15. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
17. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 10:     while (low < high) {
19. Reordered from line 9 to 14:     else
20. Reordered from line 14 to 13:     else
21. Moved from problem to solution at line 9:    while while (low <= high) {
22. Moved from problem to solution at line 10:         isPalindrome = false;
23. Moved from problem to solution at line 12:     while (low < high {
24. Moved from problem to solution at line 12:     if (isPalindrome)
25. Moved from problem to solution at line 11:       }
Submit Parsons Solution clicked @ 1493171483424
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493171493488
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493171497806
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 16 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493171501181
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 10 to 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493171506663
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 15 to 9:     while (low < high {
Submit Parsons Solution clicked @ 1493171511905
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from solution to trash at line 0:     while (low < high {
Submit Parsons Solution clicked @ 1493171516063
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493171520743
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 9:     while (low < high {
Submit Parsons Solution clicked @ 1493171526247
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from solution to trash at line 1:     while (low < high {
35. Reordered from line 12 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493171531630
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1493171536411
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493171540970
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
3. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (2 moves):   public static void main(String[] args) {
1. Moved from problem to solution at line 0
5. Reordered from line 4 to 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Moved from problem to solution at line 3
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 5
26. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 5
27. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
16. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8
28. Reordered from line 16 to 8
Line 9 (2 moves):     while (low < high) {
18. Moved from problem to solution at line 10
35. Reordered from line 12 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 5
Line 11 (1 moves):         isPalindrome = false;
22. Moved from problem to solution at line 10
Line 12 (2 moves):         break;}
9. Moved from problem to solution at line 6
36. Reordered from line 18 to 12
Line 13 (2 moves):       low++; high--;
12. Moved from problem to solution at line 7
37. Reordered from line 15 to 13
Line 14 (1 moves):       }
25. Moved from problem to solution at line 11
Line 15 (1 moves):     if (isPalindrome)
24. Moved from problem to solution at line 12
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
8. Moved from problem to solution at line 5
Line 17 (3 moves):     else
10. Moved from problem to solution at line 5
19. Reordered from line 9 to 14
20. Reordered from line 14 to 13
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 13
Line 19 (2 moves):     }}
6. Moved from problem to solution at line 4
7. Reordered from line 4 to 5
Line 9 (37) (3 moves):    while while (low <= high) {
21. Moved from problem to solution at line 9
29. Reordered from line 10 to 9
32. Moved from solution to trash at line 1
Line 9 (5) (5 moves):     while (low < high {
23. Moved from problem to solution at line 12
30. Reordered from line 15 to 9
31. Moved from solution to trash at line 0
33. Moved from trash to solution at line 9
34. Moved from solution to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493171545932
Time spent on this problem: 183 seconds
<HR>
