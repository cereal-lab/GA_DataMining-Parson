Problem No. 4
Using Template # 100
The Problem:
if (s.charAt(low) != s.charAt(high)) {
else
low++; high--;
String s = input.nextLine();          // This is line X
if (isPalindrome)
break;}
int low, high, isPalindrome;          // This is line Y
while (low < high) {
while (low < high {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
public class Palindrome {
public static void main(String[] args) {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
}
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
isPalindrome = false;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:       if (s.charAt(low) != s.charAt(high)) {
2. Moved from problem to solution at line 1:     else
3. Moved from problem to solution at line 2:       low++; high--;
4. Moved from problem to solution at line 3:     if (isPalindrome)
5. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 5:     while (low < high) {
7. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 7:         break;}
9. Moved from problem to solution at line 8:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 9:     while (low < high {
11. Moved from problem to solution at line 10: public class Palindrome {
12. Moved from problem to solution at line 11:     low= 1; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 12:   public static void main(String[] args) {
14. Moved from problem to solution at line 13:     low= 0; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
16. Moved from problem to solution at line 15:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
17. Moved from problem to solution at line 16:     }}
18. Moved from problem to solution at line 17:       }
19. Moved from problem to solution at line 18: import java.util.Scanner;
20. Moved from problem to solution at line 19:       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 20:         isPalindrome = false;
22. Reordered from line 18 to 1: import java.util.Scanner;
23. Reordered from line 11 to 2: public class Palindrome {
24. Reordered from line 13 to 3:   public static void main(String[] args) {
25. Reordered from line 17 to 21:     }}
26. Reordered from line 11 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
27. Reordered from line 8 to 5:     String s = input.nextLine();          // This is line X
28. Reordered from line 8 to 6:     if (isPalindrome)
29. Reordered from line 10 to 6:     int low, high, isPalindrome;          // This is line Y
30. Reordered from line 16 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493694179923
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
32. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493694191244
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493694202011
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493694211041
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 15 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493694237721
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 12 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493694243726
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 20 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493694253856
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 20 to 11:         isPalindrome = false;
39. Reordered from line 20 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493694270733
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 16 to 12:         break;}
Submit Parsons Solution clicked @ 1493694276237
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 16 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493694279657
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 20 to 14:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493694284828
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 16 to 15:     if (isPalindrome)
44. Reordered from line 20 to 16:       System.out.println(s + " is a palindrome");
45. Reordered from line 17 to 20:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493694304532
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Moved from solution to trash at line 0:     while (low < high {
Submit Parsons Solution clicked @ 1493694311857
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493694320377
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
19. Moved from problem to solution at line 18
22. Reordered from line 18 to 1
Line 2 (2 moves): public class Palindrome {
11. Moved from problem to solution at line 10
23. Reordered from line 11 to 2
Line 3 (2 moves):   public static void main(String[] args) {
13. Moved from problem to solution at line 12
24. Reordered from line 13 to 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
16. Moved from problem to solution at line 15
30. Reordered from line 16 to 6
31. Reordered from line 6 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 8
26. Reordered from line 11 to 4
33. Reordered from line 6 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
5. Moved from problem to solution at line 4
27. Reordered from line 8 to 5
34. Reordered from line 7 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6
29. Reordered from line 10 to 6
32. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 13
35. Reordered from line 15 to 8
Line 9 (2 moves):     while (low < high) {
6. Moved from problem to solution at line 5
36. Reordered from line 12 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
1. Moved from problem to solution at line 0
37. Reordered from line 20 to 10
Line 11 (2 moves):         isPalindrome = false;
21. Moved from problem to solution at line 20
38. Reordered from line 20 to 11
Line 12 (2 moves):         break;}
8. Moved from problem to solution at line 7
40. Reordered from line 16 to 12
Line 13 (2 moves):       low++; high--;
3. Moved from problem to solution at line 2
41. Reordered from line 16 to 13
Line 14 (2 moves):       }
18. Moved from problem to solution at line 17
42. Reordered from line 20 to 14
Line 15 (3 moves):     if (isPalindrome)
4. Moved from problem to solution at line 3
28. Reordered from line 8 to 6
43. Reordered from line 16 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 14
44. Reordered from line 20 to 16
Line 17 (1 moves):     else
2. Moved from problem to solution at line 1
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 19
39. Reordered from line 20 to 12
45. Reordered from line 17 to 20
Line 19 (2 moves):     }}
17. Moved from problem to solution at line 16
25. Reordered from line 17 to 21
Line 9 (5) (2 moves):     while (low < high {
10. Moved from problem to solution at line 9
46. Moved from solution to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 11
47. Moved from solution to trash at line 1
Your Grade:
You took 47 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493694340903
Time spent on this problem: 299 seconds
<HR>
