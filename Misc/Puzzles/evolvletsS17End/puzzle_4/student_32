Problem No. 4
Using Template # 100
The Problem:
System.out.println(s + " is not a palindrome");
break;}
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
public class Palindrome {
if (isPalindrome)
int low, high, isPalindrome;          // This is line Y
System.out.println(s + " is a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
while (low < high {
import java.util.Scanner;
}}
String s = input.nextLine();          // This is line X
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to trash at line 0:     while (low < high) {
6. Moved from problem to solution at line 4:       if (s.charAt(low) != s.charAt(high)) {
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
11. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 8:       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 9:     else
14. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 9:     if (isPalindrome)
16. Reordered from line 8 to 9:       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 10:         isPalindrome = false;
18. Reordered from line 10 to 13:         isPalindrome = false;
19. Reordered from line 13 to 12:         isPalindrome = false;
20. Moved from problem to solution at line 14:         break;}
21. Moved from problem to solution at line 11:     while (low < high {
22. Moved from problem to solution at line 12:     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 13:       low++; high--;
24. Moved from problem to solution at line 18:       }
Submit Parsons Solution clicked @ 1493418682708
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493418697636
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493418703534
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
28. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493418716056
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 12 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493418722508
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 12 to 10:     while (low < high {
Submit Parsons Solution clicked @ 1493418731554
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 9 to 10:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493418755241
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from solution to trash at line 2:     while (low < high {
33. Moved from trash to solution at line 11:     while (low < high) {
Submit Parsons Solution clicked @ 1493418771279
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 11 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493418778885
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 14 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493418789179
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 15 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493418833236
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1493418841530
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 16 to 13:       low++; high--;
39. Reordered from line 17 to 14:       System.out.println(s + " is not a palindrome");
*  Indented line 16:       System.out.println(s + " is a palindrome");
40. Reordered from line 17 to 15:     else
Submit Parsons Solution clicked @ 1493418854491
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 18 to 15:       }
Submit Parsons Solution clicked @ 1493418859787
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 15 to 14:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493418886500
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 17 to 15:     if (isPalindrome)
44. Reordered from line 16 to 18:       System.out.println(s + " is not a palindrome");
45. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493418896075
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4
25. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 4
27. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 5
28. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
26. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 12
29. Reordered from line 12 to 8
Line 9 (3 moves):     while (low < high) {
5. Moved from problem to trash at line 0
33. Moved from trash to solution at line 11
34. Reordered from line 11 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
6. Moved from problem to solution at line 4
35. Reordered from line 14 to 10
Line 11 (4 moves):         isPalindrome = false;
17. Moved from problem to solution at line 10
18. Reordered from line 10 to 13
19. Reordered from line 13 to 12
36. Reordered from line 15 to 11
Line 12 (2 moves):         break;}
20. Moved from problem to solution at line 14
37. Reordered from line 17 to 12
Line 13 (2 moves):       low++; high--;
23. Moved from problem to solution at line 13
38. Reordered from line 16 to 13
Line 14 (3 moves):       }
24. Moved from problem to solution at line 18
41. Reordered from line 18 to 15
42. Reordered from line 15 to 14
Line 15 (3 moves):     if (isPalindrome)
15. Moved from problem to solution at line 9
31. Reordered from line 9 to 10
43. Reordered from line 17 to 15
Line 16 (4 moves):       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 8
16. Reordered from line 8 to 9
*  Indented line 16
45. Reordered from line 17 to 16
Line 17 (2 moves):     else
13. Moved from problem to solution at line 9
40. Reordered from line 17 to 15
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 11
39. Reordered from line 17 to 14
44. Reordered from line 16 to 18
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to trash at line 1
Line 9 (5) (3 moves):     while (low < high {
21. Moved from problem to solution at line 11
30. Reordered from line 12 to 10
32. Moved from solution to trash at line 2
Your Grade:
You took 45 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493418942989
Time spent on this problem: 791 seconds
<HR>
