Problem No. 4
Using Template # 100
The Problem:
}}
String s = input.nextLine();          // This is line X
else
isPalindrome = false;
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
}
while (low < high) {
while (low < high {
while while (low <= high) {
public class Palindrome {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
low++; high--;
int low, high, isPalindrome;          // This is line Y
break;}
if (isPalindrome)
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   public static void main(String[] args) {
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 1 to 2:     }}
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 2: public class Palindrome {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 8:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493659802598
Please clear all the lines from the left panel before submitting your answer.
11. Moved from problem to solution at line 9:     else
12. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8:     while (low < high) {
14. Moved from problem to solution at line 9:     while (low < high {
15. Moved from problem to solution at line 10:    while while (low <= high) {
16. Reordered from line 10 to 8:    while while (low <= high) {
17. Moved from solution to trash at line 0:     while (low < high {
18. Reordered from line 8 to 13:    while while (low <= high) {
19. Reordered from line 13 to 12:    while while (low <= high) {
20. Moved from problem to solution at line 13:       low++; high--;
21. Moved from problem to solution at line 14:         isPalindrome = false;
22. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
23. Moved from problem to solution at line 16:       }
24. Moved from problem to solution at line 16:         break;}
25. Moved from problem to solution at line 18:     int low, high, isPalindrome;          // This is line Y
26. Moved from problem to solution at line 19:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493659916960
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 18:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493659928132
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 7 to 18:     while (low < high) {
Submit Parsons Solution clicked @ 1493659952447
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 7 to 16:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493659958886
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 7 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493659976298
This line is not in its correct location:     else
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 7 to 14:     else
Submit Parsons Solution clicked @ 1493659984122
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493659989277
This line is not in its correct location:       low++; high--;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 7 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1493659994833
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 7 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493660002476
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 7 to 10:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493660015474
This line is not in its correct location:         break;}
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 9:         break;}
Submit Parsons Solution clicked @ 1493660025886
This line is not in its correct location:       }
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 7 to 9:       }
38. Reordered from line 9 to 8:       }
Submit Parsons Solution clicked @ 1493660030861
This line is not in its correct location:       }
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 8 to 7:       }
Submit Parsons Solution clicked @ 1493660041815
This line is not in its correct location:       }
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 7 to 8:       }
Submit Parsons Solution clicked @ 1493660048274
This line is not in its correct location:       }
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 8 to 15:       }
Submit Parsons Solution clicked @ 1493660057482
This line is not in its correct location:         break;}
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 8 to 14:         break;}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493660063118
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 8 to 14:       System.out.println(s + " is not a palindrome");
44. Reordered from line 14 to 13:       System.out.println(s + " is not a palindrome");
45. Reordered from line 13 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493660070782
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 8 to 13:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493660074111
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 8 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1493660077601
This line is not in its correct location:     else
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 8 to 11:     else
Submit Parsons Solution clicked @ 1493660083298
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 11 to 8:     else
50. Reordered from line 8 to 11:     else
51. Reordered from line 10 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493660094451
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 17 to 8:     while (low < high) {
Submit Parsons Solution clicked @ 1493660107210
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 8 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493660112808
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 17 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493660120690
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 18 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493660126327
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 16 to 12:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493660134211
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493660137561
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1493660145244
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 17 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493660151603
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Reordered from line 18 to 15:       }
Submit Parsons Solution clicked @ 1493660159366
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1493660164622
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1493660171060
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
5. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
1. Moved from problem to solution at line 0
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
25. Moved from problem to solution at line 18
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 8
29. Reordered from line 7 to 16
51. Reordered from line 10 to 8
Line 9 (4 moves):     while (low < high) {
13. Moved from problem to solution at line 8
28. Reordered from line 7 to 18
52. Reordered from line 17 to 8
53. Reordered from line 8 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
9. Moved from problem to solution at line 7
27. Reordered from line 7 to 18
54. Reordered from line 17 to 10
Line 11 (5 moves):         isPalindrome = false;
21. Moved from problem to solution at line 14
34. Reordered from line 7 to 11
46. Reordered from line 8 to 13
56. Reordered from line 16 to 12
57. Reordered from line 12 to 11
Line 12 (4 moves):         break;}
24. Moved from problem to solution at line 16
36. Reordered from line 7 to 9
42. Reordered from line 8 to 14
58. Reordered from line 17 to 12
Line 13 (4 moves):       low++; high--;
20. Moved from problem to solution at line 13
33. Reordered from line 7 to 12
47. Reordered from line 8 to 12
59. Reordered from line 17 to 13
Line 14 (8 moves):       }
23. Moved from problem to solution at line 16
37. Reordered from line 7 to 9
38. Reordered from line 9 to 8
39. Reordered from line 8 to 7
40. Reordered from line 7 to 8
41. Reordered from line 8 to 15
60. Reordered from line 18 to 15
61. Reordered from line 15 to 14
Line 15 (2 moves):     if (isPalindrome)
26. Moved from problem to solution at line 19
55. Reordered from line 18 to 11
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 8
30. Reordered from line 7 to 15
Line 17 (6 moves):     else
11. Moved from problem to solution at line 9
31. Reordered from line 7 to 14
48. Reordered from line 8 to 11
49. Reordered from line 11 to 8
50. Reordered from line 8 to 11
62. Reordered from line 18 to 17
Line 18 (5 moves):       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 15
35. Reordered from line 7 to 10
43. Reordered from line 8 to 14
44. Reordered from line 14 to 13
45. Reordered from line 13 to 12
Line 19 (2 moves):     }}
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 9 (5) (2 moves):     while (low < high {
14. Moved from problem to solution at line 9
17. Moved from solution to trash at line 0
Line 9 (37) (5 moves):    while while (low <= high) {
15. Moved from problem to solution at line 10
16. Reordered from line 10 to 8
18. Reordered from line 8 to 13
19. Reordered from line 13 to 12
32. Moved from solution to trash at line 1
Your Grade:
You took 62 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493660174650
Time spent on this problem: 541 seconds
<HR>
