Problem No. 4
Using Template # 100
The Problem:
low++; high--;
System.out.println(s + " is a palindrome");
if (isPalindrome)
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
else
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
isPalindrome = false;
public class Palindrome {
break;}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
}
while while (low <= high) {
while (low < high) {
}}
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
import java.util.Scanner;
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 2 to 1: public class Palindrome {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7:    while while (low <= high) {
10. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from solution to trash at line 0:    while while (low <= high) {
13. Moved from problem to solution at line 8:     while (low < high) {
14. Moved from solution to problem at line 19:     low= 0; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 9:     else
16. Moved from problem to solution at line 10:         isPalindrome = false;
17. Moved from problem to solution at line 9:       low++; high--;
18. Reordered from line 8 to 9:       if (s.charAt(low) != s.charAt(high)) {
19. Moved from solution to problem at line 8:       low++; high--;
20. Reordered from line 10 to 9:         isPalindrome = false;
21. Moved from problem to solution at line 11:       low++; high--;
22. Moved from problem to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 13:     if (isPalindrome)
24. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
25. Reordered from line 13 to 9:     if (isPalindrome)
26. Reordered from line 13 to 10:       low++; high--;
27. Reordered from line 11 to 13:       if (s.charAt(low) != s.charAt(high)) {
28. Reordered from line 11 to 13:         isPalindrome = false;
29. Moved from problem to solution at line 14:         break;}
30. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
31. Moved from problem to trash at line 2:       }
32. Reordered from line 9 to 15:     if (isPalindrome)
33. Reordered from line 14 to 16:       System.out.println(s + " is a palindrome");
34. Reordered from line 15 to 16:     }}
35. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
36. Reordered from line 12 to 11:         isPalindrome = false;
37. Reordered from line 13 to 12:         break;}
38. Moved from trash to solution at line 15:       }
39. Reordered from line 9 to 14:       low++; high--;
40. Reordered from line 13 to 16:     if (isPalindrome)
41. Reordered from line 16 to 15:     if (isPalindrome)
42. Moved from problem to trash at line 1:     int low, high, isPalindrome;          // This is line Y
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493679680329
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493679705982
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1493679713328
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493679718673
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 16 to 14:       }
Submit Parsons Solution clicked @ 1493679729417
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 17 to 15:     if (isPalindrome)
49. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
50. Reordered from line 17 to 19:       System.out.println(s + " is not a palindrome");
51. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1493679744092
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (2 moves): public class Palindrome {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
42. Moved from problem to trash at line 1
44. Moved from trash to solution at line 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 7
14. Moved from solution to problem at line 19
22. Moved from problem to solution at line 7
Line 9 (1 moves):     while (low < high) {
13. Moved from problem to solution at line 8
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 8
18. Reordered from line 8 to 9
27. Reordered from line 11 to 13
35. Reordered from line 11 to 10
Line 11 (4 moves):         isPalindrome = false;
16. Moved from problem to solution at line 10
20. Reordered from line 10 to 9
28. Reordered from line 11 to 13
36. Reordered from line 12 to 11
Line 12 (3 moves):         break;}
29. Moved from problem to solution at line 14
37. Reordered from line 13 to 12
45. Reordered from line 13 to 12
Line 13 (6 moves):       low++; high--;
17. Moved from problem to solution at line 9
19. Moved from solution to problem at line 8
21. Moved from problem to solution at line 11
26. Reordered from line 13 to 10
39. Reordered from line 9 to 14
46. Reordered from line 15 to 13
Line 14 (3 moves):       }
31. Moved from problem to trash at line 2
38. Moved from trash to solution at line 15
47. Reordered from line 16 to 14
Line 15 (6 moves):     if (isPalindrome)
23. Moved from problem to solution at line 13
25. Reordered from line 13 to 9
32. Reordered from line 9 to 15
40. Reordered from line 13 to 16
41. Reordered from line 16 to 15
48. Reordered from line 17 to 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 14
33. Reordered from line 14 to 16
49. Reordered from line 18 to 16
Line 17 (1 moves):     else
15. Moved from problem to solution at line 9
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
43. Moved from problem to solution at line 11
50. Reordered from line 17 to 19
Line 19 (3 moves):     }}
2. Moved from problem to solution at line 1
34. Reordered from line 15 to 16
51. Reordered from line 18 to 19
Line 9 (37) (2 moves):    while while (low <= high) {
9. Moved from problem to solution at line 7
12. Moved from solution to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
30. Moved from problem to trash at line 1
Your Grade:
You took 51 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493679745685
Time spent on this problem: 806 seconds
<HR>
