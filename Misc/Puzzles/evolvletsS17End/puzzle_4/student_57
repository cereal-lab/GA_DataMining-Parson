Problem No. 4
Using Template # 100
The Problem:
System.out.println(s + " is not a palindrome");
while (low < high) {
while while (low <= high) {
if (s.charAt(low) != s.charAt(high)) {
}
low++; high--;
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
System.out.println(s + " is a palindrome");
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
else
}}
String s = input.nextLine();          // This is line X
break;}
public static void main(String[] args) {
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
public class Palindrome {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 9:         isPalindrome = false;
11. Moved from problem to solution at line 10:     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 10:       }
13. Moved from problem to solution at line 7:       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 13:     while (low < high) {
15. Reordered from line 8 to 7:     String s = input.nextLine();          // This is line X
16. Moved from problem to solution at line 11:    while while (low <= high) {
17. Moved from problem to solution at line 13:       System.out.println(s + " is a palindrome");
18. Moved from problem to solution at line 11:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 12:       low++; high--;
20. Moved from problem to trash at line 0:     if (isPalindrome)
21. Moved from problem to solution at line 17:     else
22. Moved from problem to solution at line 17:         break;}
Submit Parsons Solution clicked @ 1493674391174
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493674396690
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493674400698
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 9 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493674408390
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 11 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493674413112
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 16 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493674422582
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 10 to 9:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493674436138
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 15 to 9:       }
30. Reordered from line 15 to 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493674448523
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 19 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493674455462
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 16 to 10:       low++; high--;
Submit Parsons Solution clicked @ 1493674479635
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 16 to 10:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493674493213
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 14 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493674496947
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 19 to 12:     else
Submit Parsons Solution clicked @ 1493674510864
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from solution to trash at line 1:    while while (low <= high) {
37. Reordered from line 14 to 12:       }
Submit Parsons Solution clicked @ 1493674526061
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 14 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1493674533684
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 15 to 12:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493674539262
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1493674544527
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 16 to 13:     else
Submit Parsons Solution clicked @ 1493674564288
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 17 to 13:       System.out.println(s + " is not a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493674586190
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 18 to 13:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493674589349
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 17 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493674592947
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 15 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493674597968
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 16 to 14:     else
Submit Parsons Solution clicked @ 1493674601976
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 17 to 14:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493674605780
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493674610116
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 17 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493674626610
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 18 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493674629861
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 18 to 15:     else
Submit Parsons Solution clicked @ 1493674634490
This line is not in its correct location:     else
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 19 to 15:     }}
Submit Parsons Solution clicked @ 1493674643989
This line is not in its correct location:     }}
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 16 to 15:     else
Submit Parsons Solution clicked @ 1493674647385
This line is not in its correct location:     else
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493674652783
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493674660915
This line is not in its correct location:     }}
Move this line in its place:       System.out.println(s + " is not a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 18 to 20:     }}
57. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493674668459
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
23. Reordered from line 6 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
15. Reordered from line 8 to 7
24. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 10
27. Reordered from line 16 to 8
Line 9 (2 moves):     while (low < high) {
14. Moved from problem to solution at line 13
31. Reordered from line 19 to 9
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
9. Moved from problem to solution at line 8
25. Reordered from line 9 to 8
28. Reordered from line 10 to 9
34. Reordered from line 14 to 10
Line 11 (2 moves):         isPalindrome = false;
10. Moved from problem to solution at line 9
33. Reordered from line 16 to 10
Line 12 (2 moves):         break;}
22. Moved from problem to solution at line 17
40. Reordered from line 18 to 12
Line 13 (4 moves):       low++; high--;
19. Moved from problem to solution at line 12
32. Reordered from line 16 to 10
38. Reordered from line 14 to 12
44. Reordered from line 17 to 13
Line 14 (4 moves):       }
12. Moved from problem to solution at line 10
29. Reordered from line 15 to 9
37. Reordered from line 14 to 12
48. Reordered from line 18 to 14
Line 15 (2 moves):     if (isPalindrome)
20. Moved from problem to trash at line 0
54. Moved from trash to solution at line 15
Line 16 (4 moves):       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 13
43. Reordered from line 18 to 13
50. Reordered from line 18 to 15
55. Reordered from line 18 to 16
Line 17 (6 moves):     else
21. Moved from problem to solution at line 17
35. Reordered from line 19 to 12
41. Reordered from line 16 to 13
46. Reordered from line 16 to 14
51. Reordered from line 18 to 15
53. Reordered from line 16 to 15
Line 18 (4 moves):       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 7
42. Reordered from line 17 to 13
45. Reordered from line 15 to 14
49. Reordered from line 17 to 15
Line 19 (3 moves):     }}
1. Moved from problem to solution at line 0
52. Reordered from line 19 to 15
56. Reordered from line 18 to 20
Line 9 (37) (3 moves):    while while (low <= high) {
16. Moved from problem to solution at line 11
30. Reordered from line 15 to 9
36. Moved from solution to trash at line 1
Line 8 (7) (5 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 11
26. Reordered from line 11 to 8
39. Reordered from line 15 to 12
47. Reordered from line 17 to 14
57. Moved from solution to trash at line 1
Your Grade:
You took 57 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493674708938
Time spent on this problem: 656 seconds
<HR>
