Problem No. 4
Using Template # 100
The Problem:
public static void main(String[] args) {
}}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
}
low++; high--;
System.out.println(s + " is not a palindrome");
while (low < high) {
while (low < high {
if (isPalindrome)
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
public class Palindrome {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
else
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1:       if (s.charAt(low) != s.charAt(high)) {
5. Moved from solution to problem at line 21:       if (s.charAt(low) != s.charAt(high)) {
6. Moved from problem to solution at line 1: import java.util.Scanner;
7. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 9:       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 8:     if (isPalindrome)
14. Moved from problem to solution at line 9:         isPalindrome = false;
15. Reordered from line 10 to 9:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 12:         break;}
17. Moved from problem to solution at line 13:     else
18. Moved from problem to solution at line 14:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 15:       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 14:     while (low < high {
21. Moved from problem to solution at line 16:       low++; high--;
22. Moved from problem to solution at line 18:       }
Submit Parsons Solution clicked @ 1493684526839
Please clear all the lines from the left panel before submitting your answer.
23. Moved from problem to trash at line 0:     while (low < high) {
24. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
25. Moved from trash to solution at line 14:     while (low < high) {
26. Moved from solution to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1493684546679
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493684561430
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493684574751
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 15 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493684584150
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 15 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493684591935
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493684603055
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493684611582
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 14 to 12:         break;}
Submit Parsons Solution clicked @ 1493684621598
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 16 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493684626103
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493684637134
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
37. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1493684649878
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
6. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 6
27. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 7
28. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 14
29. Reordered from line 15 to 8
Line 9 (3 moves):     while (low < high) {
23. Moved from problem to trash at line 0
25. Moved from trash to solution at line 14
30. Reordered from line 15 to 9
Line 10 (5 moves):       if (s.charAt(low) != s.charAt(high)) {
4. Moved from problem to solution at line 1
5. Moved from solution to problem at line 21
11. Moved from problem to solution at line 8
15. Reordered from line 10 to 9
31. Reordered from line 11 to 10
Line 11 (2 moves):         isPalindrome = false;
14. Moved from problem to solution at line 9
32. Reordered from line 12 to 11
Line 12 (2 moves):         break;}
16. Moved from problem to solution at line 12
33. Reordered from line 14 to 12
Line 13 (2 moves):       low++; high--;
21. Moved from problem to solution at line 16
34. Reordered from line 16 to 13
Line 14 (2 moves):       }
22. Moved from problem to solution at line 18
35. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
13. Moved from problem to solution at line 8
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 15
36. Reordered from line 18 to 16
Line 17 (2 moves):     else
17. Moved from problem to solution at line 13
37. Reordered from line 18 to 17
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 9
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to trash at line 1
Line 9 (5) (2 moves):     while (low < high {
20. Moved from problem to solution at line 14
26. Moved from solution to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493684672638
Time spent on this problem: 586 seconds
<HR>
