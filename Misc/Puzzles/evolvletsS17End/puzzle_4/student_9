Problem No. 4
Using Template # 100
The Problem:
String s = input.nextLine();          // This is line X
while (low < high) {
while (low < high {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
low++; high--;
else
System.out.println(s + " is a palindrome");
break;}
if (s.charAt(low) != s.charAt(high)) {
}
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
isPalindrome = false;
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
7. Moved from problem to trash at line 0:     while (low < high {
8. Moved from problem to trash at line 1:         break;}
9. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 8:       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 8:         isPalindrome = false;
13. Moved from problem to solution at line 8:     else
14. Moved from problem to solution at line 8:     if (isPalindrome)
15. Moved from problem to solution at line 9:       System.out.println(s + " is a palindrome");
16. Moved from problem to solution at line 8:     while (low < high) {
17. Moved from problem to solution at line 10:       }
18. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
19. Reordered from line 9 to 11:     if (isPalindrome)
20. Moved from problem to solution at line 10:       low++; high--;
21. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to trash at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493595402346
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
24. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493595415575
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493595425199
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493595428901
This line is not in its correct location:     while (low < high) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493595435650
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493595440776
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 16 to 11:         isPalindrome = false;
30. Reordered from line 17 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493595450502
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 11:         break;}
Submit Parsons Solution clicked @ 1493595457452
This line is not in its correct location:         break;}
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493595461167
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493595465297
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1493595470507
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 16 to 15:     if (isPalindrome)
36. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
37. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1493595477037
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 6
23. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
5. Moved from problem to solution at line 4
25. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 5
26. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 7
24. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to trash at line 2
27. Moved from trash to solution at line 8
Line 9 (1 moves):     while (low < high) {
16. Moved from problem to solution at line 8
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 10
Line 11 (3 moves):         isPalindrome = false;
12. Moved from problem to solution at line 8
29. Reordered from line 16 to 11
32. Reordered from line 12 to 11
Line 12 (2 moves):         break;}
8. Moved from problem to trash at line 1
31. Moved from trash to solution at line 11
Line 13 (2 moves):       low++; high--;
20. Moved from problem to solution at line 10
33. Reordered from line 14 to 13
Line 14 (2 moves):       }
17. Moved from problem to solution at line 10
34. Reordered from line 15 to 14
Line 15 (3 moves):     if (isPalindrome)
14. Moved from problem to solution at line 8
19. Reordered from line 9 to 11
35. Reordered from line 16 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 9
36. Reordered from line 17 to 16
Line 17 (2 moves):     else
13. Moved from problem to solution at line 8
37. Reordered from line 18 to 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
11. Moved from problem to solution at line 8
30. Reordered from line 17 to 12
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (1 moves):     while (low < high {
7. Moved from problem to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 9
28. Moved from solution to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493595489333
Time spent on this problem: 350 seconds
<HR>
