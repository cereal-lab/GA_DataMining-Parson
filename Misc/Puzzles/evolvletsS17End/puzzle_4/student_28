Problem No. 4
Using Template # 100
The Problem:
if (isPalindrome)
System.out.println(s + " is not a palindrome");
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
}
String s = input.nextLine();          // This is line X
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
while while (low <= high) {
while (low < high) {
import java.util.Scanner;
break;}
public class Palindrome {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
}}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 1:   public static void main(String[] args) {
5. Reordered from line 2 to 3: import java.util.Scanner;
6. Reordered from line 1 to 3:   public static void main(String[] args) {
7. Reordered from line 1 to 2: public class Palindrome {
8. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 3 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
11. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
13. Moved from solution to problem at line 21:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
14. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
15. Reordered from line 5 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
16. Moved from problem to solution at line 6:     if (isPalindrome)
17. Reordered from line 6 to 7:     if (isPalindrome)
18. Moved from problem to solution at line 7:       System.out.println(s + " is not a palindrome");
19. Moved from problem to solution at line 7:       low++; high--;
20. Reordered from line 7 to 9:       low++; high--;
21. Moved from solution to problem at line 3:       low++; high--;
Submit Parsons Solution clicked @ 1493695898137
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1493695898793
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1493695899082
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1493695899282
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1493695899509
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1493695899723
Please clear all the lines from the left panel before submitting your answer.
22. Moved from problem to solution at line 8:         isPalindrome = false;
23. Reordered from line 7 to 9:       System.out.println(s + " is not a palindrome");
24. Reordered from line 8 to 9:     if (isPalindrome)
25. Reordered from line 9 to 8:     if (isPalindrome)
26. Moved from solution to problem at line 7:         isPalindrome = false;
27. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
28. Moved from problem to solution at line 9:         break;}
29. Moved from problem to solution at line 10:     while (low < high) {
30. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
31. Moved from problem to solution at line 12:     }}
32. Moved from problem to trash at line 0:       System.out.println(s + " is a palindrome");
33. Moved from problem to trash at line 1:     else
34. Moved from problem to trash at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
35. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
36. Moved from problem to trash at line 4:         isPalindrome = false;
37. Moved from problem to trash at line 4:       }
38. Moved from problem to trash at line 3:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493696003977
Please clear all the lines from the left panel before submitting your answer.
39. Moved from problem to trash at line 4:       low++; high--;
Submit Parsons Solution clicked @ 1493696010232
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493696025012
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493696042047
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 9:    while while (low <= high) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493696064793
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 6:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493696075975
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 11 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493696086675
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 12 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493696094931
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493696104504
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 14 to 12:     }}
48. Reordered from line 15 to 12:       System.out.println(s + " is not a palindrome");
49. Reordered from line 13 to 15:     }}
50. Reordered from line 15 to 12:     }}
51. Reordered from line 15 to 12:         break;}
Submit Parsons Solution clicked @ 1493696119666
This line is not in its correct location:     }}
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 13 to 15:     }}
53. Moved from solution to trash at line 2:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493696129219
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1493696137283
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Moved from trash to solution at line 14:       }
56. Moved from solution to trash at line 4:       System.out.println(s + " is not a palindrome");
57. Moved from solution to trash at line 3:     }}
Submit Parsons Solution clicked @ 1493696150244
You have not yet identified all the lines. Insert:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Moved from trash to solution at line 14:     if (isPalindrome)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
59. Reordered from line 14 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493696176830
You have not yet identified all the lines. Insert:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Moved from trash to solution at line 15:     }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
61. Moved from solution to trash at line 3:     if (isPalindrome)
62. Moved from trash to solution at line 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493696196081
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Moved from trash to solution at line 15:     if (isPalindrome)
64. Moved from solution to trash at line 4:     }}
Submit Parsons Solution clicked @ 1493696209573
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Moved from trash to solution at line 16:       System.out.println(s + " is a palindrome");
66. Moved from trash to solution at line 17:     else
Submit Parsons Solution clicked @ 1493696245118
You have not yet identified all the lines. Insert:     }}
Sorry, your solution is not yet complete and correct.
Please correct your answer
67. Moved from trash to solution at line 18:     }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
68. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1493696254683
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (3 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
5. Reordered from line 2 to 3
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
7. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 1
6. Reordered from line 1 to 3
Line 4 (5 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
12. Moved from problem to solution at line 5
13. Moved from solution to problem at line 21
14. Moved from problem to solution at line 5
15. Reordered from line 5 to 6
40. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 3
9. Reordered from line 3 to 4
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 4
11. Reordered from line 4 to 5
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
27. Moved from problem to solution at line 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
34. Moved from problem to trash at line 2
41. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
29. Moved from problem to solution at line 10
44. Reordered from line 11 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
30. Moved from problem to solution at line 11
45. Reordered from line 12 to 10
Line 11 (4 moves):         isPalindrome = false;
22. Moved from problem to solution at line 8
26. Moved from solution to problem at line 7
36. Moved from problem to trash at line 4
46. Moved from trash to solution at line 11
Line 12 (2 moves):         break;}
28. Moved from problem to solution at line 9
51. Reordered from line 15 to 12
Line 13 (5 moves):       low++; high--;
19. Moved from problem to solution at line 7
20. Reordered from line 7 to 9
21. Moved from solution to problem at line 3
39. Moved from problem to trash at line 4
54. Moved from trash to solution at line 13
Line 14 (2 moves):       }
37. Moved from problem to trash at line 4
55. Moved from trash to solution at line 14
Line 15 (9 moves):     if (isPalindrome)
16. Moved from problem to solution at line 6
17. Reordered from line 6 to 7
24. Reordered from line 8 to 9
25. Reordered from line 9 to 8
53. Moved from solution to trash at line 2
58. Moved from trash to solution at line 14
59. Reordered from line 14 to 15
61. Moved from solution to trash at line 3
63. Moved from trash to solution at line 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
32. Moved from problem to trash at line 0
65. Moved from trash to solution at line 16
Line 17 (2 moves):     else
33. Moved from problem to trash at line 1
66. Moved from trash to solution at line 17
Line 18 (5 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 7
23. Reordered from line 7 to 9
48. Reordered from line 15 to 12
56. Moved from solution to trash at line 4
62. Moved from trash to solution at line 15
Line 19 (10 moves):     }}
31. Moved from problem to solution at line 12
47. Reordered from line 14 to 12
49. Reordered from line 13 to 15
50. Reordered from line 15 to 12
52. Reordered from line 13 to 15
57. Moved from solution to trash at line 3
60. Moved from trash to solution at line 15
64. Moved from solution to trash at line 4
67. Moved from trash to solution at line 18
68. Reordered from line 18 to 19
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
35. Moved from problem to trash at line 2
Line 9 (37) (3 moves):    while while (low <= high) {
38. Moved from problem to trash at line 3
42. Moved from trash to solution at line 9
43. Moved from solution to trash at line 6
Your Grade:
You took 68 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493696257635
Time spent on this problem: 1570 seconds
<HR>
