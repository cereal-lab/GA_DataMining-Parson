Problem No. 4
Using Template # 100
The Problem:
}
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
if (isPalindrome)
import java.util.Scanner;
while while (low <= high) {
while (low < high {
while (low < high) {
System.out.println(s + " is not a palindrome");
String s = input.nextLine();          // This is line X
low++; high--;
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
else
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:     }}
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:   public static void main(String[] args) {
7. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 9:         isPalindrome = false;
13. Moved from problem to solution at line 10:       System.out.println(s + " is not a palindrome");
14. Moved from problem to trash at line 0:     while (low < high {
15. Moved from problem to solution at line 8:     while (low < high) {
16. Moved from problem to solution at line 12:       low++; high--;
17. Moved from problem to solution at line 6:     low= 0; high = s.length() - 1; isPalindrome = true;
18. Reordered from line 6 to 9:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Reordered from line 8 to 9:     while (low < high) {
20. Moved from problem to solution at line 14:     if (isPalindrome)
21. Reordered from line 12 to 15:       System.out.println(s + " is not a palindrome");
22. Reordered from line 15 to 14:       System.out.println(s + " is not a palindrome");
23. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 15:     else
25. Moved from problem to solution at line 13:       }
26. Moved from problem to trash at line 1:    while while (low <= high) {
27. Moved from problem to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1493663707227
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
29. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
30. Reordered from line 4 to 7:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
31. Reordered from line 7 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493663735555
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493663753980
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
5. Reordered from line 3 to 2
Line 3 (1 moves):   public static void main(String[] args) {
6. Moved from problem to solution at line 3
Line 4 (4 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4
30. Reordered from line 4 to 7
31. Reordered from line 7 to 6
32. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 6
28. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 7
29. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 6
18. Reordered from line 6 to 9
Line 9 (2 moves):     while (low < high) {
15. Moved from problem to solution at line 8
19. Reordered from line 8 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 8
Line 11 (1 moves):         isPalindrome = false;
12. Moved from problem to solution at line 9
Line 12 (1 moves):         break;}
27. Moved from problem to solution at line 12
Line 13 (1 moves):       low++; high--;
16. Moved from problem to solution at line 12
Line 14 (1 moves):       }
25. Moved from problem to solution at line 13
Line 15 (1 moves):     if (isPalindrome)
20. Moved from problem to solution at line 14
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 14
Line 17 (1 moves):     else
24. Moved from problem to solution at line 15
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
13. Moved from problem to solution at line 10
21. Reordered from line 12 to 15
22. Reordered from line 15 to 14
Line 19 (1 moves):     }}
4. Moved from problem to solution at line 2
Line 9 (5) (1 moves):     while (low < high {
14. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
26. Moved from problem to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493663763572
Time spent on this problem: 627 seconds
<HR>
