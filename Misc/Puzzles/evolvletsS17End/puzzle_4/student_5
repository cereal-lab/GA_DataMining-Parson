Problem No. 4
Using Template # 100
The Problem:
low++; high--;
else
System.out.println(s + " is a palindrome");
while while (low <= high) {
while (low < high) {
public class Palindrome {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is not a palindrome");
}}
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
break;}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
if (isPalindrome)
}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
import java.util.Scanner;
isPalindrome = false;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to trash at line 1:    while while (low <= high) {
13. Moved from problem to solution at line 9:     while (low < high) {
14. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 11:       low++; high--;
16. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 13:     else
18. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 15:         break;}
20. Moved from problem to solution at line 11:         isPalindrome = false;
21. Moved from problem to trash at line 2:     if (isPalindrome)
22. Moved from problem to trash at line 1:       }
Submit Parsons Solution clicked @ 1493151888575
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493151897197
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 7 to 5:     String s = input.nextLine();          // This is line X
25. Reordered from line 7 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493151905426
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
27. Reordered from line 5 to 8:     int low, high, isPalindrome;          // This is line Y
28. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493151919496
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493151928928
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 17 to 12:     }}
Submit Parsons Solution clicked @ 1493151936125
This line is not in its correct location:     }}
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 12 to 17:     }}
32. Reordered from line 16 to 12:         break;}
Submit Parsons Solution clicked @ 1493151952590
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 17:       }
34. Reordered from line 17 to 14:       }
Submit Parsons Solution clicked @ 1493151966895
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 18:     if (isPalindrome)
36. Reordered from line 18 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493151976881
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
38. Reordered from line 17 to 19:       System.out.println(s + " is not a palindrome");
39. Reordered from line 19 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493151986294
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
23. Reordered from line 5 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 6
25. Reordered from line 7 to 6
28. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7
24. Reordered from line 7 to 5
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
26. Reordered from line 7 to 5
27. Reordered from line 5 to 8
29. Reordered from line 8 to 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
13. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 10
Line 11 (1 moves):         isPalindrome = false;
20. Moved from problem to solution at line 11
Line 12 (2 moves):         break;}
19. Moved from problem to solution at line 15
32. Reordered from line 16 to 12
Line 13 (1 moves):       low++; high--;
15. Moved from problem to solution at line 11
Line 14 (3 moves):       }
22. Moved from problem to trash at line 1
33. Moved from trash to solution at line 17
34. Reordered from line 17 to 14
Line 15 (3 moves):     if (isPalindrome)
21. Moved from problem to trash at line 2
35. Moved from trash to solution at line 18
36. Reordered from line 18 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
18. Moved from problem to solution at line 14
37. Reordered from line 18 to 16
Line 17 (1 moves):     else
17. Moved from problem to solution at line 13
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 12
38. Reordered from line 17 to 19
39. Reordered from line 19 to 18
Line 19 (3 moves):     }}
2. Moved from problem to solution at line 1
30. Reordered from line 17 to 12
31. Reordered from line 12 to 17
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
12. Moved from problem to trash at line 1
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493151994849
Time spent on this problem: 265 seconds
<HR>
