Problem No. 4
Using Template # 100
The Problem:
System.out.println(s + " is not a palindrome");
}
System.out.println(s + " is a palindrome");
isPalindrome = false;
if (s.charAt(low) != s.charAt(high)) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
}}
import java.util.Scanner;
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
low++; high--;
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while (low < high {
while (low < high) {
while while (low <= high) {
public static void main(String[] args) {
public class Palindrome {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   public static void main(String[] args) {
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 1: import java.util.Scanner;
4. Moved from problem to solution at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
5. Reordered from line 3 to 4:     low= 0; high = s.length() - 1; isPalindrome = true;
6. Moved from problem to trash at line 0:     while (low < high {
7. Moved from problem to trash at line 1:    while while (low <= high) {
8. Moved from problem to solution at line 4:         isPalindrome = false;
9. Reordered from line 4 to 5:         isPalindrome = false;
10. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
12. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
13. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 8:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
16. Reordered from line 9 to 7:     String s = input.nextLine();          // This is line X
17. Reordered from line 8 to 6:     int low, high, isPalindrome;          // This is line Y
18. Reordered from line 9 to 7:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
19. Moved from problem to solution at line 9:     while (low < high) {
20. Reordered from line 9 to 10:     while (low < high) {
21. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
22. Moved from solution to trash at line 2:     while (low < high) {
23. Moved from problem to solution at line 10:       low++; high--;
24. Moved from problem to solution at line 11:         break;}
25. Moved from problem to solution at line 12:     if (isPalindrome)
26. Moved from problem to solution at line 13:     else
27. Moved from problem to solution at line 14:     }}
28. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
29. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
30. Moved from problem to solution at line 17:       }
31. Reordered from line 18 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493169040693
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 6 to 4:     int low, high, isPalindrome;          // This is line Y
33. Reordered from line 7 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493169060066
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 7 to 6:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493169076765
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 5 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493169081729
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 5:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493169086977
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 8 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
38. Reordered from line 10 to 6:       if (s.charAt(low) != s.charAt(high)) {
39. Reordered from line 10 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493169131904
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 13 to 7:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493169157809
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 8 to 7:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493169162480
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 9 to 7:     low= 0; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493169166705
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 10 to 7:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493169173798
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 11 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493169178771
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 10 to 8:       if (s.charAt(low) != s.charAt(high)) {
46. Reordered from line 10 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493169196283
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 12 to 9:       low++; high--;
Submit Parsons Solution clicked @ 1493169207356
This line is not in its correct location:       low++; high--;
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 11 to 9:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493169213101
This line is not in its correct location:         isPalindrome = false;
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 12 to 9:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493169217016
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 13 to 9:         break;}
Submit Parsons Solution clicked @ 1493169220851
This line is not in its correct location:         break;}
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 14 to 9:     else
Submit Parsons Solution clicked @ 1493169225560
This line is not in its correct location:     else
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 18:    while while (low <= high) {
53. Moved from trash to solution at line 19:     while (low < high {
54. Moved from trash to solution at line 20:     while (low < high) {
55. Reordered from line 21 to 9:       }
Submit Parsons Solution clicked @ 1493169246070
This line is not in its correct location:       }
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Moved from solution to trash at line 0:    while while (low <= high) {
57. Moved from solution to trash at line 1:     while (low < high {
58. Reordered from line 19 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493169257148
This line is not in its correct location:       }
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 10 to 14:       }
60. Reordered from line 12 to 10:     if (isPalindrome)
61. Reordered from line 16 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493169280966
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 18 to 11:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493169287830
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 19 to 11:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493169292593
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
64. Reordered from line 18 to 11:       low++; high--;
Submit Parsons Solution clicked @ 1493169303731
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 17 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493169371498
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
66. Reordered from line 14 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493169392050
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
67. Reordered from line 15 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493169400945
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
68. Reordered from line 14 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1493169404583
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
69. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1493169408613
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
70. Reordered from line 15 to 14:       System.out.println(s + " is not a palindrome");
71. Reordered from line 17 to 16:     else
72. Reordered from line 14 to 18:       System.out.println(s + " is not a palindrome");
73. Reordered from line 17 to 18:       }
74. Reordered from line 17 to 15:       System.out.println(s + " is not a palindrome");
75. Reordered from line 17 to 15:       System.out.println(s + " is a palindrome");
76. Reordered from line 17 to 16:     else
Submit Parsons Solution clicked @ 1493169441307
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
77. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493169448336
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
3. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
1. Moved from problem to solution at line 0
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
15. Moved from problem to solution at line 8
18. Reordered from line 9 to 7
33. Reordered from line 7 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
37. Reordered from line 8 to 5
Line 6 (4 moves):     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
16. Reordered from line 9 to 7
39. Reordered from line 10 to 6
Line 7 (5 moves):     int low, high, isPalindrome;          // This is line Y
14. Moved from problem to solution at line 7
17. Reordered from line 8 to 6
32. Reordered from line 6 to 4
35. Reordered from line 5 to 6
44. Reordered from line 11 to 7
Line 8 (5 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
4. Moved from problem to solution at line 3
5. Reordered from line 3 to 4
36. Reordered from line 7 to 5
42. Reordered from line 9 to 7
46. Reordered from line 10 to 8
Line 9 (5 moves):     while (low < high) {
19. Moved from problem to solution at line 9
20. Reordered from line 9 to 10
22. Moved from solution to trash at line 2
54. Moved from trash to solution at line 20
58. Reordered from line 19 to 9
Line 10 (6 moves):       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 10
31. Reordered from line 18 to 10
38. Reordered from line 10 to 6
41. Reordered from line 8 to 7
45. Reordered from line 10 to 8
61. Reordered from line 16 to 10
Line 11 (6 moves):         isPalindrome = false;
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
34. Reordered from line 7 to 6
43. Reordered from line 10 to 7
48. Reordered from line 11 to 9
65. Reordered from line 17 to 11
Line 12 (3 moves):         break;}
24. Moved from problem to solution at line 11
50. Reordered from line 13 to 9
69. Reordered from line 17 to 12
Line 13 (4 moves):       low++; high--;
23. Moved from problem to solution at line 10
47. Reordered from line 12 to 9
64. Reordered from line 18 to 11
68. Reordered from line 14 to 12
Line 14 (5 moves):       }
30. Moved from problem to solution at line 17
55. Reordered from line 21 to 9
59. Reordered from line 10 to 14
73. Reordered from line 17 to 18
77. Reordered from line 18 to 14
Line 15 (5 moves):     if (isPalindrome)
25. Moved from problem to solution at line 12
40. Reordered from line 13 to 7
49. Reordered from line 12 to 9
60. Reordered from line 12 to 10
67. Reordered from line 15 to 12
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
29. Moved from problem to solution at line 16
63. Reordered from line 19 to 11
75. Reordered from line 17 to 15
Line 17 (4 moves):     else
26. Moved from problem to solution at line 13
51. Reordered from line 14 to 9
71. Reordered from line 17 to 16
76. Reordered from line 17 to 16
Line 18 (6 moves):       System.out.println(s + " is not a palindrome");
28. Moved from problem to solution at line 15
62. Reordered from line 18 to 11
66. Reordered from line 14 to 12
70. Reordered from line 15 to 14
72. Reordered from line 14 to 18
74. Reordered from line 17 to 15
Line 19 (1 moves):     }}
27. Moved from problem to solution at line 14
Line 9 (37) (3 moves):    while while (low <= high) {
7. Moved from problem to trash at line 1
52. Moved from trash to solution at line 18
56. Moved from solution to trash at line 0
Line 9 (5) (3 moves):     while (low < high {
6. Moved from problem to trash at line 0
53. Moved from trash to solution at line 19
57. Moved from solution to trash at line 1
Your Grade:
You took 77 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493169965961
Time spent on this problem: 1661 seconds
<HR>
