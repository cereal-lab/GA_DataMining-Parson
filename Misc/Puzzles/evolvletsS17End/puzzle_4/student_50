Problem No. 4
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
break;}
}
int low, high, isPalindrome;          // This is line Y
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
else
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high {
while (low < high) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is not a palindrome");
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
low++; high--;
}}
isPalindrome = false;
public class Palindrome {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:       System.out.println(s + " is not a palindrome");
7. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
8. Moved from solution to problem at line 21:       System.out.println(s + " is not a palindrome");
9. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 8:     while (low < high) {
12. Moved from problem to trash at line 0:     while (low < high {
13. Moved from problem to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 10:         isPalindrome = false;
15. Moved from problem to solution at line 11:     else
16. Moved from problem to solution at line 12:       low++; high--;
17. Moved from problem to solution at line 11:         break;}
18. Moved from problem to solution at line 14:       }
19. Moved from problem to solution at line 15:     if (isPalindrome)
20. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
21. Reordered from line 12 to 17:     else
22. Reordered from line 17 to 16:     else
23. Moved from problem to solution at line 17:       System.out.println(s + " is not a palindrome");
24. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493661696094
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
11. Moved from problem to solution at line 8
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 9
Line 11 (1 moves):         isPalindrome = false;
14. Moved from problem to solution at line 10
Line 12 (1 moves):         break;}
17. Moved from problem to solution at line 11
Line 13 (1 moves):       low++; high--;
16. Moved from problem to solution at line 12
Line 14 (1 moves):       }
18. Moved from problem to solution at line 14
Line 15 (1 moves):     if (isPalindrome)
19. Moved from problem to solution at line 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 16
Line 17 (3 moves):     else
15. Moved from problem to solution at line 11
21. Reordered from line 12 to 17
22. Reordered from line 17 to 16
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
6. Moved from problem to solution at line 5
8. Moved from solution to problem at line 21
23. Moved from problem to solution at line 17
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (1 moves):     while (low < high {
12. Moved from problem to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to trash at line 1
Your Grade:
You took 25 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493661700678
Time spent on this problem: 269 seconds
<HR>
