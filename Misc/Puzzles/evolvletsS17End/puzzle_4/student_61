Problem No. 4
Using Template # 100
The Problem:
low++; high--;
break;}
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
}}
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
else
while (low < high) {
while (low < high {
System.out.println(s + " is a palindrome");
}
String s = input.nextLine();          // This is line X
import java.util.Scanner;
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:       System.out.println(s + " is a palindrome");
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Moved from problem to solution at line 1: import java.util.Scanner;
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 6:       if (s.charAt(low) != s.charAt(high)) {
8. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 9:       low++; high--;
11. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 11:     else
13. Moved from problem to solution at line 12:         isPalindrome = false;
14. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 9:     if (isPalindrome)
16. Moved from problem to solution at line 15:     }}
17. Moved from problem to solution at line 12:       }
18. Moved from problem to solution at line 14:     while (low < high {
19. Moved from problem to solution at line 13:         break;}
20. Moved from problem to trash at line 0:     while (low < high) {
21. Moved from problem to trash at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493682995418
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
23. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493683009082
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493683016426
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493683020586
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493683030826
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 16 to 9:     while (low < high {
Submit Parsons Solution clicked @ 1493683039690
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from solution to trash at line 1:     while (low < high {
29. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493683050282
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 17 to 11:         isPalindrome = false;
31. Reordered from line 15 to 12:       }
32. Reordered from line 17 to 13:     else
33. Reordered from line 18 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493683084650
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1493683090730
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 18 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493683095889
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1493683101474
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 17 to 15:     if (isPalindrome)
38. Reordered from line 18 to 16:     low= 1; high = s.length() - 1; isPalindrome = true;
39. Reordered from line 20 to 17:       System.out.println(s + " is a palindrome");
40. Reordered from line 20 to 19:     }}
41. Reordered from line 20 to 19:     else
42. Reordered from line 18 to 19:       System.out.println(s + " is not a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1493683126106
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493683136226
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
3. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 6
22. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
5. Moved from problem to solution at line 4
24. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 5
25. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 7
23. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to trash at line 1
26. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
20. Moved from problem to trash at line 0
29. Moved from trash to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
7. Moved from problem to solution at line 6
Line 11 (2 moves):         isPalindrome = false;
13. Moved from problem to solution at line 12
30. Reordered from line 17 to 11
Line 12 (2 moves):         break;}
19. Moved from problem to solution at line 13
34. Reordered from line 18 to 12
Line 13 (2 moves):       low++; high--;
10. Moved from problem to solution at line 9
35. Reordered from line 18 to 13
Line 14 (3 moves):       }
17. Moved from problem to solution at line 12
31. Reordered from line 15 to 12
36. Reordered from line 15 to 14
Line 15 (2 moves):     if (isPalindrome)
15. Moved from problem to solution at line 9
37. Reordered from line 17 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
1. Moved from problem to solution at line 0
39. Reordered from line 20 to 17
Line 17 (3 moves):     else
12. Moved from problem to solution at line 11
32. Reordered from line 17 to 13
41. Reordered from line 20 to 19
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
14. Moved from problem to solution at line 13
33. Reordered from line 18 to 12
42. Reordered from line 18 to 19
Line 19 (2 moves):     }}
16. Moved from problem to solution at line 15
40. Reordered from line 20 to 19
Line 9 (5) (3 moves):     while (low < high {
18. Moved from problem to solution at line 14
27. Reordered from line 16 to 9
28. Moved from solution to trash at line 1
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 9
38. Reordered from line 18 to 16
43. Moved from solution to trash at line 1
Your Grade:
You took 43 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493683146218
Time spent on this problem: 458 seconds
<HR>
