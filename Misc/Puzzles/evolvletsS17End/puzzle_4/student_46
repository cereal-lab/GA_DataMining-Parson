Problem No. 4
Using Template # 100
The Problem:
}}
else
System.out.println(s + " is not a palindrome");
public static void main(String[] args) {
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
}
if (s.charAt(low) != s.charAt(high)) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
if (isPalindrome)
break;}
String s = input.nextLine();          // This is line X
isPalindrome = false;
System.out.println(s + " is a palindrome");
public class Palindrome {
while (low < high {
while (low < high) {
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 9:     while (low < high {
11. Moved from problem to solution at line 10:       low++; high--;
12. Moved from solution to trash at line 0:     while (low < high {
13. Moved from problem to solution at line 9:     while (low < high) {
14. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 13:         break;}
17. Moved from problem to solution at line 14:       }
18. Moved from problem to solution at line 13:         isPalindrome = false;
19. Moved from problem to solution at line 15:     if (isPalindrome)
20. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
21. Reordered from line 10 to 17:       low++; high--;
22. Reordered from line 17 to 16:       low++; high--;
23. Moved from problem to trash at line 1:     else
24. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493657722398
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
26. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493657797488
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 12 to 11:         isPalindrome = false;
28. Moved from trash to solution at line 17:     else
29. Reordered from line 12 to 18:       System.out.println(s + " is not a palindrome");
30. Reordered from line 17 to 19:       }
31. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1493657848211
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493657860760
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493657873209
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
25. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
26. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
13. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 11
Line 11 (2 moves):         isPalindrome = false;
18. Moved from problem to solution at line 13
27. Reordered from line 12 to 11
Line 12 (1 moves):         break;}
16. Moved from problem to solution at line 13
Line 13 (4 moves):       low++; high--;
11. Moved from problem to solution at line 10
21. Reordered from line 10 to 17
22. Reordered from line 17 to 16
32. Reordered from line 15 to 13
Line 14 (3 moves):       }
17. Moved from problem to solution at line 14
30. Reordered from line 17 to 19
33. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
19. Moved from problem to solution at line 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 16
Line 17 (2 moves):     else
23. Moved from problem to trash at line 1
28. Moved from trash to solution at line 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 12
29. Reordered from line 12 to 18
Line 19 (2 moves):     }}
1. Moved from problem to solution at line 0
31. Reordered from line 18 to 19
Line 9 (5) (2 moves):     while (low < high {
10. Moved from problem to solution at line 9
12. Moved from solution to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to trash at line 2
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493657882256
Time spent on this problem: 1060 seconds
<HR>
