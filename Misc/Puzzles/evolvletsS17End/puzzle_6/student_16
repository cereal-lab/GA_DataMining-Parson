Problem No. 6
Using Template # 100
The Problem:
else if (s1 == s2) // This line should be written before Line X
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
public class StringOperation {
System.out.println("Neither same content nor same object");
else
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
else if (s1.compareTo(s2) == 0) // This is Line X
public static void main(String[] args) {
}}
String s1 = "Hello World", s2 = "Hello Worlds";
System.out.println(s1 + " and " +s2 + " are same object");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class StringOperation {
2. Moved from problem to solution at line 1: 			System.out.println("Neither same content nor same object");
3. Reordered from line 1 to 2: 			System.out.println("Neither same content nor same object");
4. Moved from problem to solution at line 2: 	public static void main(String[] args) {
5. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
6. Moved from solution to problem at line 4: 			System.out.println("Neither same content nor same object");
7. Moved from problem to solution at line 2: 		String s1 = "Hello World", s2 = "Hello Worlds";
8. Reordered from line 2 to 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
9. Moved from problem to solution at line 3: 		if (s1.equals(s2))
10. Reordered from line 3 to 4: 		if (s1.equals(s2))
11. Moved from problem to solution at line 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
12. Reordered from line 4 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
13. Moved from problem to solution at line 5: 		else
14. Reordered from line 5 to 6: 		else
15. Moved from solution to problem at line 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
16. Moved from problem to solution at line 5: 			System.out.println(s1 + " and " +s2 + " are same object");
17. Moved from problem to solution at line 6: 			System.out.println("Neither same content nor same object");
18. Reordered from line 6 to 7: 			System.out.println("Neither same content nor same object");
19. Moved from problem to solution at line 7: 		else if (s1 == s2) // This line should be written before Line X
20. Reordered from line 7 to 8: 		else if (s1 == s2) // This line should be written before Line X
21. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
22. Moved from problem to solution at line 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
23. Moved from problem to solution at line 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
24. Moved from problem to solution at line 10: 	}}
25. Reordered from line 10 to 11: 	}}
26. Reordered from line 10 to 9: 		else if (s1 == s2) // This line should be written before Line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
27. Moved from solution to trash at line 2: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493680109068
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 9 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1493680123834
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Insert this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493680141123
This line is not in its correct location: 		else
Move this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 10 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1493680157697
This line is not in its correct location: 		else
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1493680173122
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
1. Moved from problem to solution at line 0
Line 2 (1 moves): 	public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
7. Moved from problem to solution at line 2
8. Reordered from line 2 to 3
Line 4 (2 moves): 		if (s1.equals(s2))
9. Moved from problem to solution at line 3
10. Reordered from line 3 to 4
Line 5 (5 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
11. Moved from problem to solution at line 4
12. Reordered from line 4 to 5
15. Moved from solution to problem at line 7
23. Moved from problem to solution at line 9
28. Reordered from line 9 to 5
Line 6 (5 moves): 		else if (s1 == s2) // This line should be written before Line X
19. Moved from problem to solution at line 7
20. Reordered from line 7 to 8
26. Reordered from line 10 to 9
27. Moved from solution to trash at line 2
29. Moved from trash to solution at line 6
Line 7 (1 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
16. Moved from problem to solution at line 5
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
22. Moved from problem to solution at line 8
30. Reordered from line 10 to 8
Line 9 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
21. Moved from problem to trash at line 1
31. Moved from trash to solution at line 9
Line 10 (2 moves): 		else
13. Moved from problem to solution at line 5
14. Reordered from line 5 to 6
Line 11 (5 moves): 			System.out.println("Neither same content nor same object");
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
6. Moved from solution to problem at line 4
17. Moved from problem to solution at line 6
18. Reordered from line 6 to 7
Line 12 (2 moves): 	}}
24. Moved from problem to solution at line 10
25. Reordered from line 10 to 11
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
5. Moved from problem to trash at line 0
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1493680179458
Time spent on this problem: 415 seconds
<HR>
