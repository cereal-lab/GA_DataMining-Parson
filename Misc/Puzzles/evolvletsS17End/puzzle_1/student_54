Problem No. 1
Using Template # 100
The Problem:
System.out.println(s1 + " and " +s2 + " are same object");
public class StringOperation {
else if (s1 == s2) // This line should be written before Line X
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
public static void main(String[] args) {
}}
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println("Neither same content nor same object");
String s1 = "Hello World", s2 = "Hello Worlds";
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println(s1 + " and " +s2 + " are same object");
public class StringOperation {
else if (s1 == s2) // This line should be written before Line X
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
public static void main(String[] args) {
}}
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println("Neither same content nor same object");
String s1 = "Hello World", s2 = "Hello Worlds";
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class StringOperation {
2. Moved from problem to solution at line 1: 	public static void main(String[] args) {
3. Reordered from line 1 to 2: 	public static void main(String[] args) {
4. Moved from problem to solution at line 2: 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Reordered from line 2 to 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
6. Moved from problem to solution at line 3: 		if (s1.equals(s2))
7. Reordered from line 3 to 4: 		if (s1.equals(s2))
8. Moved from problem to solution at line 4: 			System.out.println(s1 + " and " +s2 + " are same object");
9. Reordered from line 4 to 5: 			System.out.println(s1 + " and " +s2 + " are same object");
10. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
11. Moved from problem to solution at line 5: 		else if (s1 == s2) // This line should be written before Line X
12. Reordered from line 5 to 6: 		else if (s1 == s2) // This line should be written before Line X
13. Moved from problem to solution at line 6: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
14. Reordered from line 6 to 7: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
15. Moved from problem to solution at line 7: 		else if (s1.compareTo(s2) == 0) // This is Line X
16. Reordered from line 7 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
17. Moved from problem to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
18. Reordered from line 8 to 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
19. Moved from problem to solution at line 9: 		else
20. Reordered from line 9 to 10: 		else
21. Moved from problem to solution at line 10: 			System.out.println("Neither same content nor same object");
22. Reordered from line 10 to 11: 			System.out.println("Neither same content nor same object");
23. Moved from problem to solution at line 11: 	}}
24. Reordered from line 11 to 12: 	}}
Submit Parsons Solution clicked @ 1493680262952
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 5 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
Submit Parsons Solution clicked @ 1493680271523
This line is not in its correct location: 		else if (s1 == s2) // This line should be written before Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 5 to 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1493680279972
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
1. Moved from problem to solution at line 0
Line 2 (2 moves): 	public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves): 		if (s1.equals(s2))
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
Line 6 (3 moves): 		else if (s1 == s2) // This line should be written before Line X
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
26. Reordered from line 5 to 6
Line 7 (3 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
25. Reordered from line 5 to 7
Line 8 (2 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
15. Moved from problem to solution at line 7
16. Reordered from line 7 to 8
Line 9 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
17. Moved from problem to solution at line 8
18. Reordered from line 8 to 9
Line 10 (2 moves): 		else
19. Moved from problem to solution at line 9
20. Reordered from line 9 to 10
Line 11 (2 moves): 			System.out.println("Neither same content nor same object");
21. Moved from problem to solution at line 10
22. Reordered from line 10 to 11
Line 12 (2 moves): 	}}
23. Moved from problem to solution at line 11
24. Reordered from line 11 to 12
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
10. Moved from problem to trash at line 0
Your Grade:
You took 26 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1493680309934
Time spent on this problem: 309 seconds
<HR>
