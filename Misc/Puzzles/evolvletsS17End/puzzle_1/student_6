Problem No. 1
Using Template # 100
The Problem:
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This is line Y
double area = radius * radius * PI;
System.out.println("The area for the circle of radius " +radius + " is " + area);
public class ComputeAreaV3 {
final double PI = 3.14159;  //This line should be placed before Line Y
import java.util.Scanner;
System.out.print("Enter a number for radius: "); //This line should be placed before Line X
} }
double radius = input.nextDouble();             // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 10 lines.
Re-assemble them with 11 (or fewer) moves for full credit
Using Template # 100
The Problem:
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This is line Y
double area = radius * radius * PI;
System.out.println("The area for the circle of radius " +radius + " is " + area);
public class ComputeAreaV3 {
final double PI = 3.14159;  //This line should be placed before Line Y
import java.util.Scanner;
System.out.print("Enter a number for radius: "); //This line should be placed before Line X
} }
double radius = input.nextDouble();             // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     double radius = input.nextDouble();             // This is line X
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Moved from problem to solution at line 1: public class ComputeAreaV3 {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This is line Y
6. Moved from problem to solution at line 4:     final double PI = 3.14159;  //This line should be placed before Line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a number for radius: "); //This line should be placed before Line X
8. Moved from problem to solution at line 7:     double area = radius * radius * PI;
9. Reordered from line 8 to 7:     double radius = input.nextDouble();             // This is line X
10. Moved from problem to solution at line 8:     System.out.println("The area for the circle of radius " +radius + " is " + area);
11. Reordered from line 9 to 8:     double area = radius * radius * PI;
12. Moved from problem to solution at line 9:  } }
13. Reordered from line 10 to 9:     System.out.println("The area for the circle of radius " +radius + " is " + area);
Submit Parsons Solution clicked @ 1492786556842
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class ComputeAreaV3 {
3. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 4 (1 moves):     final double PI = 3.14159;  //This line should be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (1 moves):     Scanner input = new Scanner(System.in); //This is line Y
5. Moved from problem to solution at line 4
Line 6 (1 moves):     System.out.print("Enter a number for radius: "); //This line should be placed before Line X
7. Moved from problem to solution at line 6
Line 7 (2 moves):     double radius = input.nextDouble();             // This is line X
1. Moved from problem to solution at line 0
9. Reordered from line 8 to 7
Line 8 (2 moves):     double area = radius * radius * PI;
8. Moved from problem to solution at line 7
11. Reordered from line 9 to 8
Line 9 (2 moves):     System.out.println("The area for the circle of radius " +radius + " is " + area);
10. Moved from problem to solution at line 8
13. Reordered from line 10 to 9
Line 10 (1 moves):  } }
12. Moved from problem to solution at line 9
Your Grade:
You took 13 steps to solve a Parsons puzzle containing 10 lines of code.
Next Problem clicked @ 1492786561106
Time spent on this problem: 85 seconds
<HR>
