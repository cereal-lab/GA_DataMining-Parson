Problem No. 1
Using Template # 100
The Problem:
import java.util.Scanner;
while while (low <= high) {
while (low < high {
while (low < high) {
public static void main(String[] args) {
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
int low, high, isPalindrome;          // This is line Y
low++; high--;
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
}
if (s.charAt(low) != s.charAt(high)) {
else
low= 0; high = s.length() - 1; isPalindrome = true;
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public class Palindrome {
isPalindrome = false;
String s = input.nextLine();          // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
import java.util.Scanner;
while while (low <= high) {
while (low < high {
while (low < high) {
public static void main(String[] args) {
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
int low, high, isPalindrome;          // This is line Y
low++; high--;
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
}
if (s.charAt(low) != s.charAt(high)) {
else
low= 0; high = s.length() - 1; isPalindrome = true;
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public class Palindrome {
isPalindrome = false;
String s = input.nextLine();          // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 1 to 2:     }}
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Moved from problem to solution at line 2: public class Palindrome {
6. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 8:     else
11. Moved from problem to solution at line 8:     if (isPalindrome)
12. Moved from problem to solution at line 9:       low++; high--;
13. Moved from problem to solution at line 11:    while while (low <= high) {
14. Reordered from line 11 to 10:    while while (low <= high) {
15. Moved from problem to solution at line 12:         isPalindrome = false;
16. Moved from problem to solution at line 12:     while (low < high {
17. Moved from problem to solution at line 13:     while (low < high) {
18. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
19. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 17:       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 18:       }
22. Moved from problem to solution at line 17:     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 17:         break;}
Submit Parsons Solution clicked @ 1493680422689
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1493680437256
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 18 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493680445040
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 16 to 9:         isPalindrome = false;
27. Moved from solution to trash at line 0:     while (low < high {
Submit Parsons Solution clicked @ 1493680462614
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 15 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493680468220
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 18 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493680479081
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1493680484966
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493680489854
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 19 to 14:       }
Submit Parsons Solution clicked @ 1493680497217
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493680502164
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (1 moves): public class Palindrome {
5. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 6
24. Reordered from line 6 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 4
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 5
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 17
25. Reordered from line 18 to 8
Line 9 (2 moves):     while (low < high) {
17. Moved from problem to solution at line 13
28. Reordered from line 15 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
20. Moved from problem to solution at line 17
29. Reordered from line 18 to 10
Line 11 (2 moves):         isPalindrome = false;
15. Moved from problem to solution at line 12
26. Reordered from line 16 to 9
Line 12 (2 moves):         break;}
23. Moved from problem to solution at line 17
30. Reordered from line 18 to 12
Line 13 (2 moves):       low++; high--;
12. Moved from problem to solution at line 9
31. Reordered from line 14 to 13
Line 14 (2 moves):       }
21. Moved from problem to solution at line 18
32. Reordered from line 19 to 14
Line 15 (1 moves):     if (isPalindrome)
11. Moved from problem to solution at line 8
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 10
Line 17 (1 moves):     else
10. Moved from problem to solution at line 8
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 15
Line 19 (2 moves):     }}
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 9 (5) (2 moves):     while (low < high {
16. Moved from problem to solution at line 12
27. Moved from solution to trash at line 0
Line 9 (37) (3 moves):    while while (low <= high) {
13. Moved from problem to solution at line 11
14. Reordered from line 11 to 10
33. Moved from solution to trash at line 1
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493680585400
Time spent on this problem: 402 seconds
<HR>
