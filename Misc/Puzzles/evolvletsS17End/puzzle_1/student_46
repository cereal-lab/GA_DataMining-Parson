Problem No. 1
Using Template # 100
The Problem:
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
}
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
while (low < high {
while (low < high) {
String s = input.nextLine();          // This is line X
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
break;}
low++; high--;
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
}
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
while (low < high {
while (low < high) {
String s = input.nextLine();          // This is line X
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
break;}
low++; high--;
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to trash at line 0:     while (low < high {
3. Moved from problem to solution at line 1:         break;}
4. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
5. Moved from problem to solution at line 1:         isPalindrome = false;
6. Moved from problem to solution at line 1:     else
7. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
8. Moved from problem to solution at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to solution at line 1:     if (isPalindrome)
10. Moved from problem to solution at line 1:       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 1:       }
12. Moved from problem to solution at line 1:       low++; high--;
13. Moved from problem to solution at line 1:     while (low < high) {
14. Moved from problem to solution at line 1:     String s = input.nextLine();          // This is line X
15. Moved from problem to solution at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 1:     int low, high, isPalindrome;          // This is line Y
17. Moved from problem to solution at line 1:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
18. Moved from problem to solution at line 1:   public static void main(String[] args) {
19. Moved from problem to solution at line 1: public class Palindrome {
20. Moved from problem to solution at line 1: import java.util.Scanner;
21. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493657314144
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 5 to 8:     int low, high, isPalindrome;          // This is line Y
23. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493657355997
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 13 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493657378531
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 13 to 9:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493657391114
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 11 to 9:       low++; high--;
27. Reordered from line 11 to 9:     while (low < high) {
28. Reordered from line 11 to 10:     if (isPalindrome)
Submit Parsons Solution clicked @ 1493657413614
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 13 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1493657420613
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 16 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493657431829
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1493657440369
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1493657447912
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 16 to 14:       System.out.println(s + " is a palindrome");
34. Reordered from line 17 to 14:     else
35. Reordered from line 17 to 14:       }
Submit Parsons Solution clicked @ 1493657464046
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 17 to 15:     if (isPalindrome)
37. Reordered from line 18 to 16:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493657473950
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
39. Reordered from line 17 to 19:       System.out.println(s + " is not a palindrome");
40. Reordered from line 19 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1493657484072
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
20. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
19. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
18. Moved from problem to solution at line 1
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
17. Moved from problem to solution at line 1
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 1
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 1
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
16. Moved from problem to solution at line 1
22. Reordered from line 5 to 8
23. Reordered from line 8 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
8. Moved from problem to solution at line 1
24. Reordered from line 13 to 8
Line 9 (2 moves):     while (low < high) {
13. Moved from problem to solution at line 1
27. Reordered from line 11 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 1
29. Reordered from line 13 to 10
Line 11 (2 moves):         isPalindrome = false;
5. Moved from problem to solution at line 1
30. Reordered from line 16 to 11
Line 12 (2 moves):         break;}
3. Moved from problem to solution at line 1
31. Reordered from line 18 to 12
Line 13 (3 moves):       low++; high--;
12. Moved from problem to solution at line 1
26. Reordered from line 11 to 9
32. Reordered from line 14 to 13
Line 14 (2 moves):       }
11. Moved from problem to solution at line 1
35. Reordered from line 17 to 14
Line 15 (4 moves):     if (isPalindrome)
9. Moved from problem to solution at line 1
25. Reordered from line 13 to 9
28. Reordered from line 11 to 10
36. Reordered from line 17 to 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
7. Moved from problem to solution at line 1
33. Reordered from line 16 to 14
38. Reordered from line 18 to 16
Line 17 (2 moves):     else
6. Moved from problem to solution at line 1
34. Reordered from line 17 to 14
Line 18 (4 moves):       System.out.println(s + " is not a palindrome");
4. Moved from problem to solution at line 1
37. Reordered from line 18 to 16
39. Reordered from line 17 to 19
40. Reordered from line 19 to 18
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (1 moves):     while (low < high {
2. Moved from problem to trash at line 0
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to trash at line 1
Your Grade:
You took 40 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493657622997
Time spent on this problem: 2148 seconds
<HR>
