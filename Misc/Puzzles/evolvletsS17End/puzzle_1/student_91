Problem No. 1
Using Template # 100
The Problem:
}
}}
public static void main(String[] args) {
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
else
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
low++; high--;
isPalindrome = false;
import java.util.Scanner;
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while while (low <= high) {
while (low < high {
while (low < high) {
if (isPalindrome)
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
}
}}
public static void main(String[] args) {
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
else
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
low++; high--;
isPalindrome = false;
import java.util.Scanner;
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while while (low <= high) {
while (low < high {
while (low < high) {
if (isPalindrome)
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       }
3. Moved from problem to solution at line 1: import java.util.Scanner;
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 8:     if (isPalindrome)
11. Moved from problem to solution at line 9:       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 9:         break;}
13. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 9:     while (low < high) {
15. Moved from problem to solution at line 10:       low++; high--;
16. Moved from problem to solution at line 12:         isPalindrome = false;
17. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 13:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493594282952
Please clear all the lines from the left panel before submitting your answer.
19. Moved from problem to trash at line 0:     while (low < high {
20. Moved from problem to trash at line 1:    while while (low <= high) {
21. Moved from problem to solution at line 15:     else
Submit Parsons Solution clicked @ 1493594334694
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1493594349620
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1493594359948
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 13 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493594387367
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1493594391612
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 13 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1493594397406
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 16 to 12:         break;}
Submit Parsons Solution clicked @ 1493594401168
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1493594405423
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 19 to 16:     }}
30. Reordered from line 17 to 19:       System.out.println(s + " is not a palindrome");
31. Reordered from line 16 to 19:     }}
32. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1493594415703
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
3. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 5
22. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7
23. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 13
24. Reordered from line 13 to 8
Line 9 (2 moves):     while (low < high) {
14. Moved from problem to solution at line 9
25. Reordered from line 10 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 8
Line 11 (2 moves):         isPalindrome = false;
16. Moved from problem to solution at line 12
26. Reordered from line 13 to 11
Line 12 (2 moves):         break;}
12. Moved from problem to solution at line 9
27. Reordered from line 16 to 12
Line 13 (1 moves):       low++; high--;
15. Moved from problem to solution at line 10
Line 14 (2 moves):       }
2. Moved from problem to solution at line 1
28. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
10. Moved from problem to solution at line 8
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
11. Moved from problem to solution at line 9
32. Reordered from line 17 to 16
Line 17 (1 moves):     else
21. Moved from problem to solution at line 15
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 13
30. Reordered from line 17 to 19
Line 19 (3 moves):     }}
1. Moved from problem to solution at line 0
29. Reordered from line 19 to 16
31. Reordered from line 16 to 19
Line 9 (5) (1 moves):     while (low < high {
19. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
20. Moved from problem to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493594432087
Time spent on this problem: 596 seconds
<HR>
