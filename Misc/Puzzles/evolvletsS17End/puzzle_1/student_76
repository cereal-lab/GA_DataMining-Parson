Problem No. 1
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
}}
else
System.out.println(s + " is a palindrome");
if (isPalindrome)
low++; high--;
break;}
isPalindrome = false;
public class Palindrome {
System.out.println(s + " is not a palindrome");
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
import java.util.Scanner;
while while (low <= high) {
while (low < high) {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
}}
else
System.out.println(s + " is a palindrome");
if (isPalindrome)
low++; high--;
break;}
isPalindrome = false;
public class Palindrome {
System.out.println(s + " is not a palindrome");
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
import java.util.Scanner;
while while (low <= high) {
while (low < high) {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:     else
5. Moved from problem to solution at line 3:     }}
6. Reordered from line 3 to 4:     }}
7. Moved from problem to solution at line 4:       System.out.println(s + " is not a palindrome");
8. Reordered from line 2 to 3:     else
9. Moved from problem to solution at line 3:       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 3:     if (isPalindrome)
11. Moved from problem to solution at line 3:       }
12. Moved from problem to solution at line 3:       low++; high--;
13. Moved from problem to solution at line 3:         isPalindrome = false;
14. Moved from problem to solution at line 4:     while (low < high) {
15. Moved from problem to solution at line 5:       if (s.charAt(low) != s.charAt(high)) {
16. Reordered from line 3 to 6:         isPalindrome = false;
17. Reordered from line 7 to 5:       }
18. Reordered from line 7 to 4:         isPalindrome = false;
19. Moved from problem to solution at line 3:   public static void main(String[] args) {
20. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
21. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
22. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
23. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
24. Reordered from line 6 to 8:     int low, high, isPalindrome;          // This is line Y
25. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
26. Reordered from line 12 to 14:       }
27. Reordered from line 14 to 13:       }
28. Reordered from line 10 to 12:         isPalindrome = false;
29. Reordered from line 12 to 11:         isPalindrome = false;
30. Moved from problem to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1493482702725
Please clear all the lines from the left panel before submitting your answer.
31. Moved from problem to trash at line 0:     low= 0; high = s.length() - 1; isPalindrome = true;
32. Moved from problem to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1493482711389
This line is not in its correct location:     while (low < high) {
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1493482740894
This line is not in its correct location:     while (low < high) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493482771606
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1493482842645
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (1 moves):   public static void main(String[] args) {
19. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
20. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
21. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
22. Moved from problem to solution at line 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
23. Moved from problem to solution at line 6
24. Reordered from line 6 to 8
33. Reordered from line 8 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
31. Moved from problem to trash at line 0
34. Moved from trash to solution at line 8
Line 9 (1 moves):     while (low < high) {
14. Moved from problem to solution at line 4
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 5
Line 11 (5 moves):         isPalindrome = false;
13. Moved from problem to solution at line 3
16. Reordered from line 3 to 6
18. Reordered from line 7 to 4
28. Reordered from line 10 to 12
29. Reordered from line 12 to 11
Line 12 (1 moves):         break;}
30. Moved from problem to solution at line 12
Line 13 (1 moves):       low++; high--;
12. Moved from problem to solution at line 3
Line 14 (4 moves):       }
11. Moved from problem to solution at line 3
17. Reordered from line 7 to 5
26. Reordered from line 12 to 14
27. Reordered from line 14 to 13
Line 15 (1 moves):     if (isPalindrome)
10. Moved from problem to solution at line 3
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
9. Moved from problem to solution at line 3
Line 17 (2 moves):     else
4. Moved from problem to solution at line 2
8. Reordered from line 2 to 3
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
7. Moved from problem to solution at line 4
Line 19 (2 moves):     }}
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 9 (37) (1 moves):    while while (low <= high) {
32. Moved from problem to trash at line 1
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to solution at line 9
35. Moved from solution to trash at line 1
Your Grade:
You took 35 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1493482851127
Time spent on this problem: 1580 seconds
<HR>
