Problem No. 8
Using Template # 100
The Problem:
}}
System.out.print(i + " | ");
System.out.print("   " + j);
for (int i = 1; i <= 9; i++) {
System.out.println("\n-----------------------------------------");
System.out.println();}
System.out.printf("%4d", i * j);}
public static void main(String[] args) {
System.out.println("           Multiplication Table");
System.out.prcharln("           Multiplication Table");
for (int j = 1; j <= 9; j++
for (int j = 1; j <= 9; j++)
for (int j = 1; j <= 9; j++) {
public class MultiplicationTable {
System.out.print("    ");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
5. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
6. Moved from problem to trash at line 0:     System.out.prcharln("           Multiplication Table");
7. Moved from problem to solution at line 3:     for (int i = 1; i <= 9; i++) {
8. Reordered from line 3 to 4:     for (int i = 1; i <= 9; i++) {
9. Moved from problem to solution at line 4:       System.out.print(i + " | ");
10. Reordered from line 4 to 5:       System.out.print(i + " | ");
11. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
12. Reordered from line 5 to 6:     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 6:     System.out.print("    ");
14. Reordered from line 6 to 7:     System.out.print("    ");
15. Moved from solution to trash at line 1:     System.out.print("    ");
16. Moved from problem to solution at line 6:       for (int j = 1; j <= 9; j++) {
17. Reordered from line 6 to 7:       for (int j = 1; j <= 9; j++) {
18. Moved from problem to trash at line 2:     for (int j = 1; j <= 9; j++)
19. Moved from problem to trash at line 3:     for (int j = 1; j <= 9; j++
20. Moved from problem to solution at line 7:       System.out.print("   " + j);
21. Reordered from line 7 to 8:       System.out.print("   " + j);
22. Moved from problem to solution at line 8:         System.out.printf("%4d", i * j);}
23. Reordered from line 8 to 9:         System.out.printf("%4d", i * j);}
24. Moved from problem to solution at line 9: }}
25. Reordered from line 9 to 10: }}
26. Moved from problem to trash at line 4:       System.out.println();}
Submit Parsons Solution clicked @ 1493566848801
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from trash to solution at line 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1493566859096
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 8 to 5:       for (int j = 1; j <= 9; j++) {
29. Reordered from line 9 to 6:       System.out.print("   " + j);
30. Reordered from line 9 to 7:     System.out.println("\n-----------------------------------------");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
31. Reordered from line 10 to 7:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1493566899018
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from solution to trash at line 3:       for (int j = 1; j <= 9; j++) {
33. Moved from trash to solution at line 5:     for (int j = 1; j <= 9; j++)
Submit Parsons Solution clicked @ 1493566927000
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:     System.out.println("\n-----------------------------------------");
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from solution to trash at line 4:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1493566932611
This line is not in its correct location: }}
Insert this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 10:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1493566951245
This line is not in its correct location: }}
Insert this line in its place:         System.out.printf("%4d", i * j);}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 11:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1493566977647
This line is not in its correct location: }}
Insert this line in its place:       System.out.println();}
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from trash to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1493566983111
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (4 moves):     System.out.print("    ");
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
15. Moved from solution to trash at line 1
27. Moved from trash to solution at line 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
18. Moved from problem to trash at line 2
33. Moved from trash to solution at line 5
Line 6 (3 moves):       System.out.print("   " + j);
20. Moved from problem to solution at line 7
21. Reordered from line 7 to 8
29. Reordered from line 9 to 6
Line 7 (3 moves):     System.out.println("\n-----------------------------------------");
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
30. Reordered from line 9 to 7
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 9 (2 moves):       System.out.print(i + " | ");
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
16. Moved from problem to solution at line 6
17. Reordered from line 6 to 7
28. Reordered from line 8 to 5
32. Moved from solution to trash at line 3
35. Moved from trash to solution at line 10
Line 11 (5 moves):         System.out.printf("%4d", i * j);}
22. Moved from problem to solution at line 8
23. Reordered from line 8 to 9
31. Reordered from line 10 to 7
34. Moved from solution to trash at line 4
36. Moved from trash to solution at line 11
Line 12 (2 moves):       System.out.println();}
26. Moved from problem to trash at line 4
37. Moved from trash to solution at line 12
Line 13 (2 moves): }}
24. Moved from problem to solution at line 9
25. Reordered from line 9 to 10
Line 3 (11) (1 moves):     System.out.prcharln("           Multiplication Table");
6. Moved from problem to trash at line 0
Line 5 (5) (1 moves):     for (int j = 1; j <= 9; j++
19. Moved from problem to trash at line 3
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1493567021811
Time spent on this problem: 462 seconds
<HR>
