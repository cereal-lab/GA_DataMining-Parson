Problem No. 8
Using Template # 100
The Problem:
for (int j = 1; j <= 9; j++) {
public class MultiplicationTable {
System.out.println("\n-----------------------------------------");
System.out.printf("%4d", i * j);}
System.out.print("    ");
for (int i = 1; i <= 9; i++) {
public static void main(String[] args) {
System.out.println();}
for (int j = 1; j <= 9; j++)
for (int j = 1; j <= 9; j++
System.out.print("   " + j);
}}
System.out.print(i + " | ");
System.out.prcharln("           Multiplication Table");
System.out.println("           Multiplication Table");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:       for (int j = 1; j <= 9; j++) {
2. Moved from problem to solution at line 1: public class MultiplicationTable {
3. Moved from problem to solution at line 2:     System.out.println("\n-----------------------------------------");
4. Moved from problem to solution at line 3:         System.out.printf("%4d", i * j);}
5. Moved from problem to solution at line 4:     System.out.print("    ");
6. Moved from problem to solution at line 5:     for (int i = 1; i <= 9; i++) {
7. Moved from problem to solution at line 6:   public static void main(String[] args) {
8. Moved from problem to solution at line 7:       System.out.println();}
9. Moved from problem to solution at line 8:     for (int j = 1; j <= 9; j++)
10. Moved from problem to solution at line 9:       System.out.print("   " + j);
11. Moved from problem to solution at line 10:     for (int j = 1; j <= 9; j++
12. Moved from problem to solution at line 11: }}
13. Moved from problem to solution at line 12:       System.out.print(i + " | ");
14. Moved from problem to solution at line 13:     System.out.prcharln("           Multiplication Table");
15. Moved from problem to solution at line 14:     System.out.println("           Multiplication Table");
16. Reordered from line 11 to 15: }}
17. Reordered from line 6 to 2:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1493695562512
This line is not in its correct location:     System.out.println("\n-----------------------------------------");
Move this line in its place:     System.out.println("           Multiplication Table");
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Moved from solution to trash at line 0:     System.out.prcharln("           Multiplication Table");
19. Reordered from line 12 to 3:     System.out.println("           Multiplication Table");
Submit Parsons Solution clicked @ 1493695579997
This line is not in its correct location:     System.out.println("\n-----------------------------------------");
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 6 to 4:     System.out.print("    ");
21. Reordered from line 5 to 14:     System.out.println("\n-----------------------------------------");
22. Reordered from line 14 to 10:     System.out.println("\n-----------------------------------------");
Submit Parsons Solution clicked @ 1493695590316
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 8 to 5:     for (int j = 1; j <= 9; j++)
Submit Parsons Solution clicked @ 1493695598575
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 9 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1493695604934
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:     System.out.println("\n-----------------------------------------");
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 10 to 7:     System.out.println("\n-----------------------------------------");
Submit Parsons Solution clicked @ 1493695609997
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 9 to 8:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1493695620954
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 12 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1493695629682
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 12 to 10:     for (int j = 1; j <= 9; j++
Submit Parsons Solution clicked @ 1493695640611
Sorry, that line has a bug
Delete this line:     for (int j = 1; j <= 9; j++
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from solution to trash at line 1:     for (int j = 1; j <= 9; j++
Submit Parsons Solution clicked @ 1493695644670
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 12 to 10:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1493695648565
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
2. Moved from problem to solution at line 1
Line 2 (2 moves):   public static void main(String[] args) {
7. Moved from problem to solution at line 6
17. Reordered from line 6 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
15. Moved from problem to solution at line 14
19. Reordered from line 12 to 3
Line 4 (2 moves):     System.out.print("    ");
5. Moved from problem to solution at line 4
20. Reordered from line 6 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
9. Moved from problem to solution at line 8
23. Reordered from line 8 to 5
Line 6 (2 moves):       System.out.print("   " + j);
10. Moved from problem to solution at line 9
24. Reordered from line 9 to 6
Line 7 (4 moves):     System.out.println("\n-----------------------------------------");
3. Moved from problem to solution at line 2
21. Reordered from line 5 to 14
22. Reordered from line 14 to 10
25. Reordered from line 10 to 7
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
6. Moved from problem to solution at line 5
26. Reordered from line 9 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
13. Moved from problem to solution at line 12
27. Reordered from line 12 to 9
Line 10 (2 moves):       for (int j = 1; j <= 9; j++) {
1. Moved from problem to solution at line 0
30. Reordered from line 12 to 10
Line 11 (1 moves):         System.out.printf("%4d", i * j);}
4. Moved from problem to solution at line 3
Line 12 (1 moves):       System.out.println();}
8. Moved from problem to solution at line 7
Line 13 (2 moves): }}
12. Moved from problem to solution at line 11
16. Reordered from line 11 to 15
Line 3 (11) (2 moves):     System.out.prcharln("           Multiplication Table");
14. Moved from problem to solution at line 13
18. Moved from solution to trash at line 0
Line 5 (5) (3 moves):     for (int j = 1; j <= 9; j++
11. Moved from problem to solution at line 10
28. Reordered from line 12 to 10
29. Moved from solution to trash at line 1
Your Grade:
You took 30 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1493695670549
Time spent on this problem: 789 seconds
<HR>
