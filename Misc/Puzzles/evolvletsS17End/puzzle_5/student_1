Problem No. 5
Using Template # 100
The Problem:
System.out.println("\n-----------------------------------------");
for (int j = 1; j <= 9; j++
for (int j = 1; j <= 9; j++)
}}
for (int j = 1; j <= 9; j++) {
for (int i = 1; i <= 9; i++) {
System.out.print("   " + j);
System.out.print(i + " | ");
public static void main(String[] args) {
System.out.println();}
public class MultiplicationTable {
System.out.println("           Multiplication Table");
System.out.prcharln("           Multiplication Table");
System.out.print("    ");
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: public class MultiplicationTable {
4. Moved from problem to trash at line 0:     System.out.prcharln("           Multiplication Table");
5. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
6. Reordered from line 3 to 2:   public static void main(String[] args) {
7. Moved from problem to solution at line 3:       System.out.print("   " + j);
8. Reordered from line 4 to 3:     System.out.println("           Multiplication Table");
9. Moved from problem to solution at line 4:       for (int j = 1; j <= 9; j++) {
10. Reordered from line 5 to 4:       System.out.print("   " + j);
11. Moved from problem to solution at line 5:     for (int i = 1; i <= 9; i++) {
12. Reordered from line 6 to 5:       for (int j = 1; j <= 9; j++) {
13. Moved from problem to solution at line 6:     System.out.println("\n-----------------------------------------");
14. Reordered from line 7 to 6:     for (int i = 1; i <= 9; i++) {
15. Moved from problem to solution at line 4:     System.out.print("    ");
16. Reordered from line 6 to 5:       for (int j = 1; j <= 9; j++) {
17. Reordered from line 8 to 7:     System.out.println("\n-----------------------------------------");
18. Moved from problem to trash at line 1:     for (int j = 1; j <= 9; j++
19. Moved from problem to solution at line 8:       System.out.print(i + " | ");
20. Reordered from line 9 to 8:     for (int i = 1; i <= 9; i++) {
21. Moved from problem to solution at line 9:     for (int j = 1; j <= 9; j++)
22. Reordered from line 10 to 9:       System.out.print(i + " | ");
23. Moved from problem to solution at line 10:         System.out.printf("%4d", i * j);}
24. Reordered from line 11 to 10:     for (int j = 1; j <= 9; j++)
25. Moved from problem to solution at line 11: }}
26. Reordered from line 12 to 11:         System.out.printf("%4d", i * j);}
27. Moved from problem to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1492898800845
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 10 to 5:     for (int j = 1; j <= 9; j++)
29. Reordered from line 5 to 11:     for (int j = 1; j <= 9; j++)
Submit Parsons Solution clicked @ 1492898867525
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 11 to 5:     for (int j = 1; j <= 9; j++)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
31. Reordered from line 6 to 11:       for (int j = 1; j <= 9; j++) {
32. Reordered from line 11 to 10:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1492898933250
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
6. Reordered from line 3 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 2
8. Reordered from line 4 to 3
Line 4 (1 moves):     System.out.print("    ");
15. Moved from problem to solution at line 4
Line 5 (5 moves):     for (int j = 1; j <= 9; j++)
21. Moved from problem to solution at line 9
24. Reordered from line 11 to 10
28. Reordered from line 10 to 5
29. Reordered from line 5 to 11
30. Reordered from line 11 to 5
Line 6 (2 moves):       System.out.print("   " + j);
7. Moved from problem to solution at line 3
10. Reordered from line 5 to 4
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 6
17. Reordered from line 8 to 7
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
11. Moved from problem to solution at line 5
14. Reordered from line 7 to 6
20. Reordered from line 9 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
19. Moved from problem to solution at line 8
22. Reordered from line 10 to 9
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
9. Moved from problem to solution at line 4
12. Reordered from line 6 to 5
16. Reordered from line 6 to 5
31. Reordered from line 6 to 11
32. Reordered from line 11 to 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
23. Moved from problem to solution at line 10
26. Reordered from line 12 to 11
Line 12 (1 moves):       System.out.println();}
27. Moved from problem to solution at line 12
Line 13 (1 moves): }}
25. Moved from problem to solution at line 11
Line 3 (11) (1 moves):     System.out.prcharln("           Multiplication Table");
4. Moved from problem to trash at line 0
Line 5 (5) (1 moves):     for (int j = 1; j <= 9; j++
18. Moved from problem to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1492898938033
Time spent on this problem: 2269 seconds
<HR>
