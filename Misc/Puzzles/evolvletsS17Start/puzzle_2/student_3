Problem No. 2
Using Template # 100
The Problem:
int low, high, isPalindrome;          // This is line Y
else
String s = input.nextLine();          // This is line X
System.out.println(s + " is not a palindrome");
while while (low <= high) {
while (low < high) {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
}
isPalindrome = false;
import java.util.Scanner;
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
}}
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:     }}
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3:     while (low < high) {
6. Moved from problem to solution at line 4:   public static void main(String[] args) {
7. Moved from problem to solution at line 5:       System.out.println(s + " is a palindrome");
8. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 10: public class Palindrome {
13. Reordered from line 10 to 2: public class Palindrome {
14. Moved from problem to solution at line 11:         break;}
15. Moved from problem to solution at line 12:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 13:       low++; high--;
17. Moved from problem to solution at line 14:       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 12:     if (isPalindrome)
19. Moved from problem to solution at line 13:         isPalindrome = false;
20. Moved from problem to solution at line 11:    while while (low <= high) {
21. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 13:     else
23. Moved from problem to solution at line 17:       }
Submit Parsons Solution clicked @ 1488850902106
This line is not in its correct location:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Move this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 5 to 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1488850909333
This line is not in its correct location:     while (low < high) {
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 5 to 6:     while (low < high) {
Submit Parsons Solution clicked @ 1488850918859
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 5 to 6:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1488850926018
This line is not in its correct location:     while (low < high) {
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 5 to 6:     while (low < high) {
Submit Parsons Solution clicked @ 1488850929089
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 7 to 5:     String s = input.nextLine();          // This is line X
29. Reordered from line 6 to 4:       System.out.println(s + " is a palindrome");
30. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
31. Reordered from line 18 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
32. Reordered from line 6 to 8:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
33. Reordered from line 8 to 7:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1488850949193
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 4 to 17:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1488850954527
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1488850961148
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 5 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
37. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
38. Reordered from line 7 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1488850970809
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1488850977446
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 8 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1488850983746
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
42. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1488850990946
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1488850997780
This line is not in its correct location:         break;}
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 18 to 10:       if (s.charAt(low) != s.charAt(high)) {
45. Reordered from line 12 to 14:     else
46. Reordered from line 13 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1488851008912
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 14 to 13:     else
48. Reordered from line 14 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851012811
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 15 to 13:         isPalindrome = false;
Submit Parsons Solution clicked @ 1488851015320
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 16 to 14:       System.out.println(s + " is a palindrome");
51. Reordered from line 18 to 15:       low++; high--;
Submit Parsons Solution clicked @ 1488851019538
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 16 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851022833
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 15 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851025707
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 13 to 11:         isPalindrome = false;
55. Reordered from line 12 to 13:     if (isPalindrome)
56. Reordered from line 12 to 18:         break;}
57. Reordered from line 17 to 18:       }
Submit Parsons Solution clicked @ 1488851037199
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 13 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851043331
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1488851047042
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Reordered from line 16 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1488851056173
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 16 to 14:       System.out.println(s + " is a palindrome");
62. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851060917
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 14 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1488851064615
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
64. Reordered from line 18 to 16:       }
65. Reordered from line 18 to 17:     else
66. Reordered from line 15 to 19:       System.out.println(s + " is not a palindrome");
67. Reordered from line 19 to 18:       System.out.println(s + " is not a palindrome");
68. Reordered from line 17 to 18:       System.out.println(s + " is a palindrome");
69. Reordered from line 18 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1488851078103
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
70. Reordered from line 16 to 15:       }
Submit Parsons Solution clicked @ 1488851083106
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
71. Reordered from line 18 to 16:       System.out.println(s + " is not a palindrome");
72. Reordered from line 17 to 18:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1488851087698
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
73. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1488851091629
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
74. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
75. Reordered from line 17 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1488851095953
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
12. Moved from problem to solution at line 10
13. Reordered from line 10 to 2
Line 3 (2 moves):   public static void main(String[] args) {
6. Moved from problem to solution at line 4
24. Reordered from line 5 to 3
Line 4 (5 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Moved from problem to solution at line 2
32. Reordered from line 6 to 8
33. Reordered from line 8 to 7
35. Reordered from line 6 to 4
37. Reordered from line 5 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 12
31. Reordered from line 18 to 5
36. Reordered from line 5 to 4
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 6
28. Reordered from line 7 to 5
39. Reordered from line 7 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 7
30. Reordered from line 8 to 7
38. Reordered from line 7 to 6
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 8
42. Reordered from line 9 to 8
Line 9 (4 moves):     while (low < high) {
5. Moved from problem to solution at line 3
25. Reordered from line 5 to 6
27. Reordered from line 5 to 6
40. Reordered from line 8 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 14
44. Reordered from line 18 to 10
Line 11 (3 moves):         isPalindrome = false;
19. Moved from problem to solution at line 13
49. Reordered from line 15 to 13
54. Reordered from line 13 to 11
Line 12 (3 moves):         break;}
14. Moved from problem to solution at line 11
56. Reordered from line 12 to 18
59. Reordered from line 17 to 12
Line 13 (3 moves):       low++; high--;
16. Moved from problem to solution at line 13
51. Reordered from line 18 to 15
60. Reordered from line 16 to 13
Line 14 (5 moves):       }
23. Moved from problem to solution at line 17
57. Reordered from line 17 to 18
64. Reordered from line 18 to 16
70. Reordered from line 16 to 15
73. Reordered from line 15 to 14
Line 15 (3 moves):     if (isPalindrome)
18. Moved from problem to solution at line 12
46. Reordered from line 13 to 11
55. Reordered from line 12 to 13
Line 16 (11 moves):       System.out.println(s + " is a palindrome");
7. Moved from problem to solution at line 5
26. Reordered from line 5 to 6
29. Reordered from line 6 to 4
34. Reordered from line 4 to 17
50. Reordered from line 16 to 14
61. Reordered from line 16 to 14
63. Reordered from line 14 to 16
68. Reordered from line 17 to 18
69. Reordered from line 18 to 15
72. Reordered from line 17 to 18
74. Reordered from line 18 to 16
Line 17 (4 moves):     else
22. Moved from problem to solution at line 13
45. Reordered from line 12 to 14
47. Reordered from line 14 to 13
65. Reordered from line 18 to 17
Line 18 (10 moves):       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 13
48. Reordered from line 14 to 13
52. Reordered from line 16 to 15
53. Reordered from line 15 to 14
58. Reordered from line 13 to 12
62. Reordered from line 15 to 16
66. Reordered from line 15 to 19
67. Reordered from line 19 to 18
71. Reordered from line 18 to 16
75. Reordered from line 17 to 18
Line 19 (1 moves):     }}
2. Moved from problem to solution at line 1
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 8
41. Moved from solution to trash at line 0
Line 9 (37) (2 moves):    while while (low <= high) {
20. Moved from problem to solution at line 11
43. Moved from solution to trash at line 1
Your Grade:
You took 75 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1488851114087
Time spent on this problem: 267 seconds
<HR>
