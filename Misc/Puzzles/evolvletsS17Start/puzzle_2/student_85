Problem No. 2
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
System.out.println(s + " is not a palindrome");
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
while while (low <= high) {
while (low < high) {
low++; high--;
isPalindrome = false;
}}
if (isPalindrome)
}
public static void main(String[] args) {
break;}
System.out.println(s + " is a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
else
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Reordered from line 2 to 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3:     int low, high, isPalindrome;          // This is line Y
7. Reordered from line 3 to 4:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 4:     }}
9. Reordered from line 4 to 5:     }}
10. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 3: import java.util.Scanner;
13. Reordered from line 3 to 6: import java.util.Scanner;
14. Reordered from line 6 to 2: import java.util.Scanner;
15. Reordered from line 2 to 1: import java.util.Scanner;
16. Moved from problem to trash at line 0:     else
17. Moved from problem to trash at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to trash at line 1:         break;}
20. Moved from problem to trash at line 3:       System.out.println(s + " is a palindrome");
21. Moved from problem to trash at line 5:     if (isPalindrome)
22. Moved from problem to trash at line 3:       }
23. Moved from problem to trash at line 2:         isPalindrome = false;
24. Moved from problem to trash at line 3:       System.out.println(s + " is not a palindrome");
25. Moved from problem to trash at line 5:       if (s.charAt(low) != s.charAt(high)) {
26. Moved from problem to trash at line 3:    while while (low <= high) {
27. Moved from problem to trash at line 4:     while (low < high) {
28. Moved from problem to trash at line 3:       low++; high--;
Submit Parsons Solution clicked @ 1489363484619
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
30. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489363500236
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 6 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
32. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489363508257
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489363512313
This line is not in its correct location:     }}
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489363543777
This line is not in its correct location:     }}
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489363553914
This line is not in its correct location:     }}
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 10:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489363562158
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from solution to trash at line 7:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489363568665
This line is not in its correct location:     }}
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489363583739
This line is not in its correct location:     }}
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from trash to solution at line 11:         isPalindrome = false;
40. Moved from trash to solution at line 12:     else
Submit Parsons Solution clicked @ 1489363655180
This line is not in its correct location:     else
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1489363660930
This line is not in its correct location:     else
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 13:       low++; high--;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489363667352
This line is not in its correct location:     else
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from trash to solution at line 14:       }
Submit Parsons Solution clicked @ 1489363673724
This line is not in its correct location:     else
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from trash to solution at line 15:     if (isPalindrome)
45. Moved from solution to trash at line 4:     else
46. Moved from trash to solution at line 16:       System.out.println(s + " is a palindrome");
47. Moved from trash to solution at line 17:     else
48. Moved from trash to solution at line 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489363696199
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (4 moves): import java.util.Scanner;
12. Moved from problem to solution at line 3
13. Reordered from line 3 to 6
14. Reordered from line 6 to 2
15. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
29. Reordered from line 6 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 3
31. Reordered from line 6 to 4
32. Reordered from line 4 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 4
33. Reordered from line 7 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
30. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to trash at line 1
34. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
27. Moved from problem to trash at line 4
35. Moved from trash to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
25. Moved from problem to trash at line 5
38. Moved from trash to solution at line 10
Line 11 (2 moves):         isPalindrome = false;
23. Moved from problem to trash at line 2
39. Moved from trash to solution at line 11
Line 12 (2 moves):         break;}
19. Moved from problem to trash at line 1
41. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
28. Moved from problem to trash at line 3
42. Moved from trash to solution at line 13
Line 14 (2 moves):       }
22. Moved from problem to trash at line 3
43. Moved from trash to solution at line 14
Line 15 (2 moves):     if (isPalindrome)
21. Moved from problem to trash at line 5
44. Moved from trash to solution at line 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to trash at line 3
46. Moved from trash to solution at line 16
Line 17 (4 moves):     else
16. Moved from problem to trash at line 0
40. Moved from trash to solution at line 12
45. Moved from solution to trash at line 4
47. Moved from trash to solution at line 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
24. Moved from problem to trash at line 3
48. Moved from trash to solution at line 18
Line 19 (2 moves):     }}
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to trash at line 2
Line 9 (37) (3 moves):    while while (low <= high) {
26. Moved from problem to trash at line 3
36. Moved from trash to solution at line 10
37. Moved from solution to trash at line 7
Your Grade:
You took 48 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489363702050
Time spent on this problem: 419 seconds
<HR>
