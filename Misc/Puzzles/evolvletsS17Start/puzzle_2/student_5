Problem No. 2
Using Template # 100
The Problem:
import java.util.Scanner;
System.out.println("    " + numberOfNickels + " nickels");
int numberOfQuarters = remainingAmount / 25;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int numberOfPennies = remainingAmount;
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
System.out.println("    " + numberOfDimes + " dimes");
Scanner input = new Scanner(System.in); //This line should be placed before Line X
public static void main(String[] args) {
public static void Main(String[] args) {
double amount = input.nextDouble();
System.out.println("    " + numberOfOneDollars + " dollars");
remainingAmount = remainingAmount % 10;
remainingAmount = remainingAmount % 100;
}}
System.out.println("    " + numberOfQuarters + " quarters ");
int remainingAmount = (int)(amount * 100);
System.out.println("    " + numberOfPennies + " pennies");
public Class ComputeChange {
public class ComputeChange {
int numberOfNickels = remainingAmount / 5;
remainingAmount = remainingAmount % 5;
int numberOfOneDollars = remainingAmount / 100;
remainingAmount = remainingAmount % 25;
int numberOfDimes = remainingAmount / 10;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class ComputeChange {
3. Reordered from line 1 to 2: public class ComputeChange {
4. Moved from problem to trash at line 0: public Class ComputeChange {
5. Moved from problem to solution at line 2:   public static void main(String[] args) {
6. Reordered from line 2 to 3:   public static void main(String[] args) {
7. Moved from problem to trash at line 1:   public static void Main(String[] args) {
8. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
9. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
10. Moved from problem to solution at line 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
11. Reordered from line 4 to 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
12. Moved from problem to solution at line 5:     double amount = input.nextDouble();
13. Reordered from line 5 to 6:     double amount = input.nextDouble();
14. Moved from problem to solution at line 6:     int numberOfOneDollars = remainingAmount / 100;
15. Reordered from line 6 to 7:     int numberOfOneDollars = remainingAmount / 100;
16. Moved from solution to problem at line 15:     int numberOfOneDollars = remainingAmount / 100;
17. Moved from problem to solution at line 6:     int remainingAmount = (int)(amount * 100);
18. Reordered from line 6 to 7:     int remainingAmount = (int)(amount * 100);
19. Moved from problem to solution at line 7:     int numberOfOneDollars = remainingAmount / 100;
20. Reordered from line 7 to 8:     int numberOfOneDollars = remainingAmount / 100;
21. Moved from problem to solution at line 8:     int numberOfQuarters = remainingAmount / 25;
22. Reordered from line 8 to 9:     int numberOfQuarters = remainingAmount / 25;
23. Moved from problem to solution at line 9:     int numberOfDimes = remainingAmount / 10;
24. Reordered from line 9 to 10:     int numberOfDimes = remainingAmount / 10;
25. Moved from problem to solution at line 10:     int numberOfNickels = remainingAmount / 5;
26. Reordered from line 10 to 11:     int numberOfNickels = remainingAmount / 5;
27. Moved from problem to solution at line 11:     int numberOfPennies = remainingAmount;
28. Reordered from line 11 to 12:     int numberOfPennies = remainingAmount;
29. Moved from problem to solution at line 12:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
30. Reordered from line 12 to 13:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
31. Reordered from line 13 to 7:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
32. Moved from problem to solution at line 10:     System.out.println("    " + numberOfOneDollars + " dollars");
33. Moved from problem to solution at line 12:     System.out.println("    " + numberOfQuarters + " quarters ");
34. Moved from problem to solution at line 14:     System.out.println("    " + numberOfDimes + " dimes");
35. Moved from problem to solution at line 16:     System.out.println("    " + numberOfNickels + " nickels");
36. Moved from problem to solution at line 17:     System.out.println("    " + numberOfPennies + " pennies");
37. Reordered from line 17 to 18:     System.out.println("    " + numberOfPennies + " pennies");
38. Moved from problem to solution at line 18:  }}
39. Reordered from line 18 to 19:  }}
40. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 100;
41. Moved from problem to trash at line 1:     remainingAmount = remainingAmount % 10;
42. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 25;
43. Moved from problem to trash at line 3:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1488946158131
This line is not in its correct location:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 8 to 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1488946172708
This line is not in its correct location:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Move this line in its place:     int numberOfOneDollars = remainingAmount / 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 9 to 8:     int numberOfOneDollars = remainingAmount / 100;
46. Reordered from line 11 to 9:     int numberOfQuarters = remainingAmount / 25;
47. Reordered from line 13 to 10:     int numberOfDimes = remainingAmount / 10;
48. Reordered from line 15 to 11:     int numberOfNickels = remainingAmount / 5;
49. Reordered from line 17 to 12:     int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1488946202352
This line is not in its correct location:     int numberOfQuarters = remainingAmount / 25;
Insert this line in its place:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Moved from trash to problem at line 17:     remainingAmount = remainingAmount % 100;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
51. Moved from problem to solution at line 9:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1488946221258
This line is not in its correct location:     int numberOfDimes = remainingAmount / 10;
Insert this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 12:     remainingAmount = remainingAmount % 25;
53. Reordered from line 12 to 11:     remainingAmount = remainingAmount % 25;
54. Moved from trash to solution at line 13:     remainingAmount = remainingAmount % 5;
55. Reordered from line 13 to 15:     remainingAmount = remainingAmount % 5;
56. Reordered from line 15 to 14:     remainingAmount = remainingAmount % 5;
57. Moved from trash to solution at line 13:     remainingAmount = remainingAmount % 10;
Submit Parsons Solution clicked @ 1488946259602
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class ComputeChange {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
8. Moved from problem to solution at line 3
9. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
10. Moved from problem to solution at line 4
11. Reordered from line 4 to 5
Line 6 (2 moves):     double amount = input.nextDouble();
12. Moved from problem to solution at line 5
13. Reordered from line 5 to 6
Line 7 (3 moves):     int remainingAmount = (int)(amount * 100);
17. Moved from problem to solution at line 6
18. Reordered from line 6 to 7
44. Reordered from line 8 to 7
Line 8 (6 moves):     int numberOfOneDollars = remainingAmount / 100;
14. Moved from problem to solution at line 6
15. Reordered from line 6 to 7
16. Moved from solution to problem at line 15
19. Moved from problem to solution at line 7
20. Reordered from line 7 to 8
45. Reordered from line 9 to 8
Line 9 (3 moves):     remainingAmount = remainingAmount % 100;
40. Moved from problem to trash at line 2
50. Moved from trash to problem at line 17
51. Moved from problem to solution at line 9
Line 10 (3 moves):     int numberOfQuarters = remainingAmount / 25;
21. Moved from problem to solution at line 8
22. Reordered from line 8 to 9
46. Reordered from line 11 to 9
Line 11 (3 moves):     remainingAmount = remainingAmount % 25;
42. Moved from problem to trash at line 2
52. Moved from trash to solution at line 12
53. Reordered from line 12 to 11
Line 12 (3 moves):     int numberOfDimes = remainingAmount / 10;
23. Moved from problem to solution at line 9
24. Reordered from line 9 to 10
47. Reordered from line 13 to 10
Line 13 (2 moves):     remainingAmount = remainingAmount % 10;
41. Moved from problem to trash at line 1
57. Moved from trash to solution at line 13
Line 14 (3 moves):     int numberOfNickels = remainingAmount / 5;
25. Moved from problem to solution at line 10
26. Reordered from line 10 to 11
48. Reordered from line 15 to 11
Line 15 (4 moves):     remainingAmount = remainingAmount % 5;
43. Moved from problem to trash at line 3
54. Moved from trash to solution at line 13
55. Reordered from line 13 to 15
56. Reordered from line 15 to 14
Line 16 (3 moves):     int numberOfPennies = remainingAmount;
27. Moved from problem to solution at line 11
28. Reordered from line 11 to 12
49. Reordered from line 17 to 12
Line 17 (3 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
29. Moved from problem to solution at line 12
30. Reordered from line 12 to 13
31. Reordered from line 13 to 7
Line 18 (1 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
32. Moved from problem to solution at line 10
Line 19 (1 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
33. Moved from problem to solution at line 12
Line 20 (1 moves):     System.out.println("    " + numberOfDimes + " dimes");
34. Moved from problem to solution at line 14
Line 21 (1 moves):     System.out.println("    " + numberOfNickels + " nickels");
35. Moved from problem to solution at line 16
Line 22 (2 moves):     System.out.println("    " + numberOfPennies + " pennies");
36. Moved from problem to solution at line 17
37. Reordered from line 17 to 18
Line 23 (2 moves):  }}
38. Moved from problem to solution at line 18
39. Reordered from line 18 to 19
Line 2 (8) (1 moves): public Class ComputeChange {
4. Moved from problem to trash at line 0
Line 3 (3) (1 moves):   public static void Main(String[] args) {
7. Moved from problem to trash at line 1
Your Grade:
You took 57 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1488946270844
Time spent on this problem: 761 seconds
<HR>
