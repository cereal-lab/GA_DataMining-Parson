Problem No. 2
Using Template # 100
The Problem:
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.println("    " + numberOfPennies + " pennies");
public static void main(String[] args) {
int numberOfQuarters = remainingAmount / 25;
System.out.println("    " + numberOfNickels + " nickels");
public class ComputeChange {
int numberOfOneDollars = remainingAmount / 100;
remainingAmount = remainingAmount % 100;
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
import java.util.Scanner;
System.out.println("    " + numberOfDimes + " dimes");
remainingAmount = remainingAmount % 10;
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfOneDollars + " dollars");
int remainingAmount = (int)(amount * 100);
int numberOfPennies = remainingAmount;
int numberOfNickels = remainingAmount / 5;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
}}
remainingAmount = remainingAmount % 25;
remainingAmount = remainingAmount % 5;
double amount = input.nextDouble();
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 23 lines.
Re-assemble them with 25 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class ComputeChange {
3. Reordered from line 1 to 2: public class ComputeChange {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to trash at line 0:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
7. Moved from problem to trash at line 1:     double amount = input.nextDouble();
8. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 5;
9. Moved from problem to trash at line 1:     remainingAmount = remainingAmount % 25;
10. Moved from problem to trash at line 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
11. Moved from problem to trash at line 2:  }}
12. Moved from problem to trash at line 1:     int numberOfNickels = remainingAmount / 5;
13. Moved from problem to trash at line 1:     int remainingAmount = (int)(amount * 100);
14. Moved from problem to trash at line 1:     int numberOfPennies = remainingAmount;
15. Moved from problem to trash at line 5:     System.out.println("    " + numberOfOneDollars + " dollars");
16. Moved from problem to trash at line 3:     int numberOfDimes = remainingAmount / 10;
17. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 10;
18. Moved from problem to trash at line 2:     System.out.println("    " + numberOfDimes + " dimes");
19. Moved from problem to trash at line 8:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
20. Moved from problem to trash at line 4:     remainingAmount = remainingAmount % 100;
21. Moved from problem to trash at line 4:     int numberOfOneDollars = remainingAmount / 100;
22. Moved from problem to trash at line 2:     System.out.println("    " + numberOfNickels + " nickels");
23. Moved from problem to trash at line 3:     int numberOfQuarters = remainingAmount / 25;
24. Moved from problem to trash at line 3:     System.out.println("    " + numberOfPennies + " pennies");
25. Moved from problem to trash at line 3:     System.out.println("    " + numberOfQuarters + " quarters ");
Submit Parsons Solution clicked @ 1489358751620
You have not yet identified all the lines. Insert:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 3:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
27. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
Submit Parsons Solution clicked @ 1489358759093
You have not yet identified all the lines. Insert:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
29. Reordered from line 4 to 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
*  Outdented line 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Submit Parsons Solution clicked @ 1489358772947
You have not yet identified all the lines. Insert:     double amount = input.nextDouble();
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 5:     double amount = input.nextDouble();
31. Reordered from line 5 to 6:     double amount = input.nextDouble();
Submit Parsons Solution clicked @ 1489358786254
You have not yet identified all the lines. Insert:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 6:     int remainingAmount = (int)(amount * 100);
33. Reordered from line 6 to 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1489358820235
You have not yet identified all the lines. Insert:     int numberOfOneDollars = remainingAmount / 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 7:     int numberOfOneDollars = remainingAmount / 100;
35. Reordered from line 7 to 8:     int numberOfOneDollars = remainingAmount / 100;
Submit Parsons Solution clicked @ 1489358839825
You have not yet identified all the lines. Insert:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 8:     remainingAmount = remainingAmount % 100;
37. Reordered from line 8 to 9:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1489358846528
You have not yet identified all the lines. Insert:     int numberOfQuarters = remainingAmount / 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 9:     int numberOfQuarters = remainingAmount / 25;
39. Reordered from line 9 to 10:     int numberOfQuarters = remainingAmount / 25;
Submit Parsons Solution clicked @ 1489358867547
You have not yet identified all the lines. Insert:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Moved from trash to solution at line 10:     remainingAmount = remainingAmount % 25;
41. Reordered from line 10 to 11:     remainingAmount = remainingAmount % 25;
Submit Parsons Solution clicked @ 1489358879514
You have not yet identified all the lines. Insert:     int numberOfDimes = remainingAmount / 10;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 11:     int numberOfDimes = remainingAmount / 10;
43. Reordered from line 11 to 12:     int numberOfDimes = remainingAmount / 10;
Submit Parsons Solution clicked @ 1489358897995
You have not yet identified all the lines. Insert:     remainingAmount = remainingAmount % 10;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from trash to solution at line 12:     remainingAmount = remainingAmount % 10;
45. Reordered from line 12 to 13:     remainingAmount = remainingAmount % 10;
46. Moved from trash to solution at line 13:     int numberOfNickels = remainingAmount / 5;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
47. Reordered from line 13 to 14:     int numberOfNickels = remainingAmount / 5;
48. Moved from trash to solution at line 14:     remainingAmount = remainingAmount % 5;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
49. Reordered from line 14 to 15:     remainingAmount = remainingAmount % 5;
50. Moved from trash to solution at line 15:     int numberOfPennies = remainingAmount;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
51. Reordered from line 15 to 16:     int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1489358929331
You have not yet identified all the lines. Insert:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 16:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
53. Reordered from line 16 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489358941155
You have not yet identified all the lines. Insert:     System.out.println("    " + numberOfOneDollars + " dollars");
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Moved from trash to solution at line 17:     System.out.println("    " + numberOfOneDollars + " dollars");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
55. Moved from trash to solution at line 18:     System.out.println("    " + numberOfQuarters + " quarters ");
56. Reordered from line 18 to 19:     System.out.println("    " + numberOfQuarters + " quarters ");
57. Moved from trash to solution at line 19:     System.out.println("    " + numberOfDimes + " dimes");
58. Reordered from line 19 to 20:     System.out.println("    " + numberOfDimes + " dimes");
59. Moved from trash to solution at line 20:     System.out.println("    " + numberOfNickels + " nickels");
60. Reordered from line 20 to 21:     System.out.println("    " + numberOfNickels + " nickels");
61. Moved from trash to solution at line 21:     System.out.println("    " + numberOfPennies + " pennies");
62. Reordered from line 21 to 22:     System.out.println("    " + numberOfPennies + " pennies");
63. Moved from trash to solution at line 22:  }}
64. Reordered from line 22 to 23:  }}
Submit Parsons Solution clicked @ 1489358971212
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 18 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489358988069
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class ComputeChange {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
10. Moved from problem to trash at line 4
26. Moved from trash to solution at line 3
27. Reordered from line 3 to 4
Line 5 (4 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
19. Moved from problem to trash at line 8
28. Moved from trash to solution at line 4
29. Reordered from line 4 to 5
*  Outdented line 5
Line 6 (3 moves):     double amount = input.nextDouble();
7. Moved from problem to trash at line 1
30. Moved from trash to solution at line 5
31. Reordered from line 5 to 6
Line 7 (3 moves):     int remainingAmount = (int)(amount * 100);
13. Moved from problem to trash at line 1
32. Moved from trash to solution at line 6
33. Reordered from line 6 to 7
Line 8 (3 moves):     int numberOfOneDollars = remainingAmount / 100;
21. Moved from problem to trash at line 4
34. Moved from trash to solution at line 7
35. Reordered from line 7 to 8
Line 9 (3 moves):     remainingAmount = remainingAmount % 100;
20. Moved from problem to trash at line 4
36. Moved from trash to solution at line 8
37. Reordered from line 8 to 9
Line 10 (3 moves):     int numberOfQuarters = remainingAmount / 25;
23. Moved from problem to trash at line 3
38. Moved from trash to solution at line 9
39. Reordered from line 9 to 10
Line 11 (3 moves):     remainingAmount = remainingAmount % 25;
9. Moved from problem to trash at line 1
40. Moved from trash to solution at line 10
41. Reordered from line 10 to 11
Line 12 (3 moves):     int numberOfDimes = remainingAmount / 10;
16. Moved from problem to trash at line 3
42. Moved from trash to solution at line 11
43. Reordered from line 11 to 12
Line 13 (3 moves):     remainingAmount = remainingAmount % 10;
17. Moved from problem to trash at line 2
44. Moved from trash to solution at line 12
45. Reordered from line 12 to 13
Line 14 (3 moves):     int numberOfNickels = remainingAmount / 5;
12. Moved from problem to trash at line 1
46. Moved from trash to solution at line 13
47. Reordered from line 13 to 14
Line 15 (3 moves):     remainingAmount = remainingAmount % 5;
8. Moved from problem to trash at line 2
48. Moved from trash to solution at line 14
49. Reordered from line 14 to 15
Line 16 (3 moves):     int numberOfPennies = remainingAmount;
14. Moved from problem to trash at line 1
50. Moved from trash to solution at line 15
51. Reordered from line 15 to 16
Line 17 (4 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
6. Moved from problem to trash at line 0
52. Moved from trash to solution at line 16
53. Reordered from line 16 to 17
65. Reordered from line 18 to 17
Line 18 (2 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
15. Moved from problem to trash at line 5
54. Moved from trash to solution at line 17
Line 19 (3 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
25. Moved from problem to trash at line 3
55. Moved from trash to solution at line 18
56. Reordered from line 18 to 19
Line 20 (3 moves):     System.out.println("    " + numberOfDimes + " dimes");
18. Moved from problem to trash at line 2
57. Moved from trash to solution at line 19
58. Reordered from line 19 to 20
Line 21 (3 moves):     System.out.println("    " + numberOfNickels + " nickels");
22. Moved from problem to trash at line 2
59. Moved from trash to solution at line 20
60. Reordered from line 20 to 21
Line 22 (3 moves):     System.out.println("    " + numberOfPennies + " pennies");
24. Moved from problem to trash at line 3
61. Moved from trash to solution at line 21
62. Reordered from line 21 to 22
Line 23 (3 moves):  }}
11. Moved from problem to trash at line 2
63. Moved from trash to solution at line 22
64. Reordered from line 22 to 23
Your Grade:
You took 65 steps to solve a Parsons puzzle containing 23 lines of code.
Next Problem clicked @ 1489359001839
Time spent on this problem: 359 seconds
<HR>
