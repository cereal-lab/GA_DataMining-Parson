Problem No. 2
Using Template # 100
The Problem:
System.out.println("Yes, the number is " + number);
int guess = input.nextInt();                // This is line X
System.out.println("Your guess is too low");
else if (guess > number)
int guess, number;
public class GuessNumberOneTime {
}}
guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
System.out.println("Your guess is too high");
public static void main(String[] args) {
import java.util.Scanner;
if (guess = number)
if (guess == number)
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 16 lines.
Re-assemble them with 17 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class GuessNumberOneTime {
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Reordered from line 2 to 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
7. Moved from problem to solution at line 4:     int guess = input.nextInt();                // This is line X
8. Reordered from line 4 to 5:     int guess = input.nextInt();                // This is line X
9. Moved from problem to solution at line 4:     int guess, number;
10. Moved from problem to solution at line 6:     if (guess == number)
11. Reordered from line 6 to 7:     if (guess == number)
12. Moved from problem to solution at line 7:       System.out.println("Yes, the number is " + number);
13. Reordered from line 7 to 8:       System.out.println("Yes, the number is " + number);
14. Moved from problem to solution at line 8:     else if (guess > number)
15. Reordered from line 8 to 9:     else if (guess > number)
16. Moved from problem to solution at line 7: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
17. Moved from problem to solution at line 10:       System.out.println("Your guess is too high");
18. Reordered from line 10 to 11:       System.out.println("Your guess is too high");
19. Moved from problem to solution at line 11:     else
20. Reordered from line 11 to 12:     else
21. Moved from problem to solution at line 12:       System.out.println("Your guess is too low");
22. Reordered from line 12 to 13:       System.out.println("Your guess is too low");
23. Moved from problem to solution at line 13: }}
24. Reordered from line 13 to 14: }}
Submit Parsons Solution clicked @ 1489347133827
Please clear all the lines from the left panel before submitting your answer.
25. Moved from problem to trash at line 0: 	guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
Submit Parsons Solution clicked @ 1489347139237
Please clear all the lines from the left panel before submitting your answer.
26. Moved from problem to trash at line 1:     if (guess = number)
Submit Parsons Solution clicked @ 1489347143567
This line is not in its correct location:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
Move this line in its place: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 5: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Submit Parsons Solution clicked @ 1489347163635
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class GuessNumberOneTime {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
4. Reordered from line 2 to 3
Line 4 (1 moves):     int guess, number;
9. Moved from problem to solution at line 4
Line 5 (2 moves): 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
16. Moved from problem to solution at line 7
27. Reordered from line 7 to 5
Line 6 (2 moves):     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 7 (2 moves):     int guess = input.nextInt();                // This is line X
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
Line 8 (2 moves):     if (guess == number)
10. Moved from problem to solution at line 6
11. Reordered from line 6 to 7
Line 9 (2 moves):       System.out.println("Yes, the number is " + number);
12. Moved from problem to solution at line 7
13. Reordered from line 7 to 8
Line 10 (2 moves):     else if (guess > number)
14. Moved from problem to solution at line 8
15. Reordered from line 8 to 9
Line 11 (2 moves):       System.out.println("Your guess is too high");
17. Moved from problem to solution at line 10
18. Reordered from line 10 to 11
Line 12 (2 moves):     else
19. Moved from problem to solution at line 11
20. Reordered from line 11 to 12
Line 13 (2 moves):       System.out.println("Your guess is too low");
21. Moved from problem to solution at line 12
22. Reordered from line 12 to 13
Line 14 (2 moves): }}
23. Moved from problem to solution at line 13
24. Reordered from line 13 to 14
Line 5 (16) (1 moves): 	guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
25. Moved from problem to trash at line 0
Line 8 (10) (1 moves):     if (guess = number)
26. Moved from problem to trash at line 1
Your Grade:
You took 27 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1489347174528
Time spent on this problem: 396 seconds
<HR>
