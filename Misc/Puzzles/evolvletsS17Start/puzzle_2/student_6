Problem No. 2
Using Template # 100
The Problem:
System.out.print("   " + j);
}}
System.out.println();}
for (int i = 1; i <= 9; i++) {
for (int j = 1; j < 9; j++)
for (int j = 1; j <= 9; j++)
System.out.println("           Multiplication Table");
public class MultiplicationTable {
public Class MultiplicationTable {
System.out.print(i + " | ");
System.out.printf("%4d", i * j);}
for (int j = 1; j <= 9; j++) {
public static void main(String[] args) {
System.out.println("\n-----------------------------------------");
System.out.print("    ");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to trash at line 0: public Class MultiplicationTable {
2. Moved from problem to solution at line 0: public class MultiplicationTable {
3. Moved from problem to solution at line 1:   public static void main(String[] args) {
4. Reordered from line 1 to 2:   public static void main(String[] args) {
5. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
6. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
7. Moved from problem to solution at line 3:     for (int j = 1; j <= 9; j++)
8. Reordered from line 3 to 4:     for (int j = 1; j <= 9; j++)
9. Moved from problem to solution at line 4:       System.out.print("   " + j);
10. Reordered from line 4 to 5:       System.out.print("   " + j);
11. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
12. Reordered from line 5 to 6:     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 6:     for (int i = 1; i <= 9; i++) {
14. Reordered from line 6 to 7:     for (int i = 1; i <= 9; i++) {
15. Moved from problem to solution at line 7:       System.out.print(i + " | ");
16. Reordered from line 7 to 8:       System.out.print(i + " | ");
17. Moved from problem to solution at line 8:       for (int j = 1; j <= 9; j++) {
18. Moved from problem to solution at line 9:         System.out.printf("%4d", i * j);}
19. Reordered from line 9 to 10:         System.out.printf("%4d", i * j);}
20. Moved from problem to solution at line 10: }}
21. Reordered from line 10 to 11: }}
22. Moved from problem to trash at line 1:     System.out.print("    ");
23. Moved from problem to trash at line 2:     for (int j = 1; j < 9; j++)
Submit Parsons Solution clicked @ 1489028346921
Please clear all the lines from the left panel before submitting your answer.
24. Moved from problem to trash at line 3:       System.out.println();}
Submit Parsons Solution clicked @ 1489028353544
This line is not in its correct location:     for (int j = 1; j <= 9; j++)
Insert this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from trash to problem at line 15:     System.out.print("    ");
26. Moved from problem to solution at line 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489028372480
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 10 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1489028381122
This line is not in its correct location: }}
Insert this line in its place:       System.out.println();}
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to problem at line 15:       System.out.println();}
29. Moved from problem to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1489028389690
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
2. Moved from problem to solution at line 0
Line 2 (2 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 1
4. Reordered from line 1 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 4 (3 moves):     System.out.print("    ");
22. Moved from problem to trash at line 1
25. Moved from trash to problem at line 15
26. Moved from problem to solution at line 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 6 (2 moves):       System.out.print("   " + j);
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
Line 9 (3 moves):       System.out.print(i + " | ");
15. Moved from problem to solution at line 7
16. Reordered from line 7 to 8
27. Reordered from line 10 to 9
Line 10 (1 moves):       for (int j = 1; j <= 9; j++) {
17. Moved from problem to solution at line 8
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
18. Moved from problem to solution at line 9
19. Reordered from line 9 to 10
Line 12 (3 moves):       System.out.println();}
24. Moved from problem to trash at line 3
28. Moved from trash to problem at line 15
29. Moved from problem to solution at line 12
Line 13 (2 moves): }}
20. Moved from problem to solution at line 10
21. Reordered from line 10 to 11
Line 1 (8) (1 moves): public Class MultiplicationTable {
1. Moved from problem to trash at line 0
Line 5 (13) (1 moves):     for (int j = 1; j < 9; j++)
23. Moved from problem to trash at line 2
Your Grade:
You took 29 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489028403980
Time spent on this problem: 517 seconds
<HR>
