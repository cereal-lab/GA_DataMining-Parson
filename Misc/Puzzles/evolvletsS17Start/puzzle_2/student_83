Problem No. 2
Using Template # 100
The Problem:
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
else
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
low++; high--;
isPalindrome = false;
System.out.println(s + " is a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
}}
}
while while (low <= high) {
while (low < high) {
public class Palindrome {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:     if (isPalindrome)
10. Moved from problem to solution at line 9:       System.out.println(s + " is a palindrome");
11. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 12:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Reordered from line 10 to 12:       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 11:         break;}
16. Moved from problem to solution at line 14:     else
17. Moved from problem to solution at line 15:         isPalindrome = false;
18. Moved from problem to trash at line 0:    while while (low <= high) {
19. Moved from problem to solution at line 12:     while (low < high) {
20. Moved from problem to solution at line 17:       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 15:       }
22. Moved from problem to trash at line 1:       low++; high--;
Submit Parsons Solution clicked @ 1489367935088
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489367948904
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489367954168
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 13 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367963744
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 13 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489367974896
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 12 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489367980673
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 17 to 11:         isPalindrome = false;
29. Reordered from line 18 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489368035566
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 16 to 12:       System.out.println(s + " is a palindrome");
31. Reordered from line 17 to 12:       }
Submit Parsons Solution clicked @ 1489368044567
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1489368051272
This line is not in its correct location:       }
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1489368057535
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 17 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489368064151
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 17 to 16:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489368071527
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489368077135
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 19 to 17:     else
Submit Parsons Solution clicked @ 1489368087831
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 19 to 18:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489368092415
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489368102471
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
23. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
24. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 12
25. Reordered from line 13 to 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to solution at line 12
26. Reordered from line 13 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 11
27. Reordered from line 12 to 10
Line 11 (2 moves):         isPalindrome = false;
17. Moved from problem to solution at line 15
28. Reordered from line 17 to 11
Line 12 (2 moves):         break;}
15. Moved from problem to solution at line 11
32. Reordered from line 17 to 12
Line 13 (2 moves):       low++; high--;
22. Moved from problem to trash at line 1
33. Moved from trash to solution at line 13
Line 14 (2 moves):       }
21. Moved from problem to solution at line 15
31. Reordered from line 17 to 12
Line 15 (2 moves):     if (isPalindrome)
9. Moved from problem to solution at line 8
34. Reordered from line 17 to 15
Line 16 (4 moves):       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 9
14. Reordered from line 10 to 12
30. Reordered from line 16 to 12
36. Reordered from line 17 to 16
Line 17 (2 moves):     else
16. Moved from problem to solution at line 14
37. Reordered from line 19 to 17
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 17
29. Reordered from line 18 to 12
35. Reordered from line 17 to 16
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
18. Moved from problem to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
11. Moved from problem to solution at line 9
38. Reordered from line 19 to 18
39. Moved from solution to trash at line 1
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489368104415
Time spent on this problem: 647 seconds
<HR>
