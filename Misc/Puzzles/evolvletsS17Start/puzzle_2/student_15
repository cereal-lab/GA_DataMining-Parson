Problem No. 2
Using Template # 100
The Problem:
for (int i = 1; i <= 9; i++) {
System.out.print(i + " | ");
public static void main(String[] args) {
for (int j = 1; j < 9; j++)
for (int j = 1; j <= 9; j++)
System.out.println("\n-----------------------------------------");
System.out.print("   " + j);
System.out.println("           Multiplication Table");
System.out.print("    ");
System.out.printf("%4d", i * j);}
System.out.println();}
for (int j = 1; j <= 9; j++) {
}}
public Class MultiplicationTable {
public class MultiplicationTable {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   public static void main(String[] args) {
2. Moved from problem to solution at line 1: public class MultiplicationTable {
3. Moved from problem to trash at line 0: public Class MultiplicationTable {
4. Moved from problem to trash at line 1:     for (int j = 1; j < 9; j++)
5. Moved from problem to trash at line 2:     for (int j = 1; j <= 9; j++)
6. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
7. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
8. Moved from problem to solution at line 3:     for (int i = 1; i <= 9; i++) {
9. Reordered from line 3 to 4:     for (int i = 1; i <= 9; i++) {
*  Indented line 4:     for (int i = 1; i <= 9; i++) {
10. Moved from problem to trash at line 3:       System.out.println();}
11. Moved from problem to solution at line 4:     System.out.print("    ");
12. Reordered from line 4 to 5:     System.out.print("    ");
13. Moved from problem to solution at line 5:     System.out.println("\n-----------------------------------------");
14. Reordered from line 5 to 6:     System.out.println("\n-----------------------------------------");
15. Moved from problem to solution at line 6:       for (int j = 1; j <= 9; j++) {
16. Reordered from line 6 to 7:       for (int j = 1; j <= 9; j++) {
17. Moved from problem to solution at line 7:         System.out.printf("%4d", i * j);}
18. Reordered from line 7 to 8:         System.out.printf("%4d", i * j);}
19. Moved from problem to solution at line 8:       System.out.print(i + " | ");
20. Reordered from line 8 to 9:       System.out.print(i + " | ");
21. Moved from problem to solution at line 9:       System.out.print("   " + j);
22. Moved from problem to solution at line 10: }}
23. Reordered from line 10 to 11: }}
Submit Parsons Solution clicked @ 1488998570257
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 5 to 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1488998589325
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 5:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1488998604276
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from solution to trash at line 4:     for (int i = 1; i <= 9; i++) {
27. Moved from trash to solution at line 5:     for (int j = 1; j <= 9; j++)
28. Moved from solution to trash at line 4:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1488998640419
This line is not in its correct location:     System.out.println("\n-----------------------------------------");
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 8 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1488998649200
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 8:     for (int i = 1; i <= 9; i++) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
31. Reordered from line 10 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1488998699265
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 10:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1488998715534
This line is not in its correct location: }}
Insert this line in its place:       System.out.println();}
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from trash to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1488998723965
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
2. Moved from problem to solution at line 1
Line 2 (1 moves):   public static void main(String[] args) {
1. Moved from problem to solution at line 0
Line 3 (2 moves):     System.out.println("           Multiplication Table");
6. Moved from problem to solution at line 2
7. Reordered from line 2 to 3
Line 4 (3 moves):     System.out.print("    ");
11. Moved from problem to solution at line 4
12. Reordered from line 4 to 5
24. Reordered from line 5 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
5. Moved from problem to trash at line 2
27. Moved from trash to solution at line 5
Line 6 (2 moves):       System.out.print("   " + j);
21. Moved from problem to solution at line 9
29. Reordered from line 8 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 5
14. Reordered from line 5 to 6
Line 8 (5 moves):     for (int i = 1; i <= 9; i++) {
8. Moved from problem to solution at line 3
9. Reordered from line 3 to 4
*  Indented line 4
26. Moved from solution to trash at line 4
30. Moved from trash to solution at line 8
Line 9 (3 moves):       System.out.print(i + " | ");
19. Moved from problem to solution at line 8
20. Reordered from line 8 to 9
31. Reordered from line 10 to 9
Line 10 (5 moves):       for (int j = 1; j <= 9; j++) {
15. Moved from problem to solution at line 6
16. Reordered from line 6 to 7
25. Reordered from line 7 to 5
28. Moved from solution to trash at line 4
32. Moved from trash to solution at line 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
17. Moved from problem to solution at line 7
18. Reordered from line 7 to 8
Line 12 (2 moves):       System.out.println();}
10. Moved from problem to trash at line 3
33. Moved from trash to solution at line 12
Line 13 (2 moves): }}
22. Moved from problem to solution at line 10
23. Reordered from line 10 to 11
Line 1 (8) (1 moves): public Class MultiplicationTable {
3. Moved from problem to trash at line 0
Line 5 (13) (1 moves):     for (int j = 1; j < 9; j++)
4. Moved from problem to trash at line 1
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1488998735008
Time spent on this problem: 559 seconds
<HR>
