Problem No. 2
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while (low < high) {
while while (low <= high) {
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is not a palindrome");
isPalindrome = false;
if (isPalindrome)
break;}
}
System.out.println(s + " is a palindrome");
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
low++; high--;
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to trash at line 0:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to trash at line 1:       low++; high--;
12. Moved from problem to trash at line 2:     String s = input.nextLine();          // This is line X
13. Moved from problem to trash at line 3:     else
14. Moved from problem to trash at line 3:     }}
15. Moved from problem to trash at line 3:       System.out.println(s + " is a palindrome");
16. Moved from problem to trash at line 2:         break;}
17. Moved from problem to trash at line 2:     if (isPalindrome)
18. Moved from problem to trash at line 4:         isPalindrome = false;
19. Moved from problem to trash at line 3:       System.out.println(s + " is not a palindrome");
20. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to trash at line 2:       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to trash at line 5:    while while (low <= high) {
24. Moved from problem to trash at line 1:     while (low < high) {
Submit Parsons Solution clicked @ 1489352925260
Please clear all the lines from the left panel before submitting your answer.
25. Moved from problem to trash at line 4:       }
26. Moved from trash to solution at line 5:     String s = input.nextLine();          // This is line X
27. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489352942670
You have not yet identified all the lines. Insert:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 6:     int low, high, isPalindrome;          // This is line Y
29. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489352986830
You have not yet identified all the lines. Insert:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
31. Reordered from line 7 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489353007612
You have not yet identified all the lines. Insert:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 8:     while (low < high) {
33. Reordered from line 8 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489353024502
You have not yet identified all the lines. Insert:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
35. Reordered from line 9 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489353035252
You have not yet identified all the lines. Insert:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 10:         isPalindrome = false;
37. Reordered from line 10 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489353045386
You have not yet identified all the lines. Insert:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 11:     }}
39. Moved from solution to trash at line 9:     }}
40. Moved from trash to solution at line 11:         break;}
41. Reordered from line 11 to 12:         break;}
Submit Parsons Solution clicked @ 1489353062448
You have not yet identified all the lines. Insert:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 12:       low++; high--;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Reordered from line 12 to 13:       low++; high--;
44. Moved from trash to solution at line 13:     else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
45. Reordered from line 13 to 14:     else
Submit Parsons Solution clicked @ 1489353073219
This line is not in its correct location:     else
Insert this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Moved from solution to trash at line 1:     else
47. Moved from trash to problem at line 21:       System.out.println(s + " is a palindrome");
48. Moved from trash to solution at line 13:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
49. Reordered from line 13 to 14:       }
Submit Parsons Solution clicked @ 1489353097133
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489353114211
Please clear all the lines from the left panel before submitting your answer.
50. Moved from problem to trash at line 3:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489353120207
You have not yet identified all the lines. Insert:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Moved from trash to solution at line 14:     if (isPalindrome)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
52. Reordered from line 14 to 15:     if (isPalindrome)
53. Moved from trash to solution at line 15:       System.out.println(s + " is a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
54. Reordered from line 15 to 16:       System.out.println(s + " is a palindrome");
55. Moved from trash to solution at line 16:     else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
56. Reordered from line 16 to 17:     else
57. Moved from trash to solution at line 17:       System.out.println(s + " is not a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
58. Reordered from line 17 to 18:       System.out.println(s + " is not a palindrome");
59. Moved from trash to solution at line 18:     }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
60. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1489353153030
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
12. Moved from problem to trash at line 2
26. Moved from trash to solution at line 5
27. Reordered from line 5 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to trash at line 0
28. Moved from trash to solution at line 6
29. Reordered from line 6 to 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to trash at line 3
30. Moved from trash to solution at line 7
31. Reordered from line 7 to 8
Line 9 (3 moves):     while (low < high) {
24. Moved from problem to trash at line 1
32. Moved from trash to solution at line 8
33. Reordered from line 8 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
22. Moved from problem to trash at line 2
34. Moved from trash to solution at line 9
35. Reordered from line 9 to 10
Line 11 (3 moves):         isPalindrome = false;
18. Moved from problem to trash at line 4
36. Moved from trash to solution at line 10
37. Reordered from line 10 to 11
Line 12 (3 moves):         break;}
16. Moved from problem to trash at line 2
40. Moved from trash to solution at line 11
41. Reordered from line 11 to 12
Line 13 (3 moves):       low++; high--;
11. Moved from problem to trash at line 1
42. Moved from trash to solution at line 12
43. Reordered from line 12 to 13
Line 14 (3 moves):       }
25. Moved from problem to trash at line 4
48. Moved from trash to solution at line 13
49. Reordered from line 13 to 14
Line 15 (3 moves):     if (isPalindrome)
17. Moved from problem to trash at line 2
51. Moved from trash to solution at line 14
52. Reordered from line 14 to 15
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
15. Moved from problem to trash at line 3
47. Moved from trash to problem at line 21
50. Moved from problem to trash at line 3
53. Moved from trash to solution at line 15
54. Reordered from line 15 to 16
Line 17 (6 moves):     else
13. Moved from problem to trash at line 3
44. Moved from trash to solution at line 13
45. Reordered from line 13 to 14
46. Moved from solution to trash at line 1
55. Moved from trash to solution at line 16
56. Reordered from line 16 to 17
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
19. Moved from problem to trash at line 3
57. Moved from trash to solution at line 17
58. Reordered from line 17 to 18
Line 19 (5 moves):     }}
14. Moved from problem to trash at line 3
38. Moved from trash to solution at line 11
39. Moved from solution to trash at line 9
59. Moved from trash to solution at line 18
60. Reordered from line 18 to 19
Line 8 (7) (1 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to trash at line 2
Line 9 (37) (1 moves):    while while (low <= high) {
23. Moved from problem to trash at line 5
Your Grade:
You took 60 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489353171777
Time spent on this problem: 376 seconds
<HR>
