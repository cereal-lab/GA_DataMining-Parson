Problem No. 2
Using Template # 100
The Problem:
if (isPalindrome)
System.out.println(s + " is not a palindrome");
public class Palindrome {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
break;}
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
else
String s = input.nextLine();          // This is line X
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
}
while while (low <= high) {
while (low < high) {
int low, high, isPalindrome;          // This is line Y
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Reordered from line 2 to 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 1: import java.util.Scanner;
7. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
10. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
14. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 8:     if (isPalindrome)
16. Reordered from line 9 to 8:       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
18. Reordered from line 9 to 10:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 10:     low= 1; high = s.length() - 1; isPalindrome = true;
20. Reordered from line 11 to 10:     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 11:    while while (low <= high) {
22. Moved from problem to solution at line 12:     while (low < high) {
23. Moved from problem to solution at line 13:       low++; high--;
24. Moved from problem to solution at line 14:     else
25. Moved from problem to solution at line 15:         isPalindrome = false;
26. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
27. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
28. Moved from problem to solution at line 18:         break;}
Submit Parsons Solution clicked @ 1489429628583
Please clear all the lines from the left panel before submitting your answer.
29. Moved from problem to solution at line 19:       }
30. Moved from problem to solution at line 20:     }}
31. Reordered from line 20 to 21:     }}
Submit Parsons Solution clicked @ 1489429639120
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
33. Reordered from line 6 to 4:     int low, high, isPalindrome;          // This is line Y
34. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489429667296
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489429675528
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489429683001
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 10 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489429697001
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 12 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489429705177
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 16 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489429717001
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 13 to 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489429723601
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from solution to trash at line 0:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489429731809
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 17 to 12:         break;}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489429738090
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489429744170
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1489429751186
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 16 to 18:     else
Submit Parsons Solution clicked @ 1489429756922
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489429761130
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 19 to 17:     low= 1; high = s.length() - 1; isPalindrome = true;
48. Reordered from line 19 to 18:     else
Submit Parsons Solution clicked @ 1489429766698
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489429773882
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
6. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (5 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
8. Reordered from line 5 to 4
10. Reordered from line 5 to 4
34. Reordered from line 5 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 4
32. Reordered from line 6 to 5
35. Reordered from line 6 to 5
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
36. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 4
33. Reordered from line 6 to 4
Line 8 (4 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9
18. Reordered from line 9 to 10
20. Reordered from line 11 to 10
37. Reordered from line 10 to 8
Line 9 (2 moves):     while (low < high) {
22. Moved from problem to solution at line 12
38. Reordered from line 12 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
16. Reordered from line 9 to 8
Line 11 (2 moves):         isPalindrome = false;
25. Moved from problem to solution at line 15
39. Reordered from line 16 to 11
Line 12 (2 moves):         break;}
28. Moved from problem to solution at line 18
42. Reordered from line 17 to 12
Line 13 (2 moves):       low++; high--;
23. Moved from problem to solution at line 13
43. Reordered from line 14 to 13
Line 14 (2 moves):       }
29. Moved from problem to solution at line 19
44. Reordered from line 18 to 14
Line 15 (1 moves):     if (isPalindrome)
15. Moved from problem to solution at line 8
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
26. Moved from problem to solution at line 16
46. Reordered from line 17 to 16
Line 17 (3 moves):     else
24. Moved from problem to solution at line 14
45. Reordered from line 16 to 18
48. Reordered from line 19 to 18
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
27. Moved from problem to solution at line 15
Line 19 (2 moves):     }}
30. Moved from problem to solution at line 20
31. Reordered from line 20 to 21
Line 9 (37) (3 moves):    while while (low <= high) {
21. Moved from problem to solution at line 11
40. Reordered from line 13 to 12
41. Moved from solution to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 10
47. Reordered from line 19 to 17
49. Moved from solution to trash at line 1
Your Grade:
You took 49 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489429776986
Time spent on this problem: 576 seconds
<HR>
