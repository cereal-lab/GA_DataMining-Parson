Problem No. 2
Using Template # 100
The Problem:
else
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
}}
public class Palindrome {
while (low < high) {
while while (low <= high) {
isPalindrome = false;
String s = input.nextLine();          // This is line X
if (isPalindrome)
break;}
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
low++; high--;
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
11. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 7:     low= 1; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 9:     while (low < high) {
15. Moved from problem to solution at line 6:    while while (low <= high) {
16. Moved from problem to solution at line 11:         isPalindrome = false;
17. Moved from problem to solution at line 12:     else
18. Moved from problem to solution at line 13:     if (isPalindrome)
19. Moved from problem to solution at line 14:         break;}
20. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 17:       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to solution at line 18:       low++; high--;
24. Moved from problem to solution at line 19:     }}
25. Moved from problem to solution at line 17:       }
26. Reordered from line 20 to 21:     }}
Submit Parsons Solution clicked @ 1489460152359
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 7 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
28. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489460165634
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 20 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489460174447
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 8 to 9:    while while (low <= high) {
31. Moved from solution to problem at line 7:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489460185276
Please clear all the lines from the left panel before submitting your answer.
32. Moved from problem to trash at line 0:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489460194075
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Moved from solution to problem at line 6:     low= 1; high = s.length() - 1; isPalindrome = true;
34. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489460201612
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 17 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489460213532
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 15 to 12:         break;}
Submit Parsons Solution clicked @ 1489460218690
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 18 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489460223594
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1489460228518
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 16 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489460235004
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489460242785
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (4 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
27. Reordered from line 7 to 6
28. Reordered from line 6 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 5
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 6
11. Reordered from line 6 to 7
29. Reordered from line 20 to 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
14. Moved from problem to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
22. Moved from problem to solution at line 17
35. Reordered from line 17 to 10
Line 11 (1 moves):         isPalindrome = false;
16. Moved from problem to solution at line 11
Line 12 (2 moves):         break;}
19. Moved from problem to solution at line 14
36. Reordered from line 15 to 12
Line 13 (2 moves):       low++; high--;
23. Moved from problem to solution at line 18
37. Reordered from line 18 to 13
Line 14 (2 moves):       }
25. Moved from problem to solution at line 17
38. Reordered from line 18 to 14
Line 15 (2 moves):     if (isPalindrome)
18. Moved from problem to solution at line 13
39. Reordered from line 16 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
21. Moved from problem to solution at line 16
40. Reordered from line 18 to 16
Line 17 (1 moves):     else
17. Moved from problem to solution at line 12
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 14
Line 19 (2 moves):     }}
24. Moved from problem to solution at line 19
26. Reordered from line 20 to 21
Line 9 (37) (4 moves):    while while (low <= high) {
15. Moved from problem to solution at line 6
30. Reordered from line 8 to 9
31. Moved from solution to problem at line 7
32. Moved from problem to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 7
33. Moved from solution to problem at line 6
34. Moved from problem to trash at line 1
Your Grade:
You took 40 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489460266593
Time spent on this problem: 234 seconds
<HR>
