Problem No. 2
Using Template # 100
The Problem:
remainingAmount = remainingAmount % 100;
Int numberOfPennies = remainingAmount;
int numberOfPennies = remainingAmount;
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfNickels = remainingAmount / 5;
double amount = input.nextDouble();
System.out.println("    " + numberOfDimes + " dimes");
int numberOfOneDollars = remainingAmount / 100;
public class ComputeChange {
Public class ComputeChange {
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int numberOfQuarters = remainingAmount / 25;
System.out.println("    " + numberOfQuarters + " quarters ");
remainingAmount = remainingAmount % 25;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
remainingAmount = remainingAmount % 10;
import java.util.Scanner;
System.out.println("    " + numberOfPennies + " pennies");
int remainingAmount = (int)(amount * 100);
int numberOfDimes = remainingAmount / 10;
remainingAmount = remainingAmount % 5;
System.out.println("    " + numberOfNickels + " nickels");
public static void main(String[] args) {
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class ComputeChange {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
*  Indented line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
8. Moved from problem to solution at line 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
9. Reordered from line 4 to 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
10. Moved from problem to solution at line 5:     double amount = input.nextDouble();
11. Reordered from line 5 to 6:     double amount = input.nextDouble();
12. Moved from problem to solution at line 6:     int numberOfDimes = remainingAmount / 10;
13. Reordered from line 6 to 7:     int numberOfDimes = remainingAmount / 10;
14. Moved from problem to solution at line 7:     int remainingAmount = (int)(amount * 100);
15. Moved from problem to solution at line 8:     remainingAmount = remainingAmount % 100;
16. Reordered from line 8 to 9:     remainingAmount = remainingAmount % 100;
17. Moved from problem to solution at line 9:     int numberOfQuarters = remainingAmount / 25;
18. Reordered from line 9 to 10:     int numberOfQuarters = remainingAmount / 25;
*  Indented line 6:     double amount = input.nextDouble();
*  Outdented line 6:     double amount = input.nextDouble();
*  Outdented line 6:     double amount = input.nextDouble();
*  Indented line 7:     int remainingAmount = (int)(amount * 100);
*  Indented line 8:     int numberOfDimes = remainingAmount / 10;
*  Indented line 9:     remainingAmount = remainingAmount % 100;
*  Indented line 10:     int numberOfQuarters = remainingAmount / 25;
*  Indented line 10:     int numberOfQuarters = remainingAmount / 25;
19. Moved from problem to solution at line 10:     remainingAmount = remainingAmount % 25;
20. Reordered from line 10 to 11:     remainingAmount = remainingAmount % 25;
*  Indented line 11:     remainingAmount = remainingAmount % 25;
21. Reordered from line 8 to 11:     int numberOfDimes = remainingAmount / 10;
22. Moved from problem to solution at line 11:     remainingAmount = remainingAmount % 10;
23. Reordered from line 11 to 12:     remainingAmount = remainingAmount % 10;
*  Indented line 12:     remainingAmount = remainingAmount % 10;
24. Moved from problem to solution at line 12:     int numberOfNickels = remainingAmount / 5;
25. Reordered from line 12 to 13:     int numberOfNickels = remainingAmount / 5;
26. Moved from problem to solution at line 13:     remainingAmount = remainingAmount % 5;
27. Reordered from line 14 to 13:     int numberOfNickels = remainingAmount / 5;
*  Indented line 13:     int numberOfNickels = remainingAmount / 5;
*  Indented line 13:     int numberOfNickels = remainingAmount / 5;
*  Indented line 14:     remainingAmount = remainingAmount % 5;
28. Reordered from line 10 to 11:     remainingAmount = remainingAmount % 25;
29. Reordered from line 11 to 10:     remainingAmount = remainingAmount % 25;
*  Indented line 10:     remainingAmount = remainingAmount % 25;
*  Indented line 11:     int numberOfDimes = remainingAmount / 10;
*  Indented line 12:     remainingAmount = remainingAmount % 10;
*  Indented line 9:     int numberOfQuarters = remainingAmount / 25;
*  Indented line 10:     remainingAmount = remainingAmount % 25;
30. Moved from problem to solution at line 14:     int numberOfPennies = remainingAmount;
31. Reordered from line 14 to 15:     int numberOfPennies = remainingAmount;
*  Indented line 15:     int numberOfPennies = remainingAmount;
*  Outdented line 15:     int numberOfPennies = remainingAmount;
*  Outdented line 15:     int numberOfPennies = remainingAmount;
32. Moved from problem to solution at line 15:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
33. Reordered from line 15 to 16:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
*  Indented line 16:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
34. Moved from problem to solution at line 8:     int numberOfOneDollars = remainingAmount / 100;
35. Moved from problem to solution at line 17:     System.out.println("    " + numberOfOneDollars + " dollars");
36. Reordered from line 17 to 18:     System.out.println("    " + numberOfOneDollars + " dollars");
37. Moved from problem to solution at line 18:     System.out.println("    " + numberOfQuarters + " quarters ");
38. Reordered from line 18 to 19:     System.out.println("    " + numberOfQuarters + " quarters ");
39. Moved from problem to solution at line 19:     System.out.println("    " + numberOfDimes + " dimes");
40. Reordered from line 19 to 20:     System.out.println("    " + numberOfDimes + " dimes");
41. Moved from problem to solution at line 20:     System.out.println("    " + numberOfNickels + " nickels");
42. Reordered from line 21 to 20:     System.out.println("    " + numberOfDimes + " dimes");
43. Moved from problem to solution at line 21:     System.out.println("    " + numberOfPennies + " pennies");
44. Reordered from line 22 to 21:     System.out.println("    " + numberOfNickels + " nickels");
*  Indented line 18:     System.out.println("    " + numberOfOneDollars + " dollars");
*  Indented line 19:     System.out.println("    " + numberOfQuarters + " quarters ");
*  Indented line 20:     System.out.println("    " + numberOfDimes + " dimes");
*  Indented line 21:     System.out.println("    " + numberOfNickels + " nickels");
*  Indented line 22:     System.out.println("    " + numberOfPennies + " pennies");
*  Outdented line 21:     System.out.println("    " + numberOfNickels + " nickels");
45. Moved from problem to solution at line 22:  }}
46. Reordered from line 22 to 23:  }}
Submit Parsons Solution clicked @ 1489428908930
Please clear all the lines from the left panel before submitting your answer.
47. Moved from problem to trash at line 0: Public class ComputeChange {
48. Moved from problem to trash at line 1:     Int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1489428914141
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class ComputeChange {
2. Moved from problem to solution at line 1
Line 3 (3 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
*  Indented line 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 6 (5 moves):     double amount = input.nextDouble();
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
*  Indented line 6
*  Outdented line 6
*  Outdented line 6
Line 7 (2 moves):     int remainingAmount = (int)(amount * 100);
14. Moved from problem to solution at line 7
*  Indented line 7
Line 8 (1 moves):     int numberOfOneDollars = remainingAmount / 100;
34. Moved from problem to solution at line 8
Line 9 (3 moves):     remainingAmount = remainingAmount % 100;
15. Moved from problem to solution at line 8
16. Reordered from line 8 to 9
*  Indented line 9
Line 10 (5 moves):     int numberOfQuarters = remainingAmount / 25;
17. Moved from problem to solution at line 9
18. Reordered from line 9 to 10
*  Indented line 10
*  Indented line 10
*  Indented line 9
Line 11 (7 moves):     remainingAmount = remainingAmount % 25;
19. Moved from problem to solution at line 10
20. Reordered from line 10 to 11
*  Indented line 11
28. Reordered from line 10 to 11
29. Reordered from line 11 to 10
*  Indented line 10
*  Indented line 10
Line 12 (5 moves):     int numberOfDimes = remainingAmount / 10;
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
*  Indented line 8
21. Reordered from line 8 to 11
*  Indented line 11
Line 13 (4 moves):     remainingAmount = remainingAmount % 10;
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
*  Indented line 12
*  Indented line 12
Line 14 (5 moves):     int numberOfNickels = remainingAmount / 5;
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 13
27. Reordered from line 14 to 13
*  Indented line 13
*  Indented line 13
Line 15 (2 moves):     remainingAmount = remainingAmount % 5;
26. Moved from problem to solution at line 13
*  Indented line 14
Line 16 (5 moves):     int numberOfPennies = remainingAmount;
30. Moved from problem to solution at line 14
31. Reordered from line 14 to 15
*  Indented line 15
*  Outdented line 15
*  Outdented line 15
Line 17 (3 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
32. Moved from problem to solution at line 15
33. Reordered from line 15 to 16
*  Indented line 16
Line 18 (3 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
35. Moved from problem to solution at line 17
36. Reordered from line 17 to 18
*  Indented line 18
Line 19 (3 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
37. Moved from problem to solution at line 18
38. Reordered from line 18 to 19
*  Indented line 19
Line 20 (4 moves):     System.out.println("    " + numberOfDimes + " dimes");
39. Moved from problem to solution at line 19
40. Reordered from line 19 to 20
42. Reordered from line 21 to 20
*  Indented line 20
Line 21 (4 moves):     System.out.println("    " + numberOfNickels + " nickels");
41. Moved from problem to solution at line 20
44. Reordered from line 22 to 21
*  Indented line 21
*  Outdented line 21
Line 22 (2 moves):     System.out.println("    " + numberOfPennies + " pennies");
43. Moved from problem to solution at line 21
*  Indented line 22
Line 23 (2 moves):  }}
45. Moved from problem to solution at line 22
46. Reordered from line 22 to 23
Line 2 (33) (1 moves): Public class ComputeChange {
47. Moved from problem to trash at line 0
Line 16 (22) (1 moves):     Int numberOfPennies = remainingAmount;
48. Moved from problem to trash at line 1
Your Grade:
You took 48 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1489428916691
Time spent on this problem: 592 seconds
<HR>
