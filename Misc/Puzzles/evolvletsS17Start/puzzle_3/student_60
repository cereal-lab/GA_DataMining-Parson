Problem No. 3
Using Template # 100
The Problem:
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while while (low <= high) {
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
isPalindrome = false;
System.out.println(s + " is a palindrome");
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
public class Palindrome {
String s = input.nextLine();          // This is line X
low++; high--;
break;}
}}
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:     }}
4. Reordered from line 2 to 3:     }}
5. Reordered from line 2 to 1: import java.util.Scanner;
6. Moved from problem to solution at line 3:   public static void main(String[] args) {
7. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 8:     if (isPalindrome)
12. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 9:         isPalindrome = false;
14. Moved from problem to solution at line 10:         break;}
15. Moved from problem to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 11:       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 14:       low++; high--;
18. Moved from problem to solution at line 15:     while (low < high) {
19. Moved from problem to solution at line 16:     low= 0; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 17:       System.out.println(s + " is a palindrome");
21. Moved from problem to solution at line 16:       }
22. Reordered from line 17 to 16:     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to trash at line 0:    while while (low <= high) {
24. Moved from problem to trash at line 1:     else
Submit Parsons Solution clicked @ 1489452237221
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 4:     int low, high, isPalindrome;          // This is line Y
26. Reordered from line 8 to 4:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489452255768
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 6 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
28. Reordered from line 9 to 5:         isPalindrome = false;
29. Reordered from line 9 to 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489452271307
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489452274889
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 9 to 6:     String s = input.nextLine();          // This is line X
32. Reordered from line 10 to 7:         break;}
33. Reordered from line 10 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489452288523
This line is not in its correct location:         break;}
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 16 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489452296252
This line is not in its correct location:         break;}
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 16 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489452304131
This line is not in its correct location:         break;}
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 12 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489452313764
This line is not in its correct location:         break;}
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489452318861
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 17 to 13:       }
39. Reordered from line 14 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489452330718
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1489452334294
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 17 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489452338532
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 15 to 14:       }
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489452343791
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 16 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489452347804
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489452354315
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Moved from trash to solution at line 17:     else
Submit Parsons Solution clicked @ 1489452360106
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489452364477
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
5. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
6. Moved from problem to solution at line 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 6
29. Reordered from line 9 to 5
30. Reordered from line 5 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 4
27. Reordered from line 6 to 4
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 5
31. Reordered from line 9 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 7
25. Reordered from line 7 to 4
33. Reordered from line 10 to 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 16
22. Reordered from line 17 to 16
34. Reordered from line 16 to 8
Line 9 (2 moves):     while (low < high) {
18. Moved from problem to solution at line 15
35. Reordered from line 16 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 8
26. Reordered from line 8 to 4
36. Reordered from line 12 to 10
Line 11 (3 moves):         isPalindrome = false;
13. Moved from problem to solution at line 9
28. Reordered from line 9 to 5
37. Reordered from line 12 to 11
Line 12 (3 moves):         break;}
14. Moved from problem to solution at line 10
32. Reordered from line 10 to 7
40. Reordered from line 13 to 12
Line 13 (2 moves):       low++; high--;
17. Moved from problem to solution at line 14
41. Reordered from line 17 to 13
Line 14 (3 moves):       }
21. Moved from problem to solution at line 16
38. Reordered from line 17 to 13
42. Reordered from line 15 to 14
Line 15 (2 moves):     if (isPalindrome)
11. Moved from problem to solution at line 8
43. Reordered from line 16 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 17
44. Reordered from line 18 to 16
Line 17 (2 moves):     else
24. Moved from problem to trash at line 1
45. Moved from trash to solution at line 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 11
39. Reordered from line 14 to 12
Line 19 (2 moves):     }}
3. Moved from problem to solution at line 2
4. Reordered from line 2 to 3
Line 9 (37) (1 moves):    while while (low <= high) {
23. Moved from problem to trash at line 0
Line 8 (7) (2 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 12
46. Moved from solution to trash at line 1
Your Grade:
You took 46 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489452365866
Time spent on this problem: 664 seconds
<HR>
