Problem No. 3
Using Template # 100
The Problem:
int numberOfDimes = remainingAmount / 10;
int numberOfQuarters = remainingAmount / 25;
remainingAmount = remainingAmount % 100;
System.out.println("    " + numberOfPennies + " pennies");
int remainingAmount = (int)(amount * 100);
int numberOfOneDollars = remainingAmount / 100;
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Public class ComputeChange {
public class ComputeChange {
double amount = input.nextDouble();
int numberOfNickels = remainingAmount / 5;
import java.util.Scanner;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
remainingAmount = remainingAmount % 10;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
System.out.println("    " + numberOfQuarters + " quarters ");
int numberOfPennies = remainingAmount;
Int numberOfPennies = remainingAmount;
System.out.println("    " + numberOfDimes + " dimes");
}}
System.out.println("    " + numberOfNickels + " nickels");
remainingAmount = remainingAmount % 25;
System.out.println("    " + numberOfOneDollars + " dollars");
public static void main(String[] args) {
remainingAmount = remainingAmount % 5;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to trash at line 0: Public class ComputeChange {
3. Moved from problem to solution at line 1: public class ComputeChange {
4. Reordered from line 1 to 2: public class ComputeChange {
5. Moved from problem to solution at line 2:   public static void main(String[] args) {
6. Reordered from line 2 to 3:   public static void main(String[] args) {
7. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
8. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
9. Moved from problem to solution at line 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
10. Reordered from line 4 to 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
11. Moved from problem to solution at line 5:     double amount = input.nextDouble();
12. Reordered from line 5 to 6:     double amount = input.nextDouble();
13. Moved from problem to solution at line 6:  }}
14. Reordered from line 6 to 7:  }}
15. Moved from problem to trash at line 1:     Int numberOfPennies = remainingAmount;
16. Moved from problem to solution at line 7:     int remainingAmount = (int)(amount * 100);
17. Moved from problem to solution at line 8:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
18. Moved from problem to solution at line 8:     remainingAmount = remainingAmount % 10;
19. Moved from problem to solution at line 9:     remainingAmount = remainingAmount % 100;
20. Reordered from line 9 to 8:     remainingAmount = remainingAmount % 100;
21. Moved from problem to solution at line 9:     remainingAmount = remainingAmount % 25;
22. Moved from problem to solution at line 11:     remainingAmount = remainingAmount % 5;
23. Moved from problem to solution at line 9:     int numberOfOneDollars = remainingAmount / 100;
24. Moved from problem to solution at line 11:     int numberOfQuarters = remainingAmount / 25;
25. Moved from problem to solution at line 12:     int numberOfDimes = remainingAmount / 10;
26. Reordered from line 12 to 13:     int numberOfDimes = remainingAmount / 10;
27. Moved from problem to solution at line 14:     int numberOfNickels = remainingAmount / 5;
28. Reordered from line 14 to 15:     int numberOfNickels = remainingAmount / 5;
29. Moved from problem to solution at line 15:     int numberOfPennies = remainingAmount;
30. Reordered from line 15 to 16:     int numberOfPennies = remainingAmount;
31. Moved from problem to solution at line 18:     System.out.println("    " + numberOfOneDollars + " dollars");
32. Moved from problem to solution at line 19:     System.out.println("    " + numberOfQuarters + " quarters ");
33. Moved from problem to solution at line 20:     System.out.println("    " + numberOfDimes + " dimes");
34. Moved from problem to solution at line 21:     System.out.println("    " + numberOfNickels + " nickels");
35. Moved from problem to solution at line 22:     System.out.println("    " + numberOfPennies + " pennies");
Submit Parsons Solution clicked @ 1489430387453
This line is not in its correct location:     remainingAmount = remainingAmount % 100;
Move this line in its place:     int numberOfOneDollars = remainingAmount / 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 9 to 8:     int numberOfOneDollars = remainingAmount / 100;
37. Reordered from line 11 to 10:     int numberOfQuarters = remainingAmount / 25;
38. Reordered from line 13 to 12:     int numberOfDimes = remainingAmount / 10;
39. Reordered from line 15 to 14:     int numberOfNickels = remainingAmount / 5;
Submit Parsons Solution clicked @ 1489430406477
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class ComputeChange {
3. Moved from problem to solution at line 1
4. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 6 (2 moves):     double amount = input.nextDouble();
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
Line 7 (1 moves):     int remainingAmount = (int)(amount * 100);
16. Moved from problem to solution at line 7
Line 8 (2 moves):     int numberOfOneDollars = remainingAmount / 100;
23. Moved from problem to solution at line 9
36. Reordered from line 9 to 8
Line 9 (2 moves):     remainingAmount = remainingAmount % 100;
19. Moved from problem to solution at line 9
20. Reordered from line 9 to 8
Line 10 (2 moves):     int numberOfQuarters = remainingAmount / 25;
24. Moved from problem to solution at line 11
37. Reordered from line 11 to 10
Line 11 (1 moves):     remainingAmount = remainingAmount % 25;
21. Moved from problem to solution at line 9
Line 12 (3 moves):     int numberOfDimes = remainingAmount / 10;
25. Moved from problem to solution at line 12
26. Reordered from line 12 to 13
38. Reordered from line 13 to 12
Line 13 (1 moves):     remainingAmount = remainingAmount % 10;
18. Moved from problem to solution at line 8
Line 14 (3 moves):     int numberOfNickels = remainingAmount / 5;
27. Moved from problem to solution at line 14
28. Reordered from line 14 to 15
39. Reordered from line 15 to 14
Line 15 (1 moves):     remainingAmount = remainingAmount % 5;
22. Moved from problem to solution at line 11
Line 16 (2 moves):     int numberOfPennies = remainingAmount;
29. Moved from problem to solution at line 15
30. Reordered from line 15 to 16
Line 17 (1 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
17. Moved from problem to solution at line 8
Line 18 (1 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
31. Moved from problem to solution at line 18
Line 19 (1 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
32. Moved from problem to solution at line 19
Line 20 (1 moves):     System.out.println("    " + numberOfDimes + " dimes");
33. Moved from problem to solution at line 20
Line 21 (1 moves):     System.out.println("    " + numberOfNickels + " nickels");
34. Moved from problem to solution at line 21
Line 22 (1 moves):     System.out.println("    " + numberOfPennies + " pennies");
35. Moved from problem to solution at line 22
Line 23 (2 moves):  }}
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
Line 2 (33) (1 moves): Public class ComputeChange {
2. Moved from problem to trash at line 0
Line 16 (22) (1 moves):     Int numberOfPennies = remainingAmount;
15. Moved from problem to trash at line 1
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1489430420077
Time spent on this problem: 643 seconds
<HR>
