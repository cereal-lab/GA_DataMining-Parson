Problem No. 3
Using Template # 100
The Problem:
public static void main(String[] args) {
else if (s1 == s2) // This line should be written before Line X
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
System.out.println("Neither same content nor same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
String s1 = "Hello World", s2 = "Hello Worlds";
}}
else if (s1.compareTo(s2) == 0) // This is Line X
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " are same object");
public class StringOperation {
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: 	}}
2. Moved from problem to solution at line 1: public class StringOperation {
3. Moved from problem to solution at line 2: 	public static void main(String[] args) {
*  Indented line 2: 	public static void main(String[] args) {
4. Moved from problem to solution at line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
*  Indented line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 4: 		if (s1.equals(s2))
*  Indented line 4: 		if (s1.equals(s2))
6. Moved from problem to solution at line 5: 			System.out.println(s1 + " and " +s2 + " are same object");
*  Indented line 5: 			System.out.println(s1 + " and " +s2 + " are same object");
7. Moved from problem to solution at line 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
*  Indented line 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
*  Indented line 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
8. Moved from problem to solution at line 6: 		else if (s1 == s2) // This line should be written before Line X
9. Reordered from line 6 to 7: 		else if (s1 == s2) // This line should be written before Line X
10. Reordered from line 7 to 6: 		else if (s1 == s2) // This line should be written before Line X
11. Moved from problem to solution at line 8: 			System.out.println("Neither same content nor same object");
*  Indented line 8: 			System.out.println("Neither same content nor same object");
12. Moved from problem to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
13. Moved from solution to problem at line 10: 			System.out.println("Neither same content nor same object");
14. Moved from problem to solution at line 6: 		else
*  Indented line 6: 		else
15. Moved from problem to solution at line 7: 			System.out.println("Neither same content nor same object");
16. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
17. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1489086432933
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Reordered from line 10 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489086457411
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Moved from trash to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
20. Reordered from line 6 to 12: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
21. Reordered from line 12 to 11: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489086478926
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " are same object");
Move this line in its place: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 9 to 6: 		else if (s1 == s2) // This line should be written before Line X
23. Reordered from line 10 to 7: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1489086494732
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 8 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
25. Reordered from line 11 to 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489086509364
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
2. Moved from problem to solution at line 1
Line 2 (2 moves): 	public static void main(String[] args) {
3. Moved from problem to solution at line 2
*  Indented line 2
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
4. Moved from problem to solution at line 3
*  Indented line 3
Line 4 (2 moves): 		if (s1.equals(s2))
5. Moved from problem to solution at line 4
*  Indented line 4
Line 5 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
17. Moved from problem to trash at line 1
19. Moved from trash to solution at line 5
Line 6 (4 moves): 		else if (s1 == s2) // This line should be written before Line X
8. Moved from problem to solution at line 6
9. Reordered from line 6 to 7
10. Reordered from line 7 to 6
22. Reordered from line 9 to 6
Line 7 (3 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
6. Moved from problem to solution at line 5
*  Indented line 5
24. Reordered from line 8 to 7
Line 8 (4 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
7. Moved from problem to solution at line 6
*  Indented line 6
*  Indented line 6
23. Reordered from line 10 to 7
Line 9 (5 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
12. Moved from problem to solution at line 8
18. Reordered from line 10 to 5
20. Reordered from line 6 to 12
21. Reordered from line 12 to 11
25. Reordered from line 11 to 9
Line 10 (2 moves): 		else
14. Moved from problem to solution at line 6
*  Indented line 6
Line 11 (4 moves): 			System.out.println("Neither same content nor same object");
11. Moved from problem to solution at line 8
*  Indented line 8
13. Moved from solution to problem at line 10
15. Moved from problem to solution at line 7
Line 12 (1 moves): 	}}
1. Moved from problem to solution at line 0
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
16. Moved from problem to trash at line 0
Your Grade:
You took 25 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1489086571978
Time spent on this problem: 485 seconds
<HR>
