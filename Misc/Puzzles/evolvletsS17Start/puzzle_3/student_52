Problem No. 3
Using Template # 100
The Problem:
public static void main(String[] args) {
else
else if (s1.compareTo(s2) == 0) // This is Line X
System.out.println("Neither same content nor same object");
System.out.println(s1 + " and " +s2 + " are same object");
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
else if (s1 == s2) // This line should be written before Line X
String s1 = "Hello World", s2 = "Hello Worlds";
public class StringOperation {
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
if (s1.equals(s2))
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class StringOperation {
2. Moved from problem to solution at line 1: 	}}
3. Reordered from line 1 to 2: 	}}
4. Moved from problem to solution at line 2: 	public static void main(String[] args) {
5. Moved from problem to solution at line 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
6. Moved from problem to trash at line 0: 		if (s1.equals(s2))
7. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
8. Moved from problem to trash at line 2: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
9. Moved from problem to trash at line 2: 		else if (s1 == s2) // This line should be written before Line X
10. Moved from problem to trash at line 2: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
11. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " are same object");
12. Moved from problem to trash at line 1: 			System.out.println("Neither same content nor same object");
13. Moved from problem to trash at line 1: 		else if (s1.compareTo(s2) == 0) // This is Line X
14. Moved from problem to trash at line 2: 		else
Submit Parsons Solution clicked @ 1489361489342
This line is not in its correct location: 	}}
Insert this line in its place: 		if (s1.equals(s2))
Sorry, your solution is not yet complete and correct.
Please correct your answer
15. Moved from trash to solution at line 4: 		if (s1.equals(s2))
Submit Parsons Solution clicked @ 1489361501890
This line is not in its correct location: 	}}
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
16. Moved from trash to solution at line 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489361512397
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
17. Moved from solution to trash at line 5: 	}}
Submit Parsons Solution clicked @ 1489361517825
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Moved from solution to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
19. Moved from trash to solution at line 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1489361531298
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 4 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1489361534362
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 5 to 3: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
22. Reordered from line 3 to 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1489361542097
Sorry, that line has a bug
Delete this line: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from solution to trash at line 3: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
24. Moved from trash to solution at line 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1489361551461
This line is not in its correct location: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Move this line in its place: 		if (s1.equals(s2))
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 4 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
Submit Parsons Solution clicked @ 1489361555033
You have not yet identified all the lines. Insert: 		else if (s1 == s2) // This line should be written before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 5: 		else if (s1 == s2) // This line should be written before Line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
27. Reordered from line 5 to 6: 		else if (s1 == s2) // This line should be written before Line X
Submit Parsons Solution clicked @ 1489361565639
You have not yet identified all the lines. Insert: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 6: 			System.out.println(s1 + " and " +s2 + " are same object");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
29. Reordered from line 6 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
Submit Parsons Solution clicked @ 1489361573147
You have not yet identified all the lines. Insert: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 7: 		else if (s1.compareTo(s2) == 0) // This is Line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489361585895
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Move this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 7 to 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1489361592105
You have not yet identified all the lines. Insert: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Moved from trash to solution at line 8: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
33. Reordered from line 8 to 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489361600313
You have not yet identified all the lines. Insert: 		else
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489361607021
You have not yet identified all the lines. Insert: 		else
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 9: 		else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
35. Reordered from line 9 to 10: 		else
36. Moved from trash to solution at line 10: 			System.out.println("Neither same content nor same object");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
37. Reordered from line 10 to 11: 			System.out.println("Neither same content nor same object");
38. Moved from trash to solution at line 11: 	}}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
39. Reordered from line 11 to 12: 	}}
Submit Parsons Solution clicked @ 1489361626066
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
1. Moved from problem to solution at line 0
Line 2 (1 moves): 	public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 3 (1 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 3
Line 4 (2 moves): 		if (s1.equals(s2))
6. Moved from problem to trash at line 0
15. Moved from trash to solution at line 4
Line 5 (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Moved from problem to trash at line 2
24. Moved from trash to solution at line 4
25. Reordered from line 4 to 5
Line 6 (3 moves): 		else if (s1 == s2) // This line should be written before Line X
9. Moved from problem to trash at line 2
26. Moved from trash to solution at line 5
27. Reordered from line 5 to 6
Line 7 (3 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
11. Moved from problem to trash at line 1
28. Moved from trash to solution at line 6
29. Reordered from line 6 to 7
Line 8 (3 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
13. Moved from problem to trash at line 1
30. Moved from trash to solution at line 7
31. Reordered from line 7 to 8
Line 9 (5 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
10. Moved from problem to trash at line 2
16. Moved from trash to solution at line 5
18. Moved from solution to trash at line 1
32. Moved from trash to solution at line 8
33. Reordered from line 8 to 9
Line 10 (3 moves): 		else
14. Moved from problem to trash at line 2
34. Moved from trash to solution at line 9
35. Reordered from line 9 to 10
Line 11 (3 moves): 			System.out.println("Neither same content nor same object");
12. Moved from problem to trash at line 1
36. Moved from trash to solution at line 10
37. Reordered from line 10 to 11
Line 12 (5 moves): 	}}
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
17. Moved from solution to trash at line 5
38. Moved from trash to solution at line 11
39. Reordered from line 11 to 12
Line 5 (16) (6 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
7. Moved from problem to trash at line 1
19. Moved from trash to solution at line 4
20. Reordered from line 4 to 5
21. Reordered from line 5 to 3
22. Reordered from line 3 to 4
23. Moved from solution to trash at line 3
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1489361638186
Time spent on this problem: 296 seconds
<HR>
