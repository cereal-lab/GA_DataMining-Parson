Problem No. 3
Using Template # 100
The Problem:
}}
while (number1 + number2 != answer) {
public class RepeatAdditionQuiz {
System.out.println("You got it!");
System.out.print("Wrong answer. Try again. What is "  + number1 + " + " + number2 + "? ");
int answer = input.nextInt();
System.out.print( "What is " + number1 + " + " + number2 + "? ");
import java.util.Scanner;
number1 = (int)(Math.random() * 10);  number2 = (int)(Math.random() * 10);  // This is line X
int number1 number2;
Int number1, number2;
int number1, number2;
public static void main(String[] args) {
Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
answer = input.nextInt();}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0:   }}
2. Moved from problem to solution at line 1: public class RepeatAdditionQuiz {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to trash at line 0:     Int number1, number2;
6. Moved from problem to trash at line 1:     int number1 number2;
7. Moved from problem to solution at line 4:     int number1, number2;
8. Moved from problem to solution at line 5:     number1 = (int)(Math.random() * 10);  number2 = (int)(Math.random() * 10);  // This is line X
9. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
10. Moved from problem to solution at line 7:     System.out.print( "What is " + number1 + " + " + number2 + "? ");
11. Moved from problem to solution at line 8:     int answer = input.nextInt();
12. Moved from problem to solution at line 9:     while (number1 + number2 != answer) {
13. Moved from problem to solution at line 10:       System.out.print("Wrong answer. Try again. What is "  + number1 + " + " + number2 + "? ");
14. Moved from problem to solution at line 11:       answer = input.nextInt();}
15. Moved from problem to solution at line 12:     System.out.println("You got it!");
Submit Parsons Solution clicked @ 1489262093624
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class RepeatAdditionQuiz {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (1 moves):     int number1, number2;
7. Moved from problem to solution at line 4
Line 5 (1 moves):     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
Line 6 (1 moves):     number1 = (int)(Math.random() * 10);  number2 = (int)(Math.random() * 10);  // This is line X
8. Moved from problem to solution at line 5
Line 7 (1 moves):     System.out.print( "What is " + number1 + " + " + number2 + "? ");
10. Moved from problem to solution at line 7
Line 8 (1 moves):     int answer = input.nextInt();
11. Moved from problem to solution at line 8
Line 9 (1 moves):     while (number1 + number2 != answer) {
12. Moved from problem to solution at line 9
Line 10 (1 moves):       System.out.print("Wrong answer. Try again. What is "  + number1 + " + " + number2 + "? ");
13. Moved from problem to solution at line 10
Line 11 (1 moves):       answer = input.nextInt();}
14. Moved from problem to solution at line 11
Line 12 (1 moves):     System.out.println("You got it!");
15. Moved from problem to solution at line 12
Line 13 (1 moves):   }}
1. Moved from problem to solution at line 0
Line 4 (22) (1 moves):     Int number1, number2;
5. Moved from problem to trash at line 0
Line 4 (30) (1 moves):     int number1 number2;
6. Moved from problem to trash at line 1
Your Grade:
You took 15 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489262105178
Time spent on this problem: 342 seconds
<HR>
