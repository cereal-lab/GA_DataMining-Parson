Problem No. 3
Using Template # 100
The Problem:
System.out.print(i + " | ");
System.out.println();}
}}
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.print("    ");
public class MultiplicationTable {
for (int j = 1; j <= 9; j++) {
System.out.printf("%4d", i * j);}
public static void Main(String[] args) {
public static void main(String[] args) {
System.out.println("           Multiplication Table");
System.out.println("\n-----------------------------------------");
for (int i = 1; i <= 9; i++) {
System.out.print("   " + j);
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: public class MultiplicationTable {
4. Moved from problem to trash at line 0:   public static void Main(String[] args) {
5. Moved from problem to solution at line 2:     System.out.print("    ");
6. Reordered from line 3 to 2:   public static void main(String[] args) {
7. Moved from problem to solution at line 3:     System.out.println("\n-----------------------------------------");
8. Reordered from line 4 to 3:     System.out.print("    ");
9. Moved from problem to solution at line 4:     System.out.println("           Multiplication Table");
10. Moved from problem to solution at line 5:     for (int i = 1; i <= 9; i++) {
11. Moved from problem to trash at line 1:       for (int j = 1; j <= 9; j++) {
12. Moved from problem to trash at line 2:     for (int j = 1; j <= 9; j++)
13. Moved from problem to trash at line 3:    for for (int j = 1; j < 9; j++)
14. Moved from problem to trash at line 4:       System.out.println();}
15. Moved from problem to trash at line 5:       System.out.print(i + " | ");
16. Moved from problem to solution at line 6:         System.out.printf("%4d", i * j);}
17. Reordered from line 7 to 6:     System.out.println("\n-----------------------------------------");
18. Moved from problem to solution at line 7:       System.out.print("   " + j);
19. Reordered from line 8 to 7:         System.out.printf("%4d", i * j);}
20. Moved from problem to solution at line 8: }}
21. Reordered from line 9 to 8:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1489254299385
This line is not in its correct location:     System.out.print("    ");
Move this line in its place:     System.out.println("           Multiplication Table");
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 4 to 3:     System.out.println("           Multiplication Table");
23. Moved from solution to trash at line 6:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489254313735
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from trash to solution at line 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489254322032
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from trash to solution at line 5:     for (int j = 1; j <= 9; j++)
26. Moved from solution to trash at line 5:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1489254349543
This line is not in its correct location:     System.out.println("\n-----------------------------------------");
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 8 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1489254358815
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 8:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1489254369496
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1489254376456
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:       for (int j = 1; j <= 9; j++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 10:       for (int j = 1; j <= 9; j++) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489254385223
This line is not in its correct location: }}
Insert this line in its place:       System.out.println();}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1489254394895
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
6. Reordered from line 3 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
9. Moved from problem to solution at line 4
22. Reordered from line 4 to 3
Line 4 (4 moves):     System.out.print("    ");
5. Moved from problem to solution at line 2
8. Reordered from line 4 to 3
23. Moved from solution to trash at line 6
24. Moved from trash to solution at line 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
12. Moved from problem to trash at line 2
25. Moved from trash to solution at line 5
Line 6 (3 moves):       System.out.print("   " + j);
18. Moved from problem to solution at line 7
21. Reordered from line 9 to 8
27. Reordered from line 8 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
7. Moved from problem to solution at line 3
17. Reordered from line 7 to 6
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
10. Moved from problem to solution at line 5
26. Moved from solution to trash at line 5
28. Moved from trash to solution at line 8
Line 9 (2 moves):       System.out.print(i + " | ");
15. Moved from problem to trash at line 5
29. Moved from trash to solution at line 9
Line 10 (2 moves):       for (int j = 1; j <= 9; j++) {
11. Moved from problem to trash at line 1
30. Moved from trash to solution at line 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
16. Moved from problem to solution at line 6
19. Reordered from line 8 to 7
Line 12 (2 moves):       System.out.println();}
14. Moved from problem to trash at line 4
31. Moved from trash to solution at line 12
Line 13 (1 moves): }}
20. Moved from problem to solution at line 8
Line 2 (3) (1 moves):   public static void Main(String[] args) {
4. Moved from problem to trash at line 0
Line 5 (29) (1 moves):    for for (int j = 1; j < 9; j++)
13. Moved from problem to trash at line 3
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489254408830
Time spent on this problem: 362 seconds
<HR>
