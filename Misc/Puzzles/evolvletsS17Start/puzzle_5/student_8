Problem No. 5
Using Template # 100
The Problem:
}}
import java.util.Scanner;
public static void main(String[] args) {
guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
System.out.println("Yes, the number is " + number);
int guess, number;
int guess number;
public class GuessNumberOneTime {
if (guess == number)
else
System.out.println("Your guess is too low");
else if (guess > number)
System.out.println("Your guess is too high");
int guess = input.nextInt();                // This is line X
Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 16 lines.
Re-assemble them with 17 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class GuessNumberOneTime {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
*  Indented line 2: public class GuessNumberOneTime {
*  Indented line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
6. Moved from problem to solution at line 5:     int guess = input.nextInt();                // This is line X
7. Moved from problem to trash at line 0:     int guess number;
8. Moved from problem to trash at line 1:     int guess, number;
9. Moved from trash to solution at line 4:     int guess number;
10. Moved from problem to solution at line 7: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
11. Moved from problem to solution at line 8:       System.out.println("Yes, the number is " + number);
12. Moved from problem to solution at line 8:     if (guess == number)
13. Moved from problem to solution at line 10:     else
14. Moved from problem to solution at line 11:       System.out.println("Your guess is too low");
15. Moved from problem to solution at line 12:     else if (guess > number)
16. Moved from problem to solution at line 13:       System.out.println("Your guess is too high");
17. Reordered from line 12 to 10:     else if (guess > number)
18. Reordered from line 13 to 11:       System.out.println("Your guess is too high");
19. Moved from problem to trash at line 1: 	guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
20. Reordered from line 7 to 4: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
21. Reordered from line 5 to 4:     int guess number;
Submit Parsons Solution clicked @ 1489001166848
Sorry, that line has a bug
Delete this line:     int guess number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Moved from solution to trash at line 2:     int guess number;
Submit Parsons Solution clicked @ 1489001181675
This line is not in its correct location: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Insert this line in its place:     int guess, number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from trash to solution at line 4:     int guess number;
Submit Parsons Solution clicked @ 1489001193852
Sorry, that line has a bug
Delete this line:     int guess number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from solution to trash at line 2:     int guess number;
Submit Parsons Solution clicked @ 1489001202232
This line is not in its correct location: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Insert this line in its place:     int guess, number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from solution to trash at line 2: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
26. Moved from trash to solution at line 4:     int guess number;
Submit Parsons Solution clicked @ 1489001210730
Sorry, that line has a bug
Delete this line:     int guess number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from solution to trash at line 3:     int guess number;
Submit Parsons Solution clicked @ 1489001215970
This line is not in its correct location:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
Insert this line in its place:     int guess, number;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Moved from trash to solution at line 4:     int guess, number;
Submit Parsons Solution clicked @ 1489001227856
This line is not in its correct location:     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
Insert this line in its place: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 5: 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
Submit Parsons Solution clicked @ 1489001245740
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (2 moves): public class GuessNumberOneTime {
3. Moved from problem to solution at line 2
*  Indented line 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
*  Indented line 3
Line 4 (2 moves):     int guess, number;
8. Moved from problem to trash at line 1
28. Moved from trash to solution at line 4
Line 5 (4 moves): 	guess = -1; number = (int)(Math.random() * 101); // Generates a random number between 0 and 100
10. Moved from problem to solution at line 7
20. Reordered from line 7 to 4
25. Moved from solution to trash at line 2
29. Moved from trash to solution at line 5
Line 6 (1 moves):     Scanner input = new Scanner(System.in);    //This line should immediately be placed before Line X
5. Moved from problem to solution at line 4
Line 7 (1 moves):     int guess = input.nextInt();                // This is line X
6. Moved from problem to solution at line 5
Line 8 (1 moves):     if (guess == number)
12. Moved from problem to solution at line 8
Line 9 (1 moves):       System.out.println("Yes, the number is " + number);
11. Moved from problem to solution at line 8
Line 10 (2 moves):     else if (guess > number)
15. Moved from problem to solution at line 12
17. Reordered from line 12 to 10
Line 11 (2 moves):       System.out.println("Your guess is too high");
16. Moved from problem to solution at line 13
18. Reordered from line 13 to 11
Line 12 (1 moves):     else
13. Moved from problem to solution at line 10
Line 13 (1 moves):       System.out.println("Your guess is too low");
14. Moved from problem to solution at line 11
Line 14 (1 moves): }}
1. Moved from problem to solution at line 0
Line 5 (16) (1 moves): 	guess = -1; number = (int)(Math.random() * 101) // Generates a random number between 0 and 100
19. Moved from problem to trash at line 1
Line 4 (30) (8 moves):     int guess number;
7. Moved from problem to trash at line 0
9. Moved from trash to solution at line 4
21. Reordered from line 5 to 4
22. Moved from solution to trash at line 2
23. Moved from trash to solution at line 4
24. Moved from solution to trash at line 2
26. Moved from trash to solution at line 4
27. Moved from solution to trash at line 3
Your Grade:
You took 29 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1489001247999
Time spent on this problem: 299 seconds
<HR>
