Problem No. 1
Using Template # 100
The Problem:
low++; high--;
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
else
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
}
public class Palindrome {
System.out.println(s + " is not a palindrome");
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
break;}
isPalindrome = false;
if (isPalindrome)
while (low < high {
while (low < high) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low++; high--;
int low, high, isPalindrome;          // This is line Y
if (s.charAt(low) != s.charAt(high)) {
else
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
}
public class Palindrome {
System.out.println(s + " is not a palindrome");
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
break;}
isPalindrome = false;
if (isPalindrome)
while (low < high {
while (low < high) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:         isPalindrome = false;
2. Moved from solution to problem at line 10:         isPalindrome = false;
3. Moved from problem to solution at line 0:     int low, high, isPalindrome;          // This is line Y
4. Moved from problem to solution at line 1:       if (s.charAt(low) != s.charAt(high)) {
5. Moved from problem to solution at line 2:     else
6. Reordered from line 3 to 1:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 3:     while (low < high) {
8. Reordered from line 3 to 4:     while (low < high) {
9. Moved from problem to solution at line 4:     while (low < high {
10. Moved from problem to solution at line 3:     if (isPalindrome)
11. Moved from problem to solution at line 6:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489430467391
Please clear all the lines from the left panel before submitting your answer.
12. Moved from problem to solution at line 7:   public static void main(String[] args) {
13. Moved from problem to solution at line 8:         break;}
14. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
15. Moved from problem to solution at line 10:       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 5:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 7:       System.out.println(s + " is a palindrome");
18. Moved from problem to solution at line 12:     String s = input.nextLine();          // This is line X
19. Moved from problem to solution at line 14: public class Palindrome {
20. Moved from problem to solution at line 15:     }}
21. Moved from problem to solution at line 15:       }
22. Moved from problem to solution at line 11:     low= 1; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 7:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
24. Moved from problem to solution at line 11: import java.util.Scanner;
25. Moved from problem to solution at line 1:       low++; high--;
Submit Parsons Solution clicked @ 1489430498543
This line is not in its correct location:       low++; high--;
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489430503215
This line is not in its correct location:       low++; high--;
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 12 to 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1489430527121
This line is not in its correct location:       low++; high--;
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 2 to 4:       low++; high--;
Submit Parsons Solution clicked @ 1489430543366
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 8 to 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489430565737
This line is not in its correct location:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 18 to 2: public class Palindrome {
Submit Parsons Solution clicked @ 1489430586781
This line is not in its correct location:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Move this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 15 to 3:     low= 1; high = s.length() - 1; isPalindrome = true;
31. Reordered from line 5 to 4:     int low, high, isPalindrome;          // This is line Y
32. Reordered from line 15 to 3:   public static void main(String[] args) {
33. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
34. Reordered from line 17 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489430627532
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 13 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489430649845
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Outdented line 7:     low= 1; high = s.length() - 1; isPalindrome = true;
36. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489430667668
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489430752333
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from trash to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489430758570
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489430766889
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 8 to 12:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489430776567
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Moved from trash to solution at line 20:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489430782719
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 20 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489430790314
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Explain Parsons Solution clicked @ 1489430810155
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
24. Moved from problem to solution at line 11
26. Reordered from line 12 to 1
Line 2 (2 moves): public class Palindrome {
19. Moved from problem to solution at line 14
29. Reordered from line 18 to 2
Line 3 (2 moves):   public static void main(String[] args) {
12. Moved from problem to solution at line 7
32. Reordered from line 15 to 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
14. Moved from problem to solution at line 5
28. Reordered from line 8 to 2
33. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
23. Moved from problem to solution at line 7
35. Reordered from line 13 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
18. Moved from problem to solution at line 12
34. Reordered from line 17 to 5
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
3. Moved from problem to solution at line 0
6. Reordered from line 3 to 1
31. Reordered from line 5 to 4
Line 13 (2 moves):       low++; high--;
25. Moved from problem to solution at line 1
27. Reordered from line 2 to 4
Line 15 (1 moves):     if (isPalindrome)
10. Moved from problem to solution at line 3
Line 17 (1 moves):     else
5. Moved from problem to solution at line 2
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 5
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
4. Moved from problem to solution at line 1
39. Reordered from line 8 to 12
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 7
Line 9 (5) (1 moves):     while (low < high {
9. Moved from problem to solution at line 4
Line 11 (3 moves):         isPalindrome = false;
1. Moved from problem to solution at line 0
2. Moved from solution to problem at line 10
11. Moved from problem to solution at line 6
Line 12 (1 moves):         break;}
13. Moved from problem to solution at line 8
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
15. Moved from problem to solution at line 10
Line 14 (1 moves):       }
21. Moved from problem to solution at line 15
Line 19 (1 moves):     }}
20. Moved from problem to solution at line 15
Line 9 (2 moves):     while (low < high) {
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 8 (7) (9 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 11
30. Reordered from line 15 to 3
*  Outdented line 7
36. Moved from solution to trash at line 0
37. Moved from trash to solution at line 8
38. Moved from solution to trash at line 0
40. Moved from trash to solution at line 20
41. Reordered from line 20 to 8
42. Moved from solution to trash at line 0
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low++; high--;
if (isPalindrome)
else
low= 0; high = s.length() - 1; isPalindrome = true;
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
while (low < high {
isPalindrome = false;
break;}
System.out.println(s + " is not a palindrome");
}
}}
while (low < high) {
The lines you deleted so far are as follows:
low= 1; high = s.length() - 1; isPalindrome = true;
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489430828185
Time spent on this problem: 470 seconds
<HR>
