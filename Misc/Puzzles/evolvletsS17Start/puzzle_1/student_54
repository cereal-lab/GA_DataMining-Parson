Problem No. 1
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
import java.util.Scanner;
int low, high, isPalindrome;          // This is line Y
}
low++; high--;
if (isPalindrome)
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
System.out.println(s + " is not a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
while (low < high) {
while (low < high {
}}
break;}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
import java.util.Scanner;
int low, high, isPalindrome;          // This is line Y
}
low++; high--;
if (isPalindrome)
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
System.out.println(s + " is not a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
while (low < high) {
while (low < high {
}}
break;}
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
11. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
13. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
14. Moved from problem to solution at line 7:         isPalindrome = false;
15. Reordered from line 7 to 8:         isPalindrome = false;
16. Moved from problem to solution at line 8:     if (isPalindrome)
17. Reordered from line 8 to 9:     if (isPalindrome)
18. Moved from problem to solution at line 9:       System.out.println(s + " is not a palindrome");
19. Reordered from line 9 to 10:       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 12:     while (low < high) {
23. Reordered from line 12 to 13:     while (low < high) {
24. Moved from problem to solution at line 13:         break;}
25. Moved from problem to solution at line 14:       if (s.charAt(low) != s.charAt(high)) {
26. Moved from problem to solution at line 15:       low++; high--;
27. Reordered from line 15 to 16:       low++; high--;
28. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
29. Reordered from line 16 to 17:       System.out.println(s + " is a palindrome");
30. Moved from problem to solution at line 17:       }
31. Reordered from line 17 to 18:       }
32. Moved from problem to trash at line 0:     while (low < high {
33. Moved from problem to trash at line 1:     }}
34. Moved from problem to trash at line 2:     else
Submit Parsons Solution clicked @ 1489260485539
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from solution to problem at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
36. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489260532770
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 9 to 13:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489260552484
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 9 to 13:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489260570918
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 9 to 17:       System.out.println(s + " is not a palindrome");
40. Reordered from line 16 to 17:       }
Submit Parsons Solution clicked @ 1489260592952
This line is not in its correct location:         break;}
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 9 to 13:         break;}
Submit Parsons Solution clicked @ 1489260612344
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 12 to 9:     while (low < high) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489260643978
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1489260657981
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489260667038
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 17 to 15:       }
46. Reordered from line 15 to 14:       }
Submit Parsons Solution clicked @ 1489260684583
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from trash to solution at line 17:     else
Submit Parsons Solution clicked @ 1489260700255
You have not yet identified all the lines. Insert:     }}
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Moved from trash to solution at line 18:     }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
49. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1489260713210
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 9
Line 9 (3 moves):     while (low < high) {
22. Moved from problem to solution at line 12
23. Reordered from line 12 to 13
42. Reordered from line 12 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
25. Moved from problem to solution at line 14
Line 11 (3 moves):         isPalindrome = false;
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
37. Reordered from line 9 to 13
Line 12 (3 moves):         break;}
24. Moved from problem to solution at line 13
41. Reordered from line 9 to 13
43. Reordered from line 13 to 12
Line 13 (3 moves):       low++; high--;
26. Moved from problem to solution at line 15
27. Reordered from line 15 to 16
44. Reordered from line 14 to 13
Line 14 (5 moves):       }
30. Moved from problem to solution at line 17
31. Reordered from line 17 to 18
40. Reordered from line 16 to 17
45. Reordered from line 17 to 15
46. Reordered from line 15 to 14
Line 15 (3 moves):     if (isPalindrome)
16. Moved from problem to solution at line 8
17. Reordered from line 8 to 9
38. Reordered from line 9 to 13
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
28. Moved from problem to solution at line 16
29. Reordered from line 16 to 17
Line 17 (2 moves):     else
34. Moved from problem to trash at line 2
47. Moved from trash to solution at line 17
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 9
19. Reordered from line 9 to 10
39. Reordered from line 9 to 17
Line 19 (3 moves):     }}
33. Moved from problem to trash at line 1
48. Moved from trash to solution at line 18
49. Reordered from line 18 to 19
Line 9 (5) (1 moves):     while (low < high {
32. Moved from problem to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 8
35. Moved from solution to problem at line 8
36. Moved from problem to trash at line 2
Your Grade:
You took 49 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489260758413
Time spent on this problem: 757 seconds
<HR>
