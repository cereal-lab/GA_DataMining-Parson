Problem No. 1
Using Template # 100
The Problem:
int remainingAmount = (int)(amount * 100);
System.out.println("    " + numberOfPennies + " pennies");
remainingAmount = remainingAmount % 100;
System.out.println("    " + numberOfOneDollars + " dollars");
System.out.println("    " + numberOfQuarters + " quarters ");
public static void main(String[] args) {
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
remainingAmount = remainingAmount % 10;
remainingAmount = remainingAmount % 5;
int numberOfNickels = remainingAmount / 5;
Scanner input = new Scanner(System.in) //This line should be placed before Line X
Scanner input = new Scanner(System.in); //This line should be placed before Line X
public class ComputeChange {
public Class ComputeChange {
int numberOfOneDollars = remainingAmount / 100;
int numberOfPennies = remainingAmount;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
remainingAmount = remainingAmount % 25;
import java.util.Scanner;
int numberOfQuarters = remainingAmount / 25;
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfDimes + " dimes");
}}
double amount = input.nextDouble();
System.out.println("    " + numberOfNickels + " nickels");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
Using Template # 100
The Problem:
int remainingAmount = (int)(amount * 100);
System.out.println("    " + numberOfPennies + " pennies");
remainingAmount = remainingAmount % 100;
System.out.println("    " + numberOfOneDollars + " dollars");
System.out.println("    " + numberOfQuarters + " quarters ");
public static void main(String[] args) {
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
remainingAmount = remainingAmount % 10;
remainingAmount = remainingAmount % 5;
int numberOfNickels = remainingAmount / 5;
Scanner input = new Scanner(System.in) //This line should be placed before Line X
Scanner input = new Scanner(System.in); //This line should be placed before Line X
public class ComputeChange {
public Class ComputeChange {
int numberOfOneDollars = remainingAmount / 100;
int numberOfPennies = remainingAmount;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
remainingAmount = remainingAmount % 25;
import java.util.Scanner;
int numberOfQuarters = remainingAmount / 25;
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfDimes + " dimes");
}}
double amount = input.nextDouble();
System.out.println("    " + numberOfNickels + " nickels");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class ComputeChange {
3. Reordered from line 1 to 2: public class ComputeChange {
4. Moved from problem to trash at line 0: public Class ComputeChange {
5. Moved from problem to solution at line 2:   public static void main(String[] args) {
6. Reordered from line 2 to 3:   public static void main(String[] args) {
7. Moved from problem to solution at line 3:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
8. Reordered from line 3 to 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
9. Moved from problem to solution at line 4:     int numberOfPennies = remainingAmount;
10. Reordered from line 4 to 5:     int numberOfPennies = remainingAmount;
11. Moved from problem to solution at line 5:     int numberOfOneDollars = remainingAmount / 100;
12. Moved from problem to solution at line 6:     remainingAmount = remainingAmount % 100;
13. Reordered from line 6 to 7:     remainingAmount = remainingAmount % 100;
14. Moved from problem to solution at line 5:     int remainingAmount = (int)(amount * 100);
15. Moved from problem to solution at line 8:     System.out.println("    " + numberOfPennies + " pennies");
16. Moved from problem to solution at line 9:     System.out.println("    " + numberOfOneDollars + " dollars");
17. Moved from problem to solution at line 10:     System.out.println("    " + numberOfQuarters + " quarters ");
18. Moved from problem to solution at line 11:     int numberOfQuarters = remainingAmount / 25;
19. Moved from problem to solution at line 12:     int numberOfDimes = remainingAmount / 10;
20. Moved from problem to solution at line 13:     System.out.println("    " + numberOfDimes + " dimes");
21. Reordered from line 13 to 10:     System.out.println("    " + numberOfDimes + " dimes");
22. Reordered from line 11 to 10:     System.out.println("    " + numberOfQuarters + " quarters ");
23. Reordered from line 12 to 11:     int numberOfQuarters = remainingAmount / 25;
24. Reordered from line 12 to 10:     System.out.println("    " + numberOfDimes + " dimes");
25. Reordered from line 9 to 12:     System.out.println("    " + numberOfOneDollars + " dollars");
26. Reordered from line 12 to 11:     System.out.println("    " + numberOfOneDollars + " dollars");
27. Moved from problem to solution at line 14:     Scanner input = new Scanner(System.in) //This line should be placed before Line X
28. Reordered from line 14 to 15:     Scanner input = new Scanner(System.in) //This line should be placed before Line X
29. Moved from problem to solution at line 15:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
30. Moved from problem to solution at line 16:     remainingAmount = remainingAmount % 10;
31. Reordered from line 16 to 17:     remainingAmount = remainingAmount % 10;
32. Moved from problem to solution at line 17:     remainingAmount = remainingAmount % 5;
33. Moved from problem to solution at line 18:     int numberOfNickels = remainingAmount / 5;
34. Moved from problem to solution at line 19:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
35. Reordered from line 19 to 20:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
36. Moved from problem to solution at line 20:     remainingAmount = remainingAmount % 25;
*  Indented line 20:     remainingAmount = remainingAmount % 25;
*  Outdented line 20:     remainingAmount = remainingAmount % 25;
*  Indented line 20:     remainingAmount = remainingAmount % 25;
37. Reordered from line 20 to 21:     remainingAmount = remainingAmount % 25;
*  Outdented line 21:     remainingAmount = remainingAmount % 25;
38. Moved from problem to solution at line 21:     double amount = input.nextDouble();
39. Moved from problem to solution at line 22:     System.out.println("    " + numberOfNickels + " nickels");
40. Moved from problem to solution at line 23:  }}
41. Reordered from line 23 to 24:  }}
Submit Parsons Solution clicked @ 1489462049736
This line is not in its correct location:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 15 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
Submit Parsons Solution clicked @ 1489462067773
This line is not in its correct location:     int remainingAmount = (int)(amount * 100);
Move this line in its place:     double amount = input.nextDouble();
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 1:     Scanner input = new Scanner(System.in) //This line should be placed before Line X
Submit Parsons Solution clicked @ 1489462139416
This line is not in its correct location:     int remainingAmount = (int)(amount * 100);
Move this line in its place:     double amount = input.nextDouble();
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 20 to 6:     double amount = input.nextDouble();
Submit Parsons Solution clicked @ 1489462149351
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 19 to 9:     remainingAmount = remainingAmount % 10;
Submit Parsons Solution clicked @ 1489462162161
This line is not in its correct location:     remainingAmount = remainingAmount % 10;
Move this line in its place:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 17 to 9:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1489462280809
This line is not in its correct location:     remainingAmount = remainingAmount % 10;
Move this line in its place:     int numberOfQuarters = remainingAmount / 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 16 to 10:     int numberOfQuarters = remainingAmount / 25;
Submit Parsons Solution clicked @ 1489462285805
This line is not in its correct location:     remainingAmount = remainingAmount % 10;
Move this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 22 to 11:     remainingAmount = remainingAmount % 25;
Submit Parsons Solution clicked @ 1489462292610
This line is not in its correct location:     remainingAmount = remainingAmount % 10;
Move this line in its place:     int numberOfDimes = remainingAmount / 10;
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 18 to 12:     int numberOfDimes = remainingAmount / 10;
Submit Parsons Solution clicked @ 1489462296695
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int numberOfNickels = remainingAmount / 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 20 to 14:     int numberOfNickels = remainingAmount / 5;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
51. Reordered from line 20 to 15:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1489462313765
This line is not in its correct location:     System.out.println("    " + numberOfPennies + " pennies");
Move this line in its place:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 21 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489462320920
This line is not in its correct location:     System.out.println("    " + numberOfPennies + " pennies");
Move this line in its place:     System.out.println("    " + numberOfOneDollars + " dollars");
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 21 to 18:     System.out.println("    " + numberOfOneDollars + " dollars");
54. Reordered from line 21 to 19:     System.out.println("    " + numberOfQuarters + " quarters ");
55. Reordered from line 21 to 20:     System.out.println("    " + numberOfDimes + " dimes");
56. Reordered from line 22 to 21:     System.out.println("    " + numberOfNickels + " nickels");
Submit Parsons Solution clicked @ 1489462336448
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class ComputeChange {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
29. Moved from problem to solution at line 15
42. Reordered from line 15 to 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 6 (2 moves):     double amount = input.nextDouble();
38. Moved from problem to solution at line 21
44. Reordered from line 20 to 6
Line 7 (1 moves):     int remainingAmount = (int)(amount * 100);
14. Moved from problem to solution at line 5
Line 8 (1 moves):     int numberOfOneDollars = remainingAmount / 100;
11. Moved from problem to solution at line 5
Line 9 (3 moves):     remainingAmount = remainingAmount % 100;
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
46. Reordered from line 17 to 9
Line 10 (3 moves):     int numberOfQuarters = remainingAmount / 25;
18. Moved from problem to solution at line 11
23. Reordered from line 12 to 11
47. Reordered from line 16 to 10
Line 11 (7 moves):     remainingAmount = remainingAmount % 25;
36. Moved from problem to solution at line 20
*  Indented line 20
*  Outdented line 20
*  Indented line 20
37. Reordered from line 20 to 21
*  Outdented line 21
48. Reordered from line 22 to 11
Line 12 (2 moves):     int numberOfDimes = remainingAmount / 10;
19. Moved from problem to solution at line 12
49. Reordered from line 18 to 12
Line 13 (3 moves):     remainingAmount = remainingAmount % 10;
30. Moved from problem to solution at line 16
31. Reordered from line 16 to 17
45. Reordered from line 19 to 9
Line 14 (2 moves):     int numberOfNickels = remainingAmount / 5;
33. Moved from problem to solution at line 18
50. Reordered from line 20 to 14
Line 15 (2 moves):     remainingAmount = remainingAmount % 5;
32. Moved from problem to solution at line 17
51. Reordered from line 20 to 15
Line 16 (2 moves):     int numberOfPennies = remainingAmount;
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 17 (3 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
34. Moved from problem to solution at line 19
35. Reordered from line 19 to 20
52. Reordered from line 21 to 17
Line 18 (4 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
16. Moved from problem to solution at line 9
25. Reordered from line 9 to 12
26. Reordered from line 12 to 11
53. Reordered from line 21 to 18
Line 19 (3 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
17. Moved from problem to solution at line 10
22. Reordered from line 11 to 10
54. Reordered from line 21 to 19
Line 20 (4 moves):     System.out.println("    " + numberOfDimes + " dimes");
20. Moved from problem to solution at line 13
21. Reordered from line 13 to 10
24. Reordered from line 12 to 10
55. Reordered from line 21 to 20
Line 21 (2 moves):     System.out.println("    " + numberOfNickels + " nickels");
39. Moved from problem to solution at line 22
56. Reordered from line 22 to 21
Line 22 (1 moves):     System.out.println("    " + numberOfPennies + " pennies");
15. Moved from problem to solution at line 8
Line 23 (2 moves):  }}
40. Moved from problem to solution at line 23
41. Reordered from line 23 to 24
Line 2 (8) (1 moves): public Class ComputeChange {
4. Moved from problem to trash at line 0
Line 4 (16) (3 moves):     Scanner input = new Scanner(System.in) //This line should be placed before Line X
27. Moved from problem to solution at line 14
28. Reordered from line 14 to 15
43. Moved from solution to trash at line 1
Your Grade:
You took 56 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1489462339887
Time spent on this problem: 988 seconds
<HR>
