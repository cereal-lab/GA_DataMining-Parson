Problem No. 1
Using Template # 100
The Problem:
System.out.println("    " + numberOfDimes + " dimes");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
System.out.println("    " + numberOfQuarters + " quarters ");
remainingAmount = remainingAmount % 10;
import java.util.Scanner;
remainingAmount = remainingAmount % 5;
double amount = input.nextDouble();
System.out.println("    " + numberOfOneDollars + " dollars");
public static void Main(String[] args) {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should be placed before Line X
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfPennies + " pennies");
remainingAmount = remainingAmount % 25;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
System.out.println("    " + numberOfNickels + " nickels");
}}
remainingAmount = remainingAmount % 100;
int numberOfNickels = remainingAmount / 5;
int numberOfPennies = remainingAmount;
int numberOfOneDollars = remainingAmount / 100;
int numberOfQuarters = remainingAmount / 25;
public class ComputeChange {
int remainingAmount = (int)(amount * 100);
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 24 lines.
Re-assemble them with 26 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println("    " + numberOfDimes + " dimes");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
System.out.println("    " + numberOfQuarters + " quarters ");
remainingAmount = remainingAmount % 10;
import java.util.Scanner;
remainingAmount = remainingAmount % 5;
double amount = input.nextDouble();
System.out.println("    " + numberOfOneDollars + " dollars");
public static void Main(String[] args) {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should be placed before Line X
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfPennies + " pennies");
remainingAmount = remainingAmount % 25;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
System.out.println("    " + numberOfNickels + " nickels");
}}
remainingAmount = remainingAmount % 100;
int numberOfNickels = remainingAmount / 5;
int numberOfPennies = remainingAmount;
int numberOfOneDollars = remainingAmount / 100;
int numberOfQuarters = remainingAmount / 25;
public class ComputeChange {
int remainingAmount = (int)(amount * 100);
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:  }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to trash at line 0:   public static void Main(String[] args) {
5. Moved from problem to solution at line 2: public class ComputeChange {
6. Moved from problem to solution at line 4:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
7. Moved from problem to solution at line 5:     double amount = input.nextDouble();
8. Moved from problem to solution at line 6:     int numberOfOneDollars = remainingAmount / 100;
9. Moved from problem to solution at line 7:     int numberOfQuarters = remainingAmount / 25;
10. Moved from problem to solution at line 8:     int numberOfNickels = remainingAmount / 5;
11. Moved from problem to solution at line 9:     int numberOfPennies = remainingAmount;
12. Moved from problem to solution at line 8:     int numberOfDimes = remainingAmount / 10;
13. Moved from problem to solution at line 10:     int remainingAmount = (int)(amount * 100);
14. Reordered from line 10 to 12:     int remainingAmount = (int)(amount * 100);
15. Reordered from line 12 to 11:     int remainingAmount = (int)(amount * 100);
16. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
17. Moved from problem to solution at line 13:     remainingAmount = remainingAmount % 100;
18. Moved from problem to solution at line 14:     System.out.println("    " + numberOfOneDollars + " dollars");
19. Moved from problem to solution at line 15:     remainingAmount = remainingAmount % 25;
20. Moved from problem to solution at line 16:     remainingAmount = remainingAmount % 10;
21. Moved from problem to solution at line 16:     System.out.println("    " + numberOfQuarters + " quarters ");
22. Moved from problem to solution at line 18:     System.out.println("    " + numberOfDimes + " dimes");
23. Moved from problem to solution at line 19:     remainingAmount = remainingAmount % 5;
24. Moved from problem to solution at line 20:     System.out.println("    " + numberOfNickels + " nickels");
25. Moved from problem to solution at line 21:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
26. Moved from problem to solution at line 21:     System.out.println("    " + numberOfPennies + " pennies");
27. Reordered from line 22 to 23:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
28. Reordered from line 23 to 22:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489363547434
This line is not in its correct location:     int numberOfOneDollars = remainingAmount / 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 12 to 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1489363560707
This line is not in its correct location:     int numberOfQuarters = remainingAmount / 25;
Move this line in its place:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 13 to 9:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1489363570311
This line is not in its correct location:     int numberOfDimes = remainingAmount / 10;
Move this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 15 to 10:     remainingAmount = remainingAmount % 25;
Submit Parsons Solution clicked @ 1489363578557
This line is not in its correct location:     remainingAmount = remainingAmount % 25;
Move this line in its place:     int numberOfQuarters = remainingAmount / 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 11 to 10:     int numberOfQuarters = remainingAmount / 25;
Submit Parsons Solution clicked @ 1489363594775
This line is not in its correct location:     int numberOfNickels = remainingAmount / 5;
Move this line in its place:     remainingAmount = remainingAmount % 10;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 17 to 12:     remainingAmount = remainingAmount % 10;
Submit Parsons Solution clicked @ 1489363613742
This line is not in its correct location:     remainingAmount = remainingAmount % 10;
Move this line in its place:     int numberOfDimes = remainingAmount / 10;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 13 to 12:     int numberOfDimes = remainingAmount / 10;
Submit Parsons Solution clicked @ 1489363616879
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     remainingAmount = remainingAmount % 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 19 to 15:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1489363635077
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 22 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489363642273
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class ComputeChange {
5. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
16. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
6. Moved from problem to solution at line 4
Line 6 (1 moves):     double amount = input.nextDouble();
7. Moved from problem to solution at line 5
Line 7 (4 moves):     int remainingAmount = (int)(amount * 100);
13. Moved from problem to solution at line 10
14. Reordered from line 10 to 12
15. Reordered from line 12 to 11
29. Reordered from line 12 to 7
Line 8 (1 moves):     int numberOfOneDollars = remainingAmount / 100;
8. Moved from problem to solution at line 6
Line 9 (2 moves):     remainingAmount = remainingAmount % 100;
17. Moved from problem to solution at line 13
30. Reordered from line 13 to 9
Line 10 (2 moves):     int numberOfQuarters = remainingAmount / 25;
9. Moved from problem to solution at line 7
32. Reordered from line 11 to 10
Line 11 (2 moves):     remainingAmount = remainingAmount % 25;
19. Moved from problem to solution at line 15
31. Reordered from line 15 to 10
Line 12 (2 moves):     int numberOfDimes = remainingAmount / 10;
12. Moved from problem to solution at line 8
34. Reordered from line 13 to 12
Line 13 (2 moves):     remainingAmount = remainingAmount % 10;
20. Moved from problem to solution at line 16
33. Reordered from line 17 to 12
Line 14 (1 moves):     int numberOfNickels = remainingAmount / 5;
10. Moved from problem to solution at line 8
Line 15 (2 moves):     remainingAmount = remainingAmount % 5;
23. Moved from problem to solution at line 19
35. Reordered from line 19 to 15
Line 16 (1 moves):     int numberOfPennies = remainingAmount;
11. Moved from problem to solution at line 9
Line 17 (4 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
25. Moved from problem to solution at line 21
27. Reordered from line 22 to 23
28. Reordered from line 23 to 22
36. Reordered from line 22 to 17
Line 18 (1 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
18. Moved from problem to solution at line 14
Line 19 (1 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
21. Moved from problem to solution at line 16
Line 20 (1 moves):     System.out.println("    " + numberOfDimes + " dimes");
22. Moved from problem to solution at line 18
Line 21 (1 moves):     System.out.println("    " + numberOfNickels + " nickels");
24. Moved from problem to solution at line 20
Line 22 (1 moves):     System.out.println("    " + numberOfPennies + " pennies");
26. Moved from problem to solution at line 21
Line 23 (1 moves):  }}
1. Moved from problem to solution at line 0
Line 3 (3) (1 moves):   public static void Main(String[] args) {
4. Moved from problem to trash at line 0
Your Grade:
You took 36 steps to solve a Parsons puzzle containing 24 lines of code.
Next Problem clicked @ 1489363790707
Time spent on this problem: 548 seconds
<HR>
