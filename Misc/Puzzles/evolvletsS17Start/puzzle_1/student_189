Problem No. 1
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
else
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
break;}
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
while (low < high) {
while while (low <= high) {
}}
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
if (isPalindrome)
public class Palindrome {
}
low++; high--;
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
import java.util.Scanner;
else
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
break;}
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
while (low < high) {
while while (low <= high) {
}}
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
if (isPalindrome)
public class Palindrome {
}
low++; high--;
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:     int low, high, isPalindrome;          // This is line Y
7. Reordered from line 3 to 4:     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Reordered from line 5 to 4:     int low, high, isPalindrome;          // This is line Y
10. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489507213633
Please clear all the lines from the left panel before submitting your answer.
11. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
12. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
14. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
15. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 10:         isPalindrome = false;
19. Reordered from line 10 to 11:         isPalindrome = false;
20. Moved from problem to solution at line 11:     else
21. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489507420985
Please clear all the lines from the left panel before submitting your answer.
22. Moved from solution to problem at line 10:     else
23. Moved from problem to solution at line 11:     }}
24. Reordered from line 11 to 12:     }}
25. Moved from problem to solution at line 12:       }
26. Moved from problem to solution at line 13:     if (isPalindrome)
27. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
28. Moved from problem to trash at line 0:    while while (low <= high) {
29. Moved from problem to trash at line 1:     while (low < high) {
30. Moved from problem to trash at line 2:         break;}
31. Moved from problem to trash at line 3:     else
32. Moved from problem to trash at line 3:       low++; high--;
33. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
34. Moved from trash to solution at line 15:         break;}
Submit Parsons Solution clicked @ 1489507483900
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 8 to 5:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489507526762
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 9 to 5:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489507531706
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from trash to solution at line 6:       low++; high--;
38. Reordered from line 6 to 5:       low++; high--;
Submit Parsons Solution clicked @ 1489507552811
This line is not in its correct location:       low++; high--;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 15 to 5:       System.out.println(s + " is a palindrome");
40. Reordered from line 12 to 5:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489507569947
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 12 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489507575460
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 5 to 13:     String s = input.nextLine();          // This is line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Reordered from line 13 to 12:     String s = input.nextLine();          // This is line X
44. Reordered from line 16 to 5:         break;}
Submit Parsons Solution clicked @ 1489507597550
This line is not in its correct location:         break;}
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 16 to 4:     if (isPalindrome)
46. Reordered from line 4 to 5:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489507604797
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 15 to 5:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489507609384
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 15 to 5:     String s = input.nextLine();          // This is line X
49. Reordered from line 15 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489507623447
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 16 to 7:       }
51. Reordered from line 16 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489507635027
This line is not in its correct location:       }
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 8 to 13:       }
Submit Parsons Solution clicked @ 1489507643612
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 9 to 8:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489507647248
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 15 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489507651311
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 16 to 10:     low= 1; high = s.length() - 1; isPalindrome = true;
56. Reordered from line 10 to 9:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489507658562
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489507665056
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Moved from trash to solution at line 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489507677170
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Moved from trash to solution at line 10:     while (low < high) {
60. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489507685533
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Moved from solution to trash at line 2:    while while (low <= high) {
62. Moved from trash to solution at line 18:     else
Submit Parsons Solution clicked @ 1489507697029
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 13 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489507704724
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
64. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489507711755
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 18 to 12:     else
66. Reordered from line 18 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489507726092
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
67. Reordered from line 13 to 12:     else
Submit Parsons Solution clicked @ 1489507730991
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
68. Reordered from line 16 to 12:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489507736263
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
69. Reordered from line 15 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489507741716
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
70. Reordered from line 16 to 12:         break;}
Submit Parsons Solution clicked @ 1489507746298
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
71. Reordered from line 14 to 13:       System.out.println(s + " is a palindrome");
72. Reordered from line 16 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489507756543
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
73. Reordered from line 15 to 13:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489507760634
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
74. Reordered from line 16 to 13:     else
Submit Parsons Solution clicked @ 1489507765119
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
75. Reordered from line 17 to 13:       }
Submit Parsons Solution clicked @ 1489507772709
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
76. Reordered from line 18 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489507779085
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
77. Reordered from line 16 to 14:     if (isPalindrome)
78. Reordered from line 14 to 16:     if (isPalindrome)
79. Reordered from line 15 to 17:     else
Submit Parsons Solution clicked @ 1489507792295
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
80. Reordered from line 16 to 18:       System.out.println(s + " is not a palindrome");
81. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489507800223
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (3 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
5. Reordered from line 3 to 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4
10. Reordered from line 5 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
13. Moved from problem to solution at line 6
49. Reordered from line 15 to 5
Line 6 (6 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
41. Reordered from line 12 to 5
42. Reordered from line 5 to 13
43. Reordered from line 13 to 12
48. Reordered from line 15 to 5
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
9. Reordered from line 5 to 4
51. Reordered from line 16 to 7
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9
36. Reordered from line 9 to 5
54. Reordered from line 15 to 8
Line 9 (3 moves):     while (low < high) {
29. Moved from problem to trash at line 1
59. Moved from trash to solution at line 10
60. Reordered from line 10 to 9
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
40. Reordered from line 12 to 5
63. Reordered from line 13 to 10
Line 11 (5 moves):         isPalindrome = false;
18. Moved from problem to solution at line 10
19. Reordered from line 10 to 11
21. Reordered from line 12 to 11
47. Reordered from line 15 to 5
64. Reordered from line 12 to 11
Line 12 (4 moves):         break;}
30. Moved from problem to trash at line 2
34. Moved from trash to solution at line 15
44. Reordered from line 16 to 5
70. Reordered from line 16 to 12
Line 13 (4 moves):       low++; high--;
32. Moved from problem to trash at line 3
37. Moved from trash to solution at line 6
38. Reordered from line 6 to 5
76. Reordered from line 18 to 13
Line 14 (4 moves):       }
25. Moved from problem to solution at line 12
50. Reordered from line 16 to 7
52. Reordered from line 8 to 13
75. Reordered from line 17 to 13
Line 15 (8 moves):     if (isPalindrome)
26. Moved from problem to solution at line 13
45. Reordered from line 16 to 4
46. Reordered from line 4 to 5
53. Reordered from line 9 to 8
69. Reordered from line 15 to 12
73. Reordered from line 15 to 13
77. Reordered from line 16 to 14
78. Reordered from line 14 to 16
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
27. Moved from problem to solution at line 14
39. Reordered from line 15 to 5
68. Reordered from line 16 to 12
71. Reordered from line 14 to 13
81. Reordered from line 17 to 16
Line 17 (8 moves):     else
20. Moved from problem to solution at line 11
22. Moved from solution to problem at line 10
31. Moved from problem to trash at line 3
62. Moved from trash to solution at line 18
65. Reordered from line 18 to 12
67. Reordered from line 13 to 12
74. Reordered from line 16 to 13
79. Reordered from line 15 to 17
Line 18 (4 moves):       System.out.println(s + " is not a palindrome");
33. Moved from problem to solution at line 15
66. Reordered from line 18 to 12
72. Reordered from line 16 to 13
80. Reordered from line 16 to 18
Line 19 (2 moves):     }}
23. Moved from problem to solution at line 11
24. Reordered from line 11 to 12
Line 8 (7) (5 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 8
35. Reordered from line 8 to 5
55. Reordered from line 16 to 10
56. Reordered from line 10 to 9
57. Moved from solution to trash at line 1
Line 9 (37) (3 moves):    while while (low <= high) {
28. Moved from problem to trash at line 0
58. Moved from trash to solution at line 9
61. Moved from solution to trash at line 2
Your Grade:
You took 81 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489508453246
Time spent on this problem: 1507 seconds
<HR>
