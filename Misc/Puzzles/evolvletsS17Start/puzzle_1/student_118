Problem No. 1
Using Template # 100
The Problem:
}}
public static void main(String[] args) {
System.out.print(i + " | ");
System.out.print("   " + j);
System.out.print("    ");
System.out.println();}
for (int i = 1; i <= 9; i++)
for (int i = 1; i <= 9; i++) {
System.out.println("           Multiplication Table");
System.out.println("\n-----------------------------------------");
public class MultiplicationTable {
for (int j = 1; j <= 9; j++) {
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
Using Template # 100
The Problem:
}}
public static void main(String[] args) {
System.out.print(i + " | ");
System.out.print("   " + j);
System.out.print("    ");
System.out.println();}
for (int i = 1; i <= 9; i++)
for (int i = 1; i <= 9; i++) {
System.out.println("           Multiplication Table");
System.out.println("\n-----------------------------------------");
public class MultiplicationTable {
for (int j = 1; j <= 9; j++) {
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: public class MultiplicationTable {
4. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 3: }}
6. Reordered from line 3 to 4: }}
7. Moved from problem to solution at line 4:     System.out.print("    ");
8. Moved from problem to solution at line 4:         System.out.printf("%4d", i * j);}
9. Moved from problem to solution at line 4:       for (int j = 1; j <= 9; j++) {
10. Moved from problem to solution at line 4:       System.out.print(i + " | ");
11. Moved from problem to solution at line 4:     for (int i = 1; i <= 9; i++) {
12. Moved from problem to solution at line 4:     System.out.println("\n-----------------------------------------");
13. Moved from problem to solution at line 4:       System.out.print("   " + j);
14. Moved from problem to trash at line 0:    for for (int j = 1; j < 9; j++)
15. Reordered from line 10 to 4:     System.out.print("    ");
16. Moved from problem to solution at line 5:     for (int j = 1; j <= 9; j++)
17. Moved from problem to solution at line 12:       System.out.println();}
18. Moved from solution to problem at line 8:     for (int i = 1; i <= 9; i++) {
19. Moved from problem to solution at line 8:     for (int i = 1; i <= 9; i++)
20. Moved from solution to trash at line 1:     for (int i = 1; i <= 9; i++)
21. Moved from problem to solution at line 8:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1489459353532
This line is not in its correct location:     System.out.println("           Multiplication Table");
Move this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 3 to 2:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489459359276
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
22. Reordered from line 3 to 2
Line 3 (1 moves):     System.out.println("           Multiplication Table");
4. Moved from problem to solution at line 2
Line 4 (2 moves):     System.out.print("    ");
7. Moved from problem to solution at line 4
15. Reordered from line 10 to 4
Line 5 (1 moves):     for (int j = 1; j <= 9; j++)
16. Moved from problem to solution at line 5
Line 6 (1 moves):       System.out.print("   " + j);
13. Moved from problem to solution at line 4
Line 7 (1 moves):     System.out.println("\n-----------------------------------------");
12. Moved from problem to solution at line 4
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
11. Moved from problem to solution at line 4
18. Moved from solution to problem at line 8
21. Moved from problem to solution at line 8
Line 9 (1 moves):       System.out.print(i + " | ");
10. Moved from problem to solution at line 4
Line 10 (1 moves):       for (int j = 1; j <= 9; j++) {
9. Moved from problem to solution at line 4
Line 11 (1 moves):         System.out.printf("%4d", i * j);}
8. Moved from problem to solution at line 4
Line 12 (1 moves):       System.out.println();}
17. Moved from problem to solution at line 12
Line 13 (2 moves): }}
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (29) (1 moves):    for for (int j = 1; j < 9; j++)
14. Moved from problem to trash at line 0
Line 8 (14) (2 moves):     for (int i = 1; i <= 9; i++)
19. Moved from problem to solution at line 8
20. Moved from solution to trash at line 1
Your Grade:
You took 22 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489459369699
Time spent on this problem: 579 seconds
<HR>
