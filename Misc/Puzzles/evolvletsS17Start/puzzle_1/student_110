Problem No. 1
Using Template # 100
The Problem:
String s1 = "Hello World", s2 = "Hello Worlds";
public static void main(String[] args) {
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " are same object");
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
public class StringOperation {
else if (s1.compareTo(s2) == 0) // This is Line X
else if (s1 == s2) // This line should be written before Line X
}}
System.out.println("Neither same content nor same object");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 13 lines.
Re-assemble them with 14 (or fewer) moves for full credit
Using Template # 100
The Problem:
String s1 = "Hello World", s2 = "Hello Worlds";
public static void main(String[] args) {
if (s1.equals(s2))
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
System.out.println(s1 + " and " +s2 + " are same object");
else
System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
public class StringOperation {
else if (s1.compareTo(s2) == 0) // This is Line X
else if (s1 == s2) // This line should be written before Line X
}}
System.out.println("Neither same content nor same object");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: 	public static void main(String[] args) {
2. Moved from problem to solution at line 1: public class StringOperation {
3. Moved from problem to solution at line 2: 		String s1 = "Hello World", s2 = "Hello Worlds";
4. Reordered from line 2 to 3: 		String s1 = "Hello World", s2 = "Hello Worlds";
5. Moved from problem to solution at line 3: 		if (s1.equals(s2))
6. Reordered from line 3 to 4: 		if (s1.equals(s2))
7. Moved from problem to solution at line 4: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
8. Reordered from line 4 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
9. Moved from problem to solution at line 5: 		else if (s1 == s2) // This line should be written before Line X
10. Reordered from line 6 to 5: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
11. Moved from problem to solution at line 6: 		else if (s1.compareTo(s2) == 0) // This is Line X
12. Moved from problem to solution at line 7: 		else
13. Reordered from line 7 to 8: 		else
14. Reordered from line 7 to 6: 		else if (s1 == s2) // This line should be written before Line X
15. Moved from problem to solution at line 8: 			System.out.println("Neither same content nor same object");
16. Reordered from line 8 to 9: 			System.out.println("Neither same content nor same object");
17. Moved from problem to solution at line 9: 	}}
18. Reordered from line 9 to 10: 	}}
19. Moved from problem to trash at line 0: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
20. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " are same object");
21. Moved from problem to trash at line 1: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
Submit Parsons Solution clicked @ 1489360724064
This line is not in its correct location: 		else if (s1.compareTo(s2) == 0) // This is Line X
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Moved from solution to trash at line 1: 		else if (s1.compareTo(s2) == 0) // This is Line X
Submit Parsons Solution clicked @ 1489360737792
This line is not in its correct location: 		else
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from solution to trash at line 2: 		else
Submit Parsons Solution clicked @ 1489360740448
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from solution to trash at line 5: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1489360743824
This line is not in its correct location: 	}}
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from solution to trash at line 3: 	}}
Submit Parsons Solution clicked @ 1489360746304
You have not yet identified all the lines. Insert: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489360747680
You have not yet identified all the lines. Insert: 			System.out.println(s1 + " and " +s2 + " are same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from trash to solution at line 6: 			System.out.println(s1 + " and " +s2 + " are same object");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
27. Reordered from line 6 to 7: 			System.out.println(s1 + " and " +s2 + " are same object");
28. Moved from trash to solution at line 7: 		else
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
29. Reordered from line 7 to 8: 		else
30. Moved from trash to solution at line 8: 			System.out.println("Neither same content nor same object");
31. Reordered from line 8 to 9: 			System.out.println("Neither same content nor same object");
32. Moved from trash to solution at line 9: 	}}
33. Reordered from line 9 to 10: 	}}
Submit Parsons Solution clicked @ 1489360796951
This line is not in its correct location: 		else
Insert this line in its place: 		else if (s1.compareTo(s2) == 0) // This is Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 8: 		else if (s1.compareTo(s2) == 0) // This is Line X
35. Moved from solution to trash at line 2: 		else
Submit Parsons Solution clicked @ 1489360814712
This line is not in its correct location: 			System.out.println("Neither same content nor same object");
Insert this line in its place: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from solution to trash at line 3: 			System.out.println("Neither same content nor same object");
37. Moved from trash to solution at line 9: 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
Submit Parsons Solution clicked @ 1489360837015
This line is not in its correct location: 	}}
Insert this line in its place: 		else
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from trash to solution at line 10: 		else
Submit Parsons Solution clicked @ 1489360844903
This line is not in its correct location: 	}}
Insert this line in its place: 			System.out.println("Neither same content nor same object");
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from trash to solution at line 11: 			System.out.println("Neither same content nor same object");
Submit Parsons Solution clicked @ 1489360851847
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class StringOperation {
2. Moved from problem to solution at line 1
Line 2 (1 moves): 	public static void main(String[] args) {
1. Moved from problem to solution at line 0
Line 3 (2 moves): 		String s1 = "Hello World", s2 = "Hello Worlds";
3. Moved from problem to solution at line 2
4. Reordered from line 2 to 3
Line 4 (2 moves): 		if (s1.equals(s2))
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (3 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" );
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
10. Reordered from line 6 to 5
Line 6 (2 moves): 		else if (s1 == s2) // This line should be written before Line X
9. Moved from problem to solution at line 5
14. Reordered from line 7 to 6
Line 7 (3 moves): 			System.out.println(s1 + " and " +s2 + " are same object");
20. Moved from problem to trash at line 1
26. Moved from trash to solution at line 6
27. Reordered from line 6 to 7
Line 8 (3 moves): 		else if (s1.compareTo(s2) == 0) // This is Line X
11. Moved from problem to solution at line 6
22. Moved from solution to trash at line 1
34. Moved from trash to solution at line 8
Line 9 (2 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: compareTo method)" );
19. Moved from problem to trash at line 0
37. Moved from trash to solution at line 9
Line 10 (7 moves): 		else
12. Moved from problem to solution at line 7
13. Reordered from line 7 to 8
23. Moved from solution to trash at line 2
28. Moved from trash to solution at line 7
29. Reordered from line 7 to 8
35. Moved from solution to trash at line 2
38. Moved from trash to solution at line 10
Line 11 (7 moves): 			System.out.println("Neither same content nor same object");
15. Moved from problem to solution at line 8
16. Reordered from line 8 to 9
24. Moved from solution to trash at line 5
30. Moved from trash to solution at line 8
31. Reordered from line 8 to 9
36. Moved from solution to trash at line 3
39. Moved from trash to solution at line 11
Line 12 (5 moves): 	}}
17. Moved from problem to solution at line 9
18. Reordered from line 9 to 10
25. Moved from solution to trash at line 3
32. Moved from trash to solution at line 9
33. Reordered from line 9 to 10
Line 5 (16) (1 moves): 			System.out.println(s1 + " and " +s2 + " have same contents (Usage: equals method)" )
21. Moved from problem to trash at line 1
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 13 lines of code.
Next Problem clicked @ 1489360896502
Time spent on this problem: 399 seconds
<HR>
