Problem No. 1
Using Template # 100
The Problem:
public static void main(String[] args) {
low= 0; high = s.length() - 1; isPalindrome = true;
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
}
if (isPalindrome)
int low, high, isPalindrome;          // This is line Y
public class Palindrome {
System.out.println(s + " is a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is not a palindrome");
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while (low < high {
while while (low <= high) {
while (low < high) {
String s = input.nextLine();          // This is line X
else
break;}
isPalindrome = false;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
public static void main(String[] args) {
low= 0; high = s.length() - 1; isPalindrome = true;
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
}
if (isPalindrome)
int low, high, isPalindrome;          // This is line Y
public class Palindrome {
System.out.println(s + " is a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is not a palindrome");
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
while (low < high {
while while (low <= high) {
while (low < high) {
String s = input.nextLine();          // This is line X
else
break;}
isPalindrome = false;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: public class Palindrome {
4. Moved from problem to solution at line 2: import java.util.Scanner;
5. Reordered from line 2 to 3: import java.util.Scanner;
6. Moved from problem to solution at line 3:     String s = input.nextLine();          // This is line X
7. Moved from problem to solution at line 2:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Reordered from line 2 to 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Reordered from line 7 to 3: import java.util.Scanner;
12. Reordered from line 4 to 7:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
13. Reordered from line 4 to 7:     String s = input.nextLine();          // This is line X
14. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
15. Reordered from line 7 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 7:     while (low < high) {
17. Reordered from line 7 to 8:     while (low < high) {
18. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
19. Reordered from line 9 to 8:     while (low < high) {
20. Moved from problem to solution at line 9:       low++; high--;
21. Reordered from line 9 to 10:       low++; high--;
22. Moved from problem to solution at line 10:       }
23. Reordered from line 10 to 11:       }
24. Moved from problem to trash at line 0:     while (low < high {
25. Moved from problem to solution at line 6:     low= 0; high = s.length() - 1; isPalindrome = true;
26. Reordered from line 6 to 9:     low= 0; high = s.length() - 1; isPalindrome = true;
27. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
28. Reordered from line 10 to 12:       if (s.charAt(low) != s.charAt(high)) {
29. Moved from problem to solution at line 12:         isPalindrome = false;
30. Reordered from line 12 to 13:         isPalindrome = false;
31. Reordered from line 10 to 13:       low++; high--;
32. Reordered from line 10 to 13:       }
*  Outdented line 13:       }
33. Moved from problem to solution at line 11:     else
34. Moved from problem to solution at line 14:     if (isPalindrome)
35. Reordered from line 15 to 14:       }
36. Moved from problem to solution at line 15:       System.out.println(s + " is a palindrome");
37. Reordered from line 15 to 16:       System.out.println(s + " is a palindrome");
38. Reordered from line 12 to 11:         isPalindrome = false;
39. Moved from problem to solution at line 12:         break;}
40. Moved from problem to solution at line 17:     }}
41. Reordered from line 17 to 18:     }}
42. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Moved from problem to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489171032628
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
45. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489171123603
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 3 to 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1489171138909
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489171139153
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 13 to 12:         break;}
48. Reordered from line 13 to 17:       System.out.println(s + " is not a palindrome");
49. Reordered from line 17 to 16:       System.out.println(s + " is not a palindrome");
50. Reordered from line 16 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489171164185
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489171172899
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 14 to 19:       System.out.println(s + " is not a palindrome");
53. Reordered from line 19 to 18:       System.out.println(s + " is not a palindrome");
54. Reordered from line 14 to 18:     else
55. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1489171195497
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (4 moves): import java.util.Scanner;
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
11. Reordered from line 7 to 3
46. Reordered from line 3 to 1
Line 2 (2 moves): public class Palindrome {
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 3 (1 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Moved from problem to solution at line 5
Line 5 (5 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 2
8. Reordered from line 2 to 3
12. Reordered from line 4 to 7
15. Reordered from line 7 to 6
44. Reordered from line 6 to 5
Line 6 (4 moves):     String s = input.nextLine();          // This is line X
6. Moved from problem to solution at line 3
13. Reordered from line 4 to 7
14. Reordered from line 7 to 6
45. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to solution at line 6
26. Reordered from line 6 to 9
27. Reordered from line 9 to 8
Line 9 (3 moves):     while (low < high) {
16. Moved from problem to solution at line 7
17. Reordered from line 7 to 8
19. Reordered from line 9 to 8
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 8
28. Reordered from line 10 to 12
Line 11 (3 moves):         isPalindrome = false;
29. Moved from problem to solution at line 12
30. Reordered from line 12 to 13
38. Reordered from line 12 to 11
Line 12 (2 moves):         break;}
39. Moved from problem to solution at line 12
47. Reordered from line 13 to 12
Line 13 (4 moves):       low++; high--;
20. Moved from problem to solution at line 9
21. Reordered from line 9 to 10
31. Reordered from line 10 to 13
51. Reordered from line 15 to 13
Line 14 (5 moves):       }
22. Moved from problem to solution at line 10
23. Reordered from line 10 to 11
32. Reordered from line 10 to 13
*  Outdented line 13
35. Reordered from line 15 to 14
Line 15 (1 moves):     if (isPalindrome)
34. Moved from problem to solution at line 14
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
36. Moved from problem to solution at line 15
37. Reordered from line 15 to 16
Line 17 (3 moves):     else
33. Moved from problem to solution at line 11
54. Reordered from line 14 to 18
55. Reordered from line 18 to 17
Line 18 (6 moves):       System.out.println(s + " is not a palindrome");
42. Moved from problem to solution at line 12
48. Reordered from line 13 to 17
49. Reordered from line 17 to 16
50. Reordered from line 16 to 13
52. Reordered from line 14 to 19
53. Reordered from line 19 to 18
Line 19 (2 moves):     }}
40. Moved from problem to solution at line 17
41. Reordered from line 17 to 18
Line 9 (5) (1 moves):     while (low < high {
24. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
43. Moved from problem to trash at line 1
Your Grade:
You took 55 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489171227529
Time spent on this problem: 979 seconds
<HR>
