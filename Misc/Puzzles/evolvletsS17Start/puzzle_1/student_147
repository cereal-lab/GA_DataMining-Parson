Problem No. 1
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
break;}
while (low < high {
while while (low <= high) {
while (low < high) {
low++; high--;
import java.util.Scanner;
if (isPalindrome)
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
}}
public class Palindrome {
String s = input.nextLine();          // This is line X
System.out.println(s + " is not a palindrome");
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
break;}
while (low < high {
while while (low <= high) {
while (low < high) {
low++; high--;
import java.util.Scanner;
if (isPalindrome)
public static void main(String[] args) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
}}
public class Palindrome {
String s = input.nextLine();          // This is line X
System.out.println(s + " is not a palindrome");
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
if (s.charAt(low) != s.charAt(high)) {
int low, high, isPalindrome;          // This is line Y
isPalindrome = false;
}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
3. Moved from problem to solution at line 1:     else
4. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
5. Moved from problem to solution at line 1:     if (isPalindrome)
6. Moved from problem to solution at line 1: import java.util.Scanner;
7. Moved from problem to solution at line 2: public class Palindrome {
8. Moved from problem to solution at line 3:   public static void main(String[] args) {
9. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
12. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
13. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 10:         isPalindrome = false;
16. Moved from problem to solution at line 11:       }
17. Moved from problem to solution at line 11:         break;}
18. Moved from problem to solution at line 9:    while while (low <= high) {
19. Moved from problem to solution at line 13:       low++; high--;
20. Moved from problem to solution at line 13:     while (low < high {
21. Moved from problem to solution at line 13:     while (low < high) {
Submit Parsons Solution clicked @ 1489460964036
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489460987999
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489460997032
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from solution to trash at line 0:    while while (low <= high) {
25. Reordered from line 12 to 10:     while (low < high) {
Submit Parsons Solution clicked @ 1489461030255
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489461035382
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from solution to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1489461046715
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
6. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
7. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
8. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 4
22. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 5
23. Reordered from line 7 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 8
Line 9 (3 moves):     while (low < high) {
21. Moved from problem to solution at line 13
25. Reordered from line 12 to 10
26. Reordered from line 10 to 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
14. Moved from problem to solution at line 9
Line 11 (1 moves):         isPalindrome = false;
15. Moved from problem to solution at line 10
Line 12 (1 moves):         break;}
17. Moved from problem to solution at line 11
Line 13 (1 moves):       low++; high--;
19. Moved from problem to solution at line 13
Line 14 (1 moves):       }
16. Moved from problem to solution at line 11
Line 15 (1 moves):     if (isPalindrome)
5. Moved from problem to solution at line 1
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
4. Moved from problem to solution at line 1
Line 17 (1 moves):     else
3. Moved from problem to solution at line 1
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
2. Moved from problem to solution at line 1
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (2 moves):    while while (low <= high) {
18. Moved from problem to solution at line 9
24. Moved from solution to trash at line 0
Line 9 (5) (2 moves):     while (low < high {
20. Moved from problem to solution at line 13
27. Moved from solution to trash at line 1
Your Grade:
You took 27 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489461074287
Time spent on this problem: 1380 seconds
<HR>
