Problem No. 1
Using Template # 100
The Problem:
else
while (low < high) {
while while (low <= high) {
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
System.out.println(s + " is not a palindrome");
String s = input.nextLine();          // This is line X
break;}
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
public class Palindrome {
isPalindrome = false;
}
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
else
while (low < high) {
while while (low <= high) {
import java.util.Scanner;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
System.out.println(s + " is not a palindrome");
String s = input.nextLine();          // This is line X
break;}
}}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
public static void main(String[] args) {
int low, high, isPalindrome;          // This is line Y
public class Palindrome {
isPalindrome = false;
}
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 3 to 2: public class Palindrome {
6. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Reordered from line 3 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4:         break;}
9. Reordered from line 4 to 5:         break;}
10. Moved from solution to problem at line 11:         break;}
11. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
12. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
Using Tutor selected  @ 1489279122007
13. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
14. Moved from problem to solution at line 6:     if (isPalindrome)
15. Moved from problem to solution at line 7:     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 9:     else
18. Moved from solution to problem at line 10:     else
19. Moved from problem to solution at line 9:     else
20. Moved from problem to solution at line 10:     while (low < high) {
21. Moved from problem to solution at line 11:    while while (low <= high) {
22. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
23. Moved from problem to solution at line 13:       low++; high--;
24. Moved from problem to solution at line 13:     }}
Submit Parsons Solution clicked @ 1489279527658
Please clear all the lines from the left panel before submitting your answer.
25. Moved from problem to solution at line 12:         break;}
26. Reordered from line 11 to 13:         break;}
Submit Parsons Solution clicked @ 1489279560309
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279579747
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279614268
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279614429
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279614590
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279614750
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279649155
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279650011
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279650172
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279650332
Please clear all the lines from the left panel before submitting your answer.
27. Moved from solution to problem at line 6:     low= 1; high = s.length() - 1; isPalindrome = true;
28. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489279691592
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693284
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693444
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693584
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693723
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693851
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279693990
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279694129
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279694397
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279694557
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279724840
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279725000
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279725163
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279725322
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279725471
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279836925
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279837107
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279837289
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279837428
Please clear all the lines from the left panel before submitting your answer.
29. Moved from solution to problem at line 21:     }}
30. Moved from problem to solution at line 15:     }}
Submit Parsons Solution clicked @ 1489279870094
Please clear all the lines from the left panel before submitting your answer.
31. Moved from solution to problem at line 6: import java.util.Scanner;
32. Reordered from line 2 to 9:   public static void main(String[] args) {
33. Moved from solution to problem at line 6:     if (isPalindrome)
34. Moved from solution to problem at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
35. Moved from solution to problem at line 4:     String s = input.nextLine();          // This is line X
36. Moved from solution to problem at line 10:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
37. Moved from problem to solution at line 2: import java.util.Scanner;
38. Reordered from line 2 to 1: import java.util.Scanner;
39. Moved from problem to solution at line 3:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
40. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
41. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
42. Moved from problem to solution at line 6:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489279938807
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489279940060
Please clear all the lines from the left panel before submitting your answer.
Explain Parsons Solution clicked @ 1489279967174
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (5 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
31. Moved from solution to problem at line 6
37. Moved from problem to solution at line 2
38. Reordered from line 2 to 1
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 8
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
13. Moved from problem to solution at line 5
36. Moved from solution to problem at line 10
40. Moved from problem to solution at line 3
Line 6 (4 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 4
12. Reordered from line 4 to 5
35. Moved from solution to problem at line 4
41. Moved from problem to solution at line 4
Line 5 (4 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
34. Moved from solution to problem at line 5
39. Moved from problem to solution at line 3
Line 15 (3 moves):     if (isPalindrome)
14. Moved from problem to solution at line 6
33. Moved from solution to problem at line 6
42. Moved from problem to solution at line 6
Line 17 (3 moves):     else
17. Moved from problem to solution at line 9
18. Moved from solution to problem at line 10
19. Moved from problem to solution at line 9
Line 9 (1 moves):     while (low < high) {
20. Moved from problem to solution at line 10
Line 9 (37) (1 moves):    while while (low <= high) {
21. Moved from problem to solution at line 11
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 12
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 7
27. Moved from solution to problem at line 6
28. Moved from problem to solution at line 8
Line 13 (1 moves):       low++; high--;
23. Moved from problem to solution at line 13
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
32. Reordered from line 2 to 9
Line 12 (5 moves):         break;}
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
10. Moved from solution to problem at line 11
25. Moved from problem to solution at line 12
26. Reordered from line 11 to 13
Line 19 (3 moves):     }}
24. Moved from problem to solution at line 13
29. Moved from solution to problem at line 21
30. Moved from problem to solution at line 15
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 40 steps before bailing out of a Parsons puzzle containing 15 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
else
while (low < high) {
while while (low <= high) {
System.out.println(s + " is not a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
low++; high--;
public static void main(String[] args) {
break;}
}}
The lines you deleted so far are as follows:
The correct answer is as follows:
public class MultiplicationTable {
public static void main(String[] args) {
System.out.println("           Multiplication Table");
System.out.print("    ");
for (int j = 1; j <= 9; j++)
System.out.print("   " + j);
System.out.println("\n-----------------------------------------");
for (int i = 1; i <= 9; i++) {
System.out.print(i + " | ");
for (int j = 1; j <= 9; j++) {
System.out.printf("%4d", i * j);}
System.out.println();}
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489280028639
Time spent on this problem: 1256 seconds
<HR>
