Problem No. 1
Using Template # 100
The Problem:
break;}
System.out.println(s + " is a palindrome");
else
if (isPalindrome)
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
}
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
low++; high--;
System.out.println(s + " is not a palindrome");
}}
while (low < high) {
while while (low <= high) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
break;}
System.out.println(s + " is a palindrome");
else
if (isPalindrome)
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
}
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
import java.util.Scanner;
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
low++; high--;
System.out.println(s + " is not a palindrome");
}}
while (low < high) {
while while (low <= high) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
*  Indented line 2: import java.util.Scanner;
3. Moved from problem to solution at line 1: public class Palindrome {
4. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
*  Indented line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
*  Outdented line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
7. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 6 to 5:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
11. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
*  Indented line 5:     int low, high, isPalindrome;          // This is line Y
*  Indented line 7:     String s = input.nextLine();          // This is line X
*  Outdented line 7:     String s = input.nextLine();          // This is line X
*  Outdented line 5:     int low, high, isPalindrome;          // This is line Y
*  Indented line 5:     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 7:     if (isPalindrome)
13. Reordered from line 8 to 7:     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
15. Reordered from line 9 to 8:     if (isPalindrome)
*  Indented line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
*  Indented line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 10:     else
18. Reordered from line 11 to 10:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 11:         isPalindrome = false;
20. Reordered from line 12 to 11:     else
*  Outdented line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
*  Outdented line 10:     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
*  Indented line 11:       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
23. Reordered from line 14 to 13:         isPalindrome = false;
24. Moved from problem to solution at line 14:         break;}
25. Reordered from line 14 to 15:         break;}
Submit Parsons Solution clicked @ 1489281385765
Please clear all the lines from the left panel before submitting your answer.
26. Moved from problem to solution at line 15:       if (s.charAt(low) != s.charAt(high)) {
27. Reordered from line 16 to 15:         break;}
28. Moved from problem to solution at line 16:    while while (low <= high) {
29. Moved from problem to solution at line 17:       low++; high--;
30. Moved from problem to solution at line 18:     while (low < high) {
31. Moved from problem to solution at line 19:     }}
32. Reordered from line 20 to 16:       if (s.charAt(low) != s.charAt(high)) {
33. Reordered from line 18 to 17:       low++; high--;
Submit Parsons Solution clicked @ 1489281419005
Please clear all the lines from the left panel before submitting your answer.
34. Moved from problem to solution at line 8:       }
Submit Parsons Solution clicked @ 1489281433234
This line is not in its correct location: public class Palindrome {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 1 to 3: public class Palindrome {
Submit Parsons Solution clicked @ 1489281453712
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: import java.util.Scanner;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 2 to 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1489281461970
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 2 to 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489281469673
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 5 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489281484663
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 6 to 8:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489281490266
This line is not in its correct location:       }
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 7 to 8:       }
Submit Parsons Solution clicked @ 1489281496868
This line is not in its correct location:       }
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 8 to 10:       }
Submit Parsons Solution clicked @ 1489281511593
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 8 to 9:     if (isPalindrome)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489281528414
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 9 to 20:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489281537287
This line is not in its correct location:       }
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 9 to 19:       }
Submit Parsons Solution clicked @ 1489281543117
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Moved from solution to problem at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489281554734
Please clear all the lines from the left panel before submitting your answer.
46. Moved from problem to solution at line 20:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489281559108
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 9 to 18:       System.out.println(s + " is a palindrome");
48. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489281567578
This line is not in its correct location:     else
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 9 to 17:     else
50. Reordered from line 17 to 16:     else
Submit Parsons Solution clicked @ 1489281574710
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 9 to 16:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489281586202
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 9 to 17:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489281594695
This line is not in its correct location:         break;}
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 9 to 16:         break;}
Submit Parsons Solution clicked @ 1489281600341
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 9 to 15:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489281605890
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 9 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489281611896
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 9 to 21:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489281624658
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 9 to 13:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489281699957
This line is not in its correct location:     else
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 9 to 11:     else
Explain Parsons Solution clicked @ 1489281703519
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (3 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
*  Indented line 2
36. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
3. Moved from problem to solution at line 1
35. Reordered from line 1 to 3
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
37. Reordered from line 2 to 3
Line 4 (5 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
4. Moved from problem to solution at line 3
5. Reordered from line 3 to 4
*  Indented line 4
*  Outdented line 4
7. Reordered from line 5 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 5
Line 6 (5 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 6
11. Reordered from line 6 to 7
*  Indented line 7
*  Outdented line 7
13. Reordered from line 8 to 7
Line 7 (7 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 4
9. Reordered from line 6 to 5
*  Indented line 5
*  Outdented line 5
*  Indented line 5
38. Reordered from line 5 to 6
39. Reordered from line 6 to 8
Line 8 (3 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 9
*  Indented line 9
*  Outdented line 9
Line 11 (3 moves):         isPalindrome = false;
19. Moved from problem to solution at line 11
23. Reordered from line 14 to 13
51. Reordered from line 9 to 16
Line 13 (3 moves):       low++; high--;
29. Moved from problem to solution at line 17
33. Reordered from line 18 to 17
55. Reordered from line 9 to 13
Line 17 (5 moves):     else
17. Moved from problem to solution at line 10
20. Reordered from line 12 to 11
49. Reordered from line 9 to 17
50. Reordered from line 17 to 16
58. Reordered from line 9 to 11
Line 9 (1 moves):     while (low < high) {
30. Moved from problem to solution at line 18
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
21. Moved from problem to solution at line 11
*  Indented line 11
47. Reordered from line 9 to 18
48. Reordered from line 18 to 16
57. Reordered from line 9 to 13
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
26. Moved from problem to solution at line 15
32. Reordered from line 20 to 16
54. Reordered from line 9 to 15
Line 12 (4 moves):         break;}
24. Moved from problem to solution at line 14
25. Reordered from line 14 to 15
27. Reordered from line 16 to 15
53. Reordered from line 9 to 16
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 13
52. Reordered from line 9 to 17
Line 14 (4 moves):       }
34. Moved from problem to solution at line 8
40. Reordered from line 7 to 8
41. Reordered from line 8 to 10
44. Reordered from line 9 to 19
Line 15 (4 moves):     if (isPalindrome)
12. Moved from problem to solution at line 7
15. Reordered from line 9 to 8
42. Reordered from line 8 to 9
43. Reordered from line 9 to 20
Line 8 (7) (6 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
14. Moved from problem to solution at line 8
*  Indented line 9
18. Reordered from line 11 to 10
*  Outdented line 10
45. Moved from solution to problem at line 9
46. Moved from problem to solution at line 20
Line 19 (1 moves):     }}
31. Moved from problem to solution at line 19
Line 9 (37) (2 moves):    while while (low <= high) {
28. Moved from problem to solution at line 16
56. Reordered from line 9 to 21
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 58 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
low++; high--;
else
while (low < high) {
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
break;}
System.out.println(s + " is not a palindrome");
}
if (isPalindrome)
low= 1; high = s.length() - 1; isPalindrome = true;
}}
while while (low <= high) {
The lines you deleted so far are as follows:
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489281705262
Time spent on this problem: 584 seconds
<HR>
