Problem No. 1
Using Template # 100
The Problem:
int low, high, isPalindrome;          // This is line Y
}}
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
System.out.println(s + " is a palindrome");
else
if (isPalindrome)
break;}
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
public class Palindrome {
import java.util.Scanner;
isPalindrome = false;
String s = input.nextLine();          // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
int low, high, isPalindrome;          // This is line Y
}}
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
System.out.println(s + " is a palindrome");
else
if (isPalindrome)
break;}
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
public static void main(String[] args) {
public class Palindrome {
import java.util.Scanner;
isPalindrome = false;
String s = input.nextLine();          // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to trash at line 0:    while while (low <= high) {
4. Moved from problem to trash at line 1:     while (low < high {
5. Moved from problem to solution at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
6. Reordered from line 2 to 3:     low= 0; high = s.length() - 1; isPalindrome = true;
7. Moved from problem to solution at line 3:   public static void main(String[] args) {
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 6:       System.out.println(s + " is not a palindrome");
11. Reordered from line 6 to 7:       System.out.println(s + " is not a palindrome");
12. Moved from problem to solution at line 7:     else
13. Moved from problem to solution at line 7:       System.out.println(s + " is a palindrome");
14. Moved from problem to solution at line 7:     if (isPalindrome)
15. Moved from problem to solution at line 7:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
16. Moved from problem to solution at line 8:     String s = input.nextLine();          // This is line X
17. Moved from problem to solution at line 9:     while (low < high) {
18. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
19. Moved from problem to solution at line 11:         isPalindrome = false;
20. Moved from problem to solution at line 12:       }
21. Moved from problem to solution at line 13:       low++; high--;
22. Moved from problem to solution at line 14:         break;}
23. Moved from problem to solution at line 18:     }}
24. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1489343516797
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 7 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
26. Reordered from line 8 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489343541272
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 14 to 12:         break;}
Submit Parsons Solution clicked @ 1489343553321
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489343564100
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (1 moves):   public static void main(String[] args) {
7. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 7
25. Reordered from line 7 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
16. Moved from problem to solution at line 8
26. Reordered from line 8 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
5. Moved from problem to solution at line 2
6. Reordered from line 2 to 3
Line 9 (1 moves):     while (low < high) {
17. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 10
Line 11 (1 moves):         isPalindrome = false;
19. Moved from problem to solution at line 11
Line 12 (2 moves):         break;}
22. Moved from problem to solution at line 14
27. Reordered from line 14 to 12
Line 13 (2 moves):       low++; high--;
21. Moved from problem to solution at line 13
28. Reordered from line 14 to 13
Line 14 (1 moves):       }
20. Moved from problem to solution at line 12
Line 15 (1 moves):     if (isPalindrome)
14. Moved from problem to solution at line 7
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 7
Line 17 (1 moves):     else
12. Moved from problem to solution at line 7
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
10. Moved from problem to solution at line 6
11. Reordered from line 6 to 7
Line 19 (2 moves):     }}
23. Moved from problem to solution at line 18
24. Reordered from line 18 to 19
Line 9 (37) (1 moves):    while while (low <= high) {
3. Moved from problem to trash at line 0
Line 9 (5) (1 moves):     while (low < high {
4. Moved from problem to trash at line 1
Your Grade:
You took 28 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489343615607
Time spent on this problem: 384 seconds
<HR>
