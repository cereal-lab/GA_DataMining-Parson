Problem No. 1
Using Template # 100
The Problem:
remainingAmount = remainingAmount % 25;
System.out.println("    " + numberOfDimes + " dimes");
remainingAmount = remainingAmount % 10;
int numberOfPennies = remainingAmount;
Int numberOfPennies = remainingAmount;
System.out.println("    " + numberOfOneDollars + " dollars");
public static void main(String[] args) {
remainingAmount = remainingAmount % 100;
int numberOfOneDollars = remainingAmount / 100;
System.out.println("    " + numberOfPennies + " pennies");
Scanner input = new Scanner(System.in); //This line should be placed before Line X
int numberOfDimes = remainingAmount / 10;
int numberOfQuarters = remainingAmount / 25;
remainingAmount = remainingAmount % 5;
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
int numberOfNickels = remainingAmount / 5;
public Class ComputeChange {
public class ComputeChange {
double amount = input.nextDouble();
int remainingAmount = (int)(amount * 100);
}}
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
import java.util.Scanner;
System.out.println("    " + numberOfNickels + " nickels");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
Using Template # 100
The Problem:
remainingAmount = remainingAmount % 25;
System.out.println("    " + numberOfDimes + " dimes");
remainingAmount = remainingAmount % 10;
int numberOfPennies = remainingAmount;
Int numberOfPennies = remainingAmount;
System.out.println("    " + numberOfOneDollars + " dollars");
public static void main(String[] args) {
remainingAmount = remainingAmount % 100;
int numberOfOneDollars = remainingAmount / 100;
System.out.println("    " + numberOfPennies + " pennies");
Scanner input = new Scanner(System.in); //This line should be placed before Line X
int numberOfDimes = remainingAmount / 10;
int numberOfQuarters = remainingAmount / 25;
remainingAmount = remainingAmount % 5;
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
int numberOfNickels = remainingAmount / 5;
public Class ComputeChange {
public class ComputeChange {
double amount = input.nextDouble();
int remainingAmount = (int)(amount * 100);
}}
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
import java.util.Scanner;
System.out.println("    " + numberOfNickels + " nickels");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class ComputeChange {
3. Reordered from line 1 to 2: public class ComputeChange {
4. Moved from problem to solution at line 2:  }}
5. Reordered from line 3 to 2: public class ComputeChange {
6. Moved from problem to solution at line 3:     int numberOfPennies = remainingAmount;
7. Moved from problem to solution at line 4:     int numberOfQuarters = remainingAmount / 25;
8. Moved from problem to solution at line 5:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
9. Moved from problem to solution at line 6:     remainingAmount = remainingAmount % 100;
10. Moved from problem to solution at line 7:     System.out.println("    " + numberOfQuarters + " quarters ");
11. Moved from problem to solution at line 8:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
12. Moved from problem to solution at line 9: public Class ComputeChange {
13. Moved from solution to trash at line 0: public Class ComputeChange {
14. Moved from problem to solution at line 9:     double amount = input.nextDouble();
15. Moved from problem to solution at line 10:     System.out.println("    " + numberOfNickels + " nickels");
16. Moved from problem to solution at line 11:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
17. Moved from problem to solution at line 12:     int numberOfOneDollars = remainingAmount / 100;
18. Moved from problem to solution at line 5:   public static void main(String[] args) {
19. Moved from problem to solution at line 14:     System.out.println("    " + numberOfPennies + " pennies");
20. Moved from problem to solution at line 10:     System.out.println("    " + numberOfOneDollars + " dollars");
21. Moved from problem to solution at line 8:     Int numberOfPennies = remainingAmount;
22. Moved from problem to solution at line 8:     remainingAmount = remainingAmount % 10;
23. Moved from problem to solution at line 7:     remainingAmount = remainingAmount % 25;
24. Moved from problem to solution at line 5:     System.out.println("    " + numberOfDimes + " dimes");
25. Moved from problem to solution at line 14:     int numberOfDimes = remainingAmount / 10;
26. Moved from problem to solution at line 16:     remainingAmount = remainingAmount % 5;
27. Moved from problem to solution at line 20:     int numberOfNickels = remainingAmount / 5;
28. Moved from problem to solution at line 19:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1488850623278
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 6 to 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1488850632080
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 4 to 5:     int numberOfPennies = remainingAmount;
31. Reordered from line 7 to 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
32. Reordered from line 13 to 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Submit Parsons Solution clicked @ 1488850656717
This line is not in its correct location:     int numberOfQuarters = remainingAmount / 25;
Move this line in its place:     double amount = input.nextDouble();
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 17 to 6:     double amount = input.nextDouble();
Submit Parsons Solution clicked @ 1488850674817
This line is not in its correct location:     int numberOfQuarters = remainingAmount / 25;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 8 to 7:     int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1488850680014
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 19 to 8:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1488850689136
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 9:     int numberOfPennies = remainingAmount;
37. Reordered from line 9 to 8:     int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1488850694396
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int numberOfOneDollars = remainingAmount / 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 22 to 8:     int numberOfOneDollars = remainingAmount / 100;
Submit Parsons Solution clicked @ 1488850701441
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     remainingAmount = remainingAmount % 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 13 to 9:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1488850707558
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int numberOfQuarters = remainingAmount / 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 11 to 10:     int numberOfQuarters = remainingAmount / 25;
Submit Parsons Solution clicked @ 1488850712294
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 13 to 11:     remainingAmount = remainingAmount % 25;
42. Reordered from line 17 to 12:     int numberOfDimes = remainingAmount / 10;
43. Reordered from line 16 to 13:     Int numberOfPennies = remainingAmount;
44. Reordered from line 16 to 14:     remainingAmount = remainingAmount % 10;
45. Reordered from line 14 to 13:     remainingAmount = remainingAmount % 10;
46. Moved from solution to trash at line 1:     Int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1488850741454
This line is not in its correct location:     int numberOfPennies = remainingAmount;
Move this line in its place:     int numberOfNickels = remainingAmount / 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 19 to 14:     System.out.println("    " + numberOfNickels + " nickels");
48. Reordered from line 21 to 15:     int numberOfNickels = remainingAmount / 5;
49. Reordered from line 15 to 14:     int numberOfNickels = remainingAmount / 5;
50. Reordered from line 16 to 15:     int numberOfPennies = remainingAmount;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
51. Reordered from line 20 to 15:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1488850761273
This line is not in its correct location:     System.out.println("    " + numberOfNickels + " nickels");
Move this line in its place:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 21 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1488850770773
This line is not in its correct location:     System.out.println("    " + numberOfNickels + " nickels");
Move this line in its place:     System.out.println("    " + numberOfOneDollars + " dollars");
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 21 to 18:     System.out.println("    " + numberOfOneDollars + " dollars");
54. Reordered from line 22 to 19:     System.out.println("    " + numberOfPennies + " pennies");
55. Reordered from line 23 to 20:  }}
56. Reordered from line 23 to 20:     System.out.println("    " + numberOfQuarters + " quarters ");
57. Reordered from line 21 to 23:  }}
58. Reordered from line 22 to 21:     System.out.println("    " + numberOfDimes + " dimes");
59. Reordered from line 19 to 23:     System.out.println("    " + numberOfPennies + " pennies");
60. Reordered from line 23 to 22:     System.out.println("    " + numberOfPennies + " pennies");
Submit Parsons Solution clicked @ 1488850791175
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (3 moves): public class ComputeChange {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
5. Reordered from line 3 to 2
Line 3 (2 moves):   public static void main(String[] args) {
18. Moved from problem to solution at line 5
29. Reordered from line 6 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
8. Moved from problem to solution at line 5
31. Reordered from line 7 to 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
11. Moved from problem to solution at line 8
32. Reordered from line 13 to 5
Line 6 (2 moves):     double amount = input.nextDouble();
14. Moved from problem to solution at line 9
33. Reordered from line 17 to 6
Line 7 (2 moves):     int remainingAmount = (int)(amount * 100);
28. Moved from problem to solution at line 19
35. Reordered from line 19 to 8
Line 8 (2 moves):     int numberOfOneDollars = remainingAmount / 100;
17. Moved from problem to solution at line 12
38. Reordered from line 22 to 8
Line 9 (2 moves):     remainingAmount = remainingAmount % 100;
9. Moved from problem to solution at line 6
39. Reordered from line 13 to 9
Line 10 (2 moves):     int numberOfQuarters = remainingAmount / 25;
7. Moved from problem to solution at line 4
40. Reordered from line 11 to 10
Line 11 (2 moves):     remainingAmount = remainingAmount % 25;
23. Moved from problem to solution at line 7
41. Reordered from line 13 to 11
Line 12 (2 moves):     int numberOfDimes = remainingAmount / 10;
25. Moved from problem to solution at line 14
42. Reordered from line 17 to 12
Line 13 (3 moves):     remainingAmount = remainingAmount % 10;
22. Moved from problem to solution at line 8
44. Reordered from line 16 to 14
45. Reordered from line 14 to 13
Line 14 (3 moves):     int numberOfNickels = remainingAmount / 5;
27. Moved from problem to solution at line 20
48. Reordered from line 21 to 15
49. Reordered from line 15 to 14
Line 15 (2 moves):     remainingAmount = remainingAmount % 5;
26. Moved from problem to solution at line 16
51. Reordered from line 20 to 15
Line 16 (6 moves):     int numberOfPennies = remainingAmount;
6. Moved from problem to solution at line 3
30. Reordered from line 4 to 5
34. Reordered from line 8 to 7
36. Reordered from line 7 to 9
37. Reordered from line 9 to 8
50. Reordered from line 16 to 15
Line 17 (2 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
16. Moved from problem to solution at line 11
52. Reordered from line 21 to 17
Line 18 (2 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
20. Moved from problem to solution at line 10
53. Reordered from line 21 to 18
Line 19 (2 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
10. Moved from problem to solution at line 7
56. Reordered from line 23 to 20
Line 20 (2 moves):     System.out.println("    " + numberOfDimes + " dimes");
24. Moved from problem to solution at line 5
58. Reordered from line 22 to 21
Line 21 (2 moves):     System.out.println("    " + numberOfNickels + " nickels");
15. Moved from problem to solution at line 10
47. Reordered from line 19 to 14
Line 22 (4 moves):     System.out.println("    " + numberOfPennies + " pennies");
19. Moved from problem to solution at line 14
54. Reordered from line 22 to 19
59. Reordered from line 19 to 23
60. Reordered from line 23 to 22
Line 23 (3 moves):  }}
4. Moved from problem to solution at line 2
55. Reordered from line 23 to 20
57. Reordered from line 21 to 23
Line 2 (8) (2 moves): public Class ComputeChange {
12. Moved from problem to solution at line 9
13. Moved from solution to trash at line 0
Line 16 (22) (3 moves):     Int numberOfPennies = remainingAmount;
21. Moved from problem to solution at line 8
43. Reordered from line 16 to 13
46. Moved from solution to trash at line 1
Your Grade:
You took 60 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1488850846467
Time spent on this problem: 286 seconds
<HR>
