Problem No. 1
Using Template # 100
The Problem:
remainingAmount = remainingAmount % 10;
int numberOfDimes = remainingAmount / 10;
import java.util.Scanner;
System.out.println("    " + numberOfPennies + " pennies");
int remainingAmount = (int)(amount * 100);
System.out.println("    " + numberOfNickels + " nickels");
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfPennies = remainingAmount;
remainingAmount = remainingAmount % 100;
public class ComputeChange {
public static void main(String[] args) {
public static void Main(String[] args) {
double amount = input.nextDouble();
int numberOfQuarters = remainingAmount / 25;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int numberOfNickels = remainingAmount / 5;
System.out.println("    " + numberOfDimes + " dimes");
remainingAmount = remainingAmount % 25;
remainingAmount = remainingAmount % 5;
int numberOfOneDollars = remainingAmount / 100;
}}
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 24 lines.
Re-assemble them with 26 (or fewer) moves for full credit
Using Template # 100
The Problem:
remainingAmount = remainingAmount % 10;
int numberOfDimes = remainingAmount / 10;
import java.util.Scanner;
System.out.println("    " + numberOfPennies + " pennies");
int remainingAmount = (int)(amount * 100);
System.out.println("    " + numberOfNickels + " nickels");
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfPennies = remainingAmount;
remainingAmount = remainingAmount % 100;
public class ComputeChange {
public static void main(String[] args) {
public static void Main(String[] args) {
double amount = input.nextDouble();
int numberOfQuarters = remainingAmount / 25;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int numberOfNickels = remainingAmount / 5;
System.out.println("    " + numberOfDimes + " dimes");
remainingAmount = remainingAmount % 25;
remainingAmount = remainingAmount % 5;
int numberOfOneDollars = remainingAmount / 100;
}}
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:  }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class ComputeChange {
4. Moved from problem to trash at line 0:   public static void Main(String[] args) {
5. Moved from problem to solution at line 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
7. Moved from problem to solution at line 5:     double amount = input.nextDouble();
8. Moved from problem to solution at line 6:     int numberOfOneDollars = remainingAmount / 100;
9. Moved from problem to solution at line 5:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
10. Moved from problem to solution at line 8:     int numberOfQuarters = remainingAmount / 25;
11. Moved from problem to solution at line 9:     int numberOfDimes = remainingAmount / 10;
12. Moved from problem to solution at line 10:     int numberOfNickels = remainingAmount / 5;
13. Moved from problem to solution at line 11:     int numberOfPennies = remainingAmount;
14. Moved from problem to solution at line 12:     int remainingAmount = (int)(amount * 100);
15. Moved from problem to solution at line 8:     System.out.println("    " + numberOfOneDollars + " dollars");
16. Moved from problem to solution at line 10:     System.out.println("    " + numberOfQuarters + " quarters ");
17. Moved from problem to solution at line 12:     System.out.println("    " + numberOfDimes + " dimes");
18. Moved from problem to solution at line 14:     System.out.println("    " + numberOfNickels + " nickels");
19. Moved from problem to solution at line 16:     System.out.println("    " + numberOfPennies + " pennies");
20. Moved from problem to solution at line 12:     remainingAmount = remainingAmount % 10;
Submit Parsons Solution clicked @ 1489249804346
Please clear all the lines from the left panel before submitting your answer.
21. Moved from problem to solution at line 19:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
22. Reordered from line 8 to 20:     System.out.println("    " + numberOfOneDollars + " dollars");
23. Reordered from line 20 to 19:     System.out.println("    " + numberOfOneDollars + " dollars");
24. Reordered from line 9 to 19:     System.out.println("    " + numberOfQuarters + " quarters ");
25. Reordered from line 11 to 20:     System.out.println("    " + numberOfDimes + " dimes");
26. Reordered from line 19 to 20:  }}
27. Moved from solution to problem at line 8:     remainingAmount = remainingAmount % 10;
28. Reordered from line 11 to 19:     System.out.println("    " + numberOfNickels + " nickels");
29. Reordered from line 19 to 18:     System.out.println("    " + numberOfNickels + " nickels");
30. Reordered from line 12 to 18:     System.out.println("    " + numberOfPennies + " pennies");
31. Moved from problem to trash at line 1:     remainingAmount = remainingAmount % 5;
32. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 25;
33. Moved from problem to trash at line 2:     remainingAmount = remainingAmount % 100;
34. Moved from problem to trash at line 1:     remainingAmount = remainingAmount % 10;
Submit Parsons Solution clicked @ 1489249886526
This line is not in its correct location:     int numberOfOneDollars = remainingAmount / 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 7:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1489249919072
This line is not in its correct location:     remainingAmount = remainingAmount % 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 8 to 7:     int numberOfOneDollars = remainingAmount / 100;
Submit Parsons Solution clicked @ 1489249930977
This line is not in its correct location:     int numberOfOneDollars = remainingAmount / 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 8 to 7:     remainingAmount = remainingAmount % 100;
Submit Parsons Solution clicked @ 1489249965009
This line is not in its correct location:     remainingAmount = remainingAmount % 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from solution to trash at line 4:     int numberOfOneDollars = remainingAmount / 100;
Submit Parsons Solution clicked @ 1489249980398
This line is not in its correct location:     remainingAmount = remainingAmount % 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 12 to 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1489250002478
This line is not in its correct location:     remainingAmount = remainingAmount % 100;
Insert this line in its place:     int numberOfOneDollars = remainingAmount / 100;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Moved from trash to solution at line 7:     int numberOfOneDollars = remainingAmount / 100;
Submit Parsons Solution clicked @ 1489250016580
This line is not in its correct location:     int numberOfOneDollars = remainingAmount / 100;
Move this line in its place:     int remainingAmount = (int)(amount * 100);
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 8 to 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1489250027220
This line is not in its correct location:     int numberOfDimes = remainingAmount / 10;
Insert this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 11:     remainingAmount = remainingAmount % 25;
43. Moved from trash to solution at line 13:     remainingAmount = remainingAmount % 10;
44. Moved from trash to solution at line 14:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1489250084633
This line is not in its correct location:     remainingAmount = remainingAmount % 5;
Move this line in its place:     int numberOfNickels = remainingAmount / 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 14 to 15:     remainingAmount = remainingAmount % 5;
Submit Parsons Solution clicked @ 1489250097211
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class ComputeChange {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
5. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
6. Moved from problem to solution at line 4
Line 5 (1 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
9. Moved from problem to solution at line 5
Line 6 (1 moves):     double amount = input.nextDouble();
7. Moved from problem to solution at line 5
Line 7 (3 moves):     int remainingAmount = (int)(amount * 100);
14. Moved from problem to solution at line 12
39. Reordered from line 12 to 7
41. Reordered from line 8 to 7
Line 8 (4 moves):     int numberOfOneDollars = remainingAmount / 100;
8. Moved from problem to solution at line 6
36. Reordered from line 8 to 7
38. Moved from solution to trash at line 4
40. Moved from trash to solution at line 7
Line 9 (3 moves):     remainingAmount = remainingAmount % 100;
33. Moved from problem to trash at line 2
35. Moved from trash to solution at line 7
37. Reordered from line 8 to 7
Line 10 (1 moves):     int numberOfQuarters = remainingAmount / 25;
10. Moved from problem to solution at line 8
Line 11 (2 moves):     remainingAmount = remainingAmount % 25;
32. Moved from problem to trash at line 2
42. Moved from trash to solution at line 11
Line 12 (1 moves):     int numberOfDimes = remainingAmount / 10;
11. Moved from problem to solution at line 9
Line 13 (4 moves):     remainingAmount = remainingAmount % 10;
20. Moved from problem to solution at line 12
27. Moved from solution to problem at line 8
34. Moved from problem to trash at line 1
43. Moved from trash to solution at line 13
Line 14 (1 moves):     int numberOfNickels = remainingAmount / 5;
12. Moved from problem to solution at line 10
Line 15 (3 moves):     remainingAmount = remainingAmount % 5;
31. Moved from problem to trash at line 1
44. Moved from trash to solution at line 14
45. Reordered from line 14 to 15
Line 16 (1 moves):     int numberOfPennies = remainingAmount;
13. Moved from problem to solution at line 11
Line 17 (1 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
21. Moved from problem to solution at line 19
Line 18 (3 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
15. Moved from problem to solution at line 8
22. Reordered from line 8 to 20
23. Reordered from line 20 to 19
Line 19 (2 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
16. Moved from problem to solution at line 10
24. Reordered from line 9 to 19
Line 20 (2 moves):     System.out.println("    " + numberOfDimes + " dimes");
17. Moved from problem to solution at line 12
25. Reordered from line 11 to 20
Line 21 (3 moves):     System.out.println("    " + numberOfNickels + " nickels");
18. Moved from problem to solution at line 14
28. Reordered from line 11 to 19
29. Reordered from line 19 to 18
Line 22 (2 moves):     System.out.println("    " + numberOfPennies + " pennies");
19. Moved from problem to solution at line 16
30. Reordered from line 12 to 18
Line 23 (2 moves):  }}
1. Moved from problem to solution at line 0
26. Reordered from line 19 to 20
Line 3 (3) (1 moves):   public static void Main(String[] args) {
4. Moved from problem to trash at line 0
Your Grade:
You took 45 steps to solve a Parsons puzzle containing 24 lines of code.
Next Problem clicked @ 1489250100226
Time spent on this problem: 738 seconds
<HR>
