Problem No. 1
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
else
}
if (s.charAt(low) != s.charAt(high)) {
break;}
while (low < high {
while while (low <= high) {
while (low < high) {
String s = input.nextLine();          // This is line X
low= 0; high = s.length() - 1; isPalindrome = true;
low++; high--;
if (isPalindrome)
}}
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println(s + " is a palindrome");
isPalindrome = false;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
else
}
if (s.charAt(low) != s.charAt(high)) {
break;}
while (low < high {
while while (low <= high) {
while (low < high) {
String s = input.nextLine();          // This is line X
low= 0; high = s.length() - 1; isPalindrome = true;
low++; high--;
if (isPalindrome)
}}
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
System.out.println(s + " is not a palindrome");
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2: public class Palindrome {
4. Moved from problem to solution at line 3:   public static void main(String[] args) {
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
10. Moved from problem to solution at line 9:     while (low < high) {
11. Moved from problem to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
12. Moved from problem to solution at line 11:       low++; high--;
13. Moved from problem to solution at line 11:         isPalindrome = false;
14. Moved from problem to solution at line 12:       }
15. Moved from problem to solution at line 7:         break;}
16. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
17. Reordered from line 16 to 15:     }}
18. Moved from problem to solution at line 16:     if (isPalindrome)
19. Moved from problem to solution at line 17:       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 18:     else
Submit Parsons Solution clicked @ 1489390932375
Please clear all the lines from the left panel before submitting your answer.
21. Moved from problem to trash at line 0:     while (low < high {
22. Moved from problem to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489390950468
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 15 to 19:     }}
Submit Parsons Solution clicked @ 1489390967534
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
25. Reordered from line 8 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489390993136
This line is not in its correct location:         break;}
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Moved from solution to problem at line 1:         break;}
27. Moved from problem to trash at line 2:         break;}
Submit Parsons Solution clicked @ 1489391031281
This line is not in its correct location:       }
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 12 to 14:       }
29. Reordered from line 13 to 14:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489391052181
This line is not in its correct location:       low++; high--;
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 12 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489391056970
This line is not in its correct location:       }
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 13 to 12:       low++; high--;
32. Reordered from line 12 to 13:       low++; high--;
33. Reordered from line 18 to 14:     }}
Submit Parsons Solution clicked @ 1489391088314
This line is not in its correct location:       }
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from trash to solution at line 12:         break;}
35. Reordered from line 13 to 14:       }
36. Reordered from line 16 to 19:     if (isPalindrome)
37. Reordered from line 19 to 15:     if (isPalindrome)
38. Reordered from line 16 to 19:     }}
Submit Parsons Solution clicked @ 1489391136679
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
3. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
24. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
25. Reordered from line 8 to 6
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
9. Moved from problem to solution at line 8
Line 9 (1 moves):     while (low < high) {
10. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 10
Line 11 (1 moves):         isPalindrome = false;
13. Moved from problem to solution at line 11
Line 12 (4 moves):         break;}
15. Moved from problem to solution at line 7
26. Moved from solution to problem at line 1
27. Moved from problem to trash at line 2
34. Moved from trash to solution at line 12
Line 13 (4 moves):       low++; high--;
12. Moved from problem to solution at line 11
30. Reordered from line 12 to 13
31. Reordered from line 13 to 12
32. Reordered from line 12 to 13
Line 14 (3 moves):       }
14. Moved from problem to solution at line 12
28. Reordered from line 12 to 14
35. Reordered from line 13 to 14
Line 15 (4 moves):     if (isPalindrome)
18. Moved from problem to solution at line 16
29. Reordered from line 13 to 14
36. Reordered from line 16 to 19
37. Reordered from line 19 to 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 17
Line 17 (1 moves):     else
20. Moved from problem to solution at line 18
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 15
Line 19 (5 moves):     }}
1. Moved from problem to solution at line 0
17. Reordered from line 16 to 15
23. Reordered from line 15 to 19
33. Reordered from line 18 to 14
38. Reordered from line 16 to 19
Line 9 (5) (1 moves):     while (low < high {
21. Moved from problem to trash at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
22. Moved from problem to trash at line 1
Your Grade:
You took 38 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489391148462
Time spent on this problem: 1096 seconds
<HR>
