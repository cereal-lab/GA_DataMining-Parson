Problem No. 1
Using Template # 100
The Problem:
System.out.print(i + " | ");
public static void main(String[] args) {
System.out.println("           Multiplication Table");
System.out.prcharln("           Multiplication Table");
}}
public class MultiplicationTable {
System.out.print("   " + j);
System.out.println("\n-----------------------------------------");
for (int j = 1; j <= 9; j++) {
for (int i = 1; i <= 9; i++) {
for (int j = 1; j <= 9; j++)
for (int j = 1; j <= 9; j++
System.out.printf("%4d", i * j);}
System.out.println();}
System.out.print("    ");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.print(i + " | ");
public static void main(String[] args) {
System.out.println("           Multiplication Table");
System.out.prcharln("           Multiplication Table");
}}
public class MultiplicationTable {
System.out.print("   " + j);
System.out.println("\n-----------------------------------------");
for (int j = 1; j <= 9; j++) {
for (int i = 1; i <= 9; i++) {
for (int j = 1; j <= 9; j++)
for (int j = 1; j <= 9; j++
System.out.printf("%4d", i * j);}
System.out.println();}
System.out.print("    ");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: }}
2. Moved from problem to solution at line 1: public class MultiplicationTable {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to trash at line 0:     System.out.prcharln("           Multiplication Table");
5. Moved from problem to solution at line 3:     System.out.println("           Multiplication Table");
6. Moved from problem to solution at line 4:     System.out.println("\n-----------------------------------------");
7. Moved from problem to trash at line 1:     for (int j = 1; j <= 9; j++
8. Moved from problem to trash at line 2:     for (int j = 1; j <= 9; j++)
9. Moved from problem to solution at line 3:         System.out.printf("%4d", i * j);}
10. Reordered from line 4 to 3:     System.out.println("           Multiplication Table");
11. Moved from problem to solution at line 6:       for (int j = 1; j <= 9; j++) {
12. Moved from problem to solution at line 7:     for (int i = 1; i <= 9; i++) {
13. Reordered from line 7 to 6:     for (int i = 1; i <= 9; i++) {
14. Moved from problem to solution at line 8:       System.out.print(i + " | ");
15. Moved from problem to solution at line 9:       System.out.print("   " + j);
16. Moved from problem to solution at line 10:       System.out.println();}
17. Moved from problem to solution at line 11:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489442228051
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Reordered from line 11 to 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489442234087
This line is not in its correct location:         System.out.printf("%4d", i * j);}
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Reordered from line 8 to 5:       for (int j = 1; j <= 9; j++) {
Submit Parsons Solution clicked @ 1489442247722
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Insert this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Moved from trash to solution at line 5:     for (int j = 1; j <= 9; j++)
Submit Parsons Solution clicked @ 1489442261379
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 11 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1489442276143
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     System.out.println("\n-----------------------------------------");
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 9 to 7:     System.out.println("\n-----------------------------------------");
Submit Parsons Solution clicked @ 1489442282203
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 10 to 8:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1489442287443
This line is not in its correct location:       for (int j = 1; j <= 9; j++) {
Move this line in its place:       System.out.print(i + " | ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 11 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1489442294087
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
2. Moved from problem to solution at line 1
Line 2 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
5. Moved from problem to solution at line 3
10. Reordered from line 4 to 3
Line 4 (2 moves):     System.out.print("    ");
17. Moved from problem to solution at line 11
18. Reordered from line 11 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
8. Moved from problem to trash at line 2
20. Moved from trash to solution at line 5
Line 6 (2 moves):       System.out.print("   " + j);
15. Moved from problem to solution at line 9
21. Reordered from line 11 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
6. Moved from problem to solution at line 4
22. Reordered from line 9 to 7
Line 8 (3 moves):     for (int i = 1; i <= 9; i++) {
12. Moved from problem to solution at line 7
13. Reordered from line 7 to 6
23. Reordered from line 10 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
14. Moved from problem to solution at line 8
24. Reordered from line 11 to 9
Line 10 (2 moves):       for (int j = 1; j <= 9; j++) {
11. Moved from problem to solution at line 6
19. Reordered from line 8 to 5
Line 11 (1 moves):         System.out.printf("%4d", i * j);}
9. Moved from problem to solution at line 3
Line 12 (1 moves):       System.out.println();}
16. Moved from problem to solution at line 10
Line 13 (1 moves): }}
1. Moved from problem to solution at line 0
Line 3 (11) (1 moves):     System.out.prcharln("           Multiplication Table");
4. Moved from problem to trash at line 0
Line 5 (5) (1 moves):     for (int j = 1; j <= 9; j++
7. Moved from problem to trash at line 1
Your Grade:
You took 24 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489442308543
Time spent on this problem: 320 seconds
<HR>
