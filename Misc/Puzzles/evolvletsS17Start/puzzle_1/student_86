Problem No. 1
Using Template # 100
The Problem:
System.out.print("   " + j);
System.out.print(i + " | ");
System.out.println();}
for (int i = 1; i <= 9; i++)
for (int i = 1; i <= 9; i++) {
}}
for (int j = 1; j <= 9; j++) {
System.out.print("    ");
public class MultiplicationTable {
for (int j = 1; j <= 9; j++)
public static void main(String[] args) {
System.out.prcharln("           Multiplication Table");
System.out.println("           Multiplication Table");
System.out.println("\n-----------------------------------------");
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.print("   " + j);
System.out.print(i + " | ");
System.out.println();}
for (int i = 1; i <= 9; i++)
for (int i = 1; i <= 9; i++) {
}}
for (int j = 1; j <= 9; j++) {
System.out.print("    ");
public class MultiplicationTable {
for (int j = 1; j <= 9; j++)
public static void main(String[] args) {
System.out.prcharln("           Multiplication Table");
System.out.println("           Multiplication Table");
System.out.println("\n-----------------------------------------");
System.out.printf("%4d", i * j);}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2:     System.out.println("           Multiplication Table");
5. Reordered from line 2 to 3:     System.out.println("           Multiplication Table");
6. Moved from problem to solution at line 3:     System.out.print("    ");
7. Reordered from line 3 to 4:     System.out.print("    ");
8. Moved from problem to solution at line 4:     for (int j = 1; j <= 9; j++)
9. Reordered from line 4 to 5:     for (int j = 1; j <= 9; j++)
10. Moved from problem to solution at line 5:       System.out.print("   " + j);
11. Reordered from line 5 to 6:       System.out.print("   " + j);
12. Moved from problem to solution at line 6:     System.out.println("\n-----------------------------------------");
13. Reordered from line 6 to 7:     System.out.println("\n-----------------------------------------");
14. Moved from problem to solution at line 7:     for (int i = 1; i <= 9; i++) {
15. Reordered from line 7 to 8:     for (int i = 1; i <= 9; i++) {
16. Moved from problem to solution at line 8:       System.out.print(i + " | ");
17. Reordered from line 8 to 9:       System.out.print(i + " | ");
18. Moved from problem to solution at line 9:       for (int j = 1; j <= 9; j++) {
19. Reordered from line 9 to 10:       for (int j = 1; j <= 9; j++) {
20. Moved from problem to solution at line 10:         System.out.printf("%4d", i * j);}
21. Reordered from line 10 to 11:         System.out.printf("%4d", i * j);}
22. Moved from problem to solution at line 11:       System.out.println();}
23. Reordered from line 11 to 12:       System.out.println();}
24. Moved from problem to solution at line 12: }}
25. Reordered from line 12 to 13: }}
26. Moved from problem to trash at line 0:     System.out.prcharln("           Multiplication Table");
27. Moved from problem to trash at line 1:     for (int i = 1; i <= 9; i++)
Submit Parsons Solution clicked @ 1489357175498
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     System.out.print("    ");
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 6 (2 moves):       System.out.print("   " + j);
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
16. Moved from problem to solution at line 8
17. Reordered from line 8 to 9
Line 10 (2 moves):       for (int j = 1; j <= 9; j++) {
18. Moved from problem to solution at line 9
19. Reordered from line 9 to 10
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
20. Moved from problem to solution at line 10
21. Reordered from line 10 to 11
Line 12 (2 moves):       System.out.println();}
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
Line 13 (2 moves): }}
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 13
Line 3 (11) (1 moves):     System.out.prcharln("           Multiplication Table");
26. Moved from problem to trash at line 0
Line 8 (14) (1 moves):     for (int i = 1; i <= 9; i++)
27. Moved from problem to trash at line 1
Your Grade:
You took 27 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489357180770
Time spent on this problem: 265 seconds
<HR>
