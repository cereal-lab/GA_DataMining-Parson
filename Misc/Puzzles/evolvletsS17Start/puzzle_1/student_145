Problem No. 1
Using Template # 100
The Problem:
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
public static void main(String[] args) {
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
else
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
System.out.println(s + " is not a palindrome");
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
if (isPalindrome)
}}
import java.util.Scanner;
}
public class Palindrome {
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
break;}
public static void main(String[] args) {
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
isPalindrome = false;
else
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
System.out.println(s + " is not a palindrome");
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
String s = input.nextLine();          // This is line X
if (isPalindrome)
}}
import java.util.Scanner;
}
public class Palindrome {
System.out.println(s + " is a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:       System.out.println(s + " is a palindrome");
9. Reordered from line 4 to 5:       System.out.println(s + " is a palindrome");
10. Moved from problem to solution at line 5:     if (isPalindrome)
11. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
12. Moved from solution to problem at line 14:       System.out.println(s + " is a palindrome");
13. Moved from solution to problem at line 15:     if (isPalindrome)
14. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
16. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
17. Moved from problem to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
18. Reordered from line 7 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 8:     while (low < high) {
20. Reordered from line 8 to 9:     while (low < high) {
21. Moved from problem to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
22. Reordered from line 9 to 10:       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to solution at line 10:         isPalindrome = false;
24. Reordered from line 10 to 11:         isPalindrome = false;
25. Moved from problem to solution at line 11:         break;}
26. Reordered from line 11 to 12:         break;}
27. Moved from problem to solution at line 12:       low++; high--;
28. Reordered from line 12 to 13:       low++; high--;
29. Moved from problem to solution at line 13:       }
30. Reordered from line 14 to 13:       low++; high--;
31. Moved from problem to solution at line 14:     if (isPalindrome)
32. Reordered from line 14 to 15:     if (isPalindrome)
33. Moved from problem to solution at line 15:       System.out.println(s + " is a palindrome");
34. Reordered from line 15 to 16:       System.out.println(s + " is a palindrome");
35. Moved from problem to solution at line 16:     else
36. Reordered from line 16 to 17:     else
37. Moved from problem to solution at line 17:       System.out.println(s + " is not a palindrome");
38. Reordered from line 17 to 18:       System.out.println(s + " is not a palindrome");
39. Moved from problem to solution at line 18:     }}
40. Reordered from line 18 to 19:     }}
41. Moved from problem to trash at line 0:    while while (low <= high) {
42. Moved from problem to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1489436581963
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
14. Moved from problem to solution at line 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 5
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 6
16. Reordered from line 6 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 7
18. Reordered from line 7 to 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to solution at line 8
20. Reordered from line 8 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
21. Moved from problem to solution at line 9
22. Reordered from line 9 to 10
Line 11 (2 moves):         isPalindrome = false;
23. Moved from problem to solution at line 10
24. Reordered from line 10 to 11
Line 12 (2 moves):         break;}
25. Moved from problem to solution at line 11
26. Reordered from line 11 to 12
Line 13 (3 moves):       low++; high--;
27. Moved from problem to solution at line 12
28. Reordered from line 12 to 13
30. Reordered from line 14 to 13
Line 14 (1 moves):       }
29. Moved from problem to solution at line 13
Line 15 (4 moves):     if (isPalindrome)
10. Moved from problem to solution at line 5
13. Moved from solution to problem at line 15
31. Moved from problem to solution at line 14
32. Reordered from line 14 to 15
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
12. Moved from solution to problem at line 14
33. Moved from problem to solution at line 15
34. Reordered from line 15 to 16
Line 17 (2 moves):     else
35. Moved from problem to solution at line 16
36. Reordered from line 16 to 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
37. Moved from problem to solution at line 17
38. Reordered from line 17 to 18
Line 19 (2 moves):     }}
39. Moved from problem to solution at line 18
40. Reordered from line 18 to 19
Line 9 (37) (1 moves):    while while (low <= high) {
41. Moved from problem to trash at line 0
Line 9 (5) (1 moves):     while (low < high {
42. Moved from problem to trash at line 1
Your Grade:
You took 42 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489436591376
Time spent on this problem: 268 seconds
<HR>
