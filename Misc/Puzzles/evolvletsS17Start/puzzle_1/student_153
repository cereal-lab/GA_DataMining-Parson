Problem No. 1
Using Template # 100
The Problem:
Int numberOfPennies = remainingAmount;
int numberOfPennies = remainingAmount;
remainingAmount = remainingAmount % 10;
System.out.println("    " + numberOfPennies + " pennies");
public static void main(String[] args) {
remainingAmount = remainingAmount % 100;
remainingAmount = remainingAmount % 5;
remainingAmount = remainingAmount % 25;
System.out.println("    " + numberOfNickels + " nickels");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
System.out.println("    " + numberOfQuarters + " quarters ");
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfDimes + " dimes");
import java.util.Scanner;
int numberOfNickels = remainingAmount / 5;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int remainingAmount = (int)(amount * 100);
}}
int numberOfOneDollars = remainingAmount / 100;
double amount = input.nextDouble();
int numberOfQuarters = remainingAmount / 25;
Public class ComputeChange {
public class ComputeChange {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 25 lines.
Re-assemble them with 27 (or fewer) moves for full credit
Using Template # 100
The Problem:
Int numberOfPennies = remainingAmount;
int numberOfPennies = remainingAmount;
remainingAmount = remainingAmount % 10;
System.out.println("    " + numberOfPennies + " pennies");
public static void main(String[] args) {
remainingAmount = remainingAmount % 100;
remainingAmount = remainingAmount % 5;
remainingAmount = remainingAmount % 25;
System.out.println("    " + numberOfNickels + " nickels");
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
System.out.println("    " + numberOfQuarters + " quarters ");
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfDimes + " dimes");
import java.util.Scanner;
int numberOfNickels = remainingAmount / 5;
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
int remainingAmount = (int)(amount * 100);
}}
int numberOfOneDollars = remainingAmount / 100;
double amount = input.nextDouble();
int numberOfQuarters = remainingAmount / 25;
Public class ComputeChange {
public class ComputeChange {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class ComputeChange {
2. Moved from problem to trash at line 0: Public class ComputeChange {
3. Moved from problem to solution at line 1:   public static void main(String[] args) {
4. Reordered from line 1 to 2:   public static void main(String[] args) {
5. Moved from problem to trash at line 1:     Int numberOfPennies = remainingAmount;
6. Moved from problem to solution at line 2:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
7. Reordered from line 2 to 3:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
8. Moved from problem to solution at line 1: import java.util.Scanner;
9. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
10. Moved from problem to solution at line 5:     double amount = input.nextDouble();
11. Reordered from line 5 to 6:     double amount = input.nextDouble();
12. Moved from problem to solution at line 6:     int numberOfOneDollars = remainingAmount / 100;
13. Reordered from line 6 to 7:     int numberOfOneDollars = remainingAmount / 100;
14. Moved from problem to solution at line 7:     remainingAmount = remainingAmount % 100;
15. Reordered from line 7 to 8:     remainingAmount = remainingAmount % 100;
16. Moved from problem to solution at line 8:     System.out.println("    " + numberOfOneDollars + " dollars");
17. Reordered from line 8 to 9:     System.out.println("    " + numberOfOneDollars + " dollars");
18. Moved from problem to solution at line 9:     int numberOfQuarters = remainingAmount / 25;
19. Reordered from line 9 to 10:     int numberOfQuarters = remainingAmount / 25;
20. Moved from problem to solution at line 10:     remainingAmount = remainingAmount % 25;
21. Reordered from line 11 to 10:     int numberOfQuarters = remainingAmount / 25;
22. Moved from problem to solution at line 11:     int numberOfDimes = remainingAmount / 10;
23. Reordered from line 11 to 12:     int numberOfDimes = remainingAmount / 10;
24. Moved from problem to solution at line 12:     remainingAmount = remainingAmount % 10;
25. Reordered from line 12 to 13:     remainingAmount = remainingAmount % 10;
26. Moved from problem to solution at line 13:     remainingAmount = remainingAmount % 5;
27. Moved from problem to solution at line 14:     int numberOfNickels = remainingAmount / 5;
28. Reordered from line 15 to 13:     remainingAmount = remainingAmount % 10;
29. Reordered from line 15 to 14:     int numberOfNickels = remainingAmount / 5;
30. Moved from problem to solution at line 15:     System.out.println("    " + numberOfNickels + " nickels");
31. Reordered from line 15 to 16:     System.out.println("    " + numberOfNickels + " nickels");
32. Moved from problem to solution at line 12:     System.out.println("    " + numberOfQuarters + " quarters ");
33. Moved from problem to solution at line 15:     System.out.println("    " + numberOfDimes + " dimes");
34. Moved from problem to solution at line 18:     int numberOfPennies = remainingAmount;
35. Moved from problem to solution at line 19:     System.out.println("    " + numberOfPennies + " pennies");
36. Reordered from line 20 to 18:     System.out.println("    " + numberOfNickels + " nickels");
37. Moved from problem to solution at line 20:     int remainingAmount = (int)(amount * 100);
38. Moved from solution to problem at line 15:     int remainingAmount = (int)(amount * 100);
39. Moved from problem to solution at line 20:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
40. Reordered from line 20 to 21:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
41. Moved from problem to solution at line 21:  }}
42. Reordered from line 21 to 22:  }}
Submit Parsons Solution clicked @ 1489457802783
Please clear all the lines from the left panel before submitting your answer.
43. Moved from problem to solution at line 7:     int remainingAmount = (int)(amount * 100);
Submit Parsons Solution clicked @ 1489457822551
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     int numberOfQuarters = remainingAmount / 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 11 to 10:     int numberOfQuarters = remainingAmount / 25;
Submit Parsons Solution clicked @ 1489457834221
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     remainingAmount = remainingAmount % 25;
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 12 to 11:     remainingAmount = remainingAmount % 25;
46. Reordered from line 14 to 12:     int numberOfDimes = remainingAmount / 10;
47. Reordered from line 15 to 13:     remainingAmount = remainingAmount % 10;
48. Reordered from line 17 to 14:     int numberOfNickels = remainingAmount / 5;
49. Reordered from line 19 to 15:     System.out.println("    " + numberOfNickels + " nickels");
Submit Parsons Solution clicked @ 1489457844995
This line is not in its correct location:     System.out.println("    " + numberOfNickels + " nickels");
Move this line in its place:     remainingAmount = remainingAmount % 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 16 to 15:     System.out.println("    " + numberOfOneDollars + " dollars");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
51. Reordered from line 17 to 16:     System.out.println("    " + numberOfQuarters + " quarters ");
52. Reordered from line 18 to 17:     System.out.println("    " + numberOfDimes + " dimes");
Submit Parsons Solution clicked @ 1489457853919
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     remainingAmount = remainingAmount % 5;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 19 to 15:     remainingAmount = remainingAmount % 5;
54. Reordered from line 20 to 16:     int numberOfPennies = remainingAmount;
Submit Parsons Solution clicked @ 1489457864644
This line is not in its correct location:     System.out.println("    " + numberOfOneDollars + " dollars");
Move this line in its place:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 22 to 17:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Submit Parsons Solution clicked @ 1489457869056
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
8. Moved from problem to solution at line 1
Line 2 (1 moves): public class ComputeChange {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 1
4. Reordered from line 1 to 2
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
9. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
6. Moved from problem to solution at line 2
7. Reordered from line 2 to 3
Line 6 (2 moves):     double amount = input.nextDouble();
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 7 (3 moves):     int remainingAmount = (int)(amount * 100);
37. Moved from problem to solution at line 20
38. Moved from solution to problem at line 15
43. Moved from problem to solution at line 7
Line 8 (2 moves):     int numberOfOneDollars = remainingAmount / 100;
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
Line 9 (2 moves):     remainingAmount = remainingAmount % 100;
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
Line 10 (4 moves):     int numberOfQuarters = remainingAmount / 25;
18. Moved from problem to solution at line 9
19. Reordered from line 9 to 10
21. Reordered from line 11 to 10
44. Reordered from line 11 to 10
Line 11 (2 moves):     remainingAmount = remainingAmount % 25;
20. Moved from problem to solution at line 10
45. Reordered from line 12 to 11
Line 12 (3 moves):     int numberOfDimes = remainingAmount / 10;
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
46. Reordered from line 14 to 12
Line 13 (4 moves):     remainingAmount = remainingAmount % 10;
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 13
28. Reordered from line 15 to 13
47. Reordered from line 15 to 13
Line 14 (3 moves):     int numberOfNickels = remainingAmount / 5;
27. Moved from problem to solution at line 14
29. Reordered from line 15 to 14
48. Reordered from line 17 to 14
Line 15 (2 moves):     remainingAmount = remainingAmount % 5;
26. Moved from problem to solution at line 13
53. Reordered from line 19 to 15
Line 16 (2 moves):     int numberOfPennies = remainingAmount;
34. Moved from problem to solution at line 18
54. Reordered from line 20 to 16
Line 17 (3 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
39. Moved from problem to solution at line 20
40. Reordered from line 20 to 21
55. Reordered from line 22 to 17
Line 18 (3 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
16. Moved from problem to solution at line 8
17. Reordered from line 8 to 9
50. Reordered from line 16 to 15
Line 19 (2 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
32. Moved from problem to solution at line 12
51. Reordered from line 17 to 16
Line 20 (2 moves):     System.out.println("    " + numberOfDimes + " dimes");
33. Moved from problem to solution at line 15
52. Reordered from line 18 to 17
Line 21 (4 moves):     System.out.println("    " + numberOfNickels + " nickels");
30. Moved from problem to solution at line 15
31. Reordered from line 15 to 16
36. Reordered from line 20 to 18
49. Reordered from line 19 to 15
Line 22 (1 moves):     System.out.println("    " + numberOfPennies + " pennies");
35. Moved from problem to solution at line 19
Line 23 (2 moves):  }}
41. Moved from problem to solution at line 21
42. Reordered from line 21 to 22
Line 2 (33) (1 moves): Public class ComputeChange {
2. Moved from problem to trash at line 0
Line 16 (22) (1 moves):     Int numberOfPennies = remainingAmount;
5. Moved from problem to trash at line 1
Your Grade:
You took 55 steps to solve a Parsons puzzle containing 25 lines of code.
Next Problem clicked @ 1489457876735
Time spent on this problem: 1360 seconds
<HR>
