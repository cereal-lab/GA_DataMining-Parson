Problem No. 1
Using Template # 100
The Problem:
while (low < high) {
while (low < high {
import java.util.Scanner;
isPalindrome = false;
if (isPalindrome)
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
if (s.charAt(low) != s.charAt(high)) {
break;}
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
else
}
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
}}
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
while (low < high) {
while (low < high {
import java.util.Scanner;
isPalindrome = false;
if (isPalindrome)
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
if (s.charAt(low) != s.charAt(high)) {
break;}
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
else
}
System.out.println(s + " is a palindrome");
String s = input.nextLine();          // This is line X
}}
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:     }}
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 5 to 7:     }}
13. Reordered from line 5 to 7:     String s = input.nextLine();          // This is line X
14. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
15. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
16. Moved from problem to solution at line 8:     if (isPalindrome)
17. Moved from problem to solution at line 9:         isPalindrome = false;
18. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 10:     low= 1; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 11:     else
21. Moved from problem to solution at line 11:     while (low < high) {
22. Moved from problem to solution at line 12:     while (low < high {
23. Moved from problem to solution at line 15:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 16:       System.out.println(s + " is not a palindrome");
25. Moved from problem to solution at line 17:       }
26. Reordered from line 17 to 18:       }
27. Reordered from line 15 to 13:       System.out.println(s + " is a palindrome");
28. Moved from problem to solution at line 11:       if (s.charAt(low) != s.charAt(high)) {
29. Moved from problem to trash at line 0:         break;}
30. Moved from problem to solution at line 14:       low++; high--;
Submit Parsons Solution clicked @ 1489446609004
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 7 to 4:     String s = input.nextLine();          // This is line X
32. Reordered from line 7 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489446628840
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 5 to 4:     String s = input.nextLine();          // This is line X
34. Reordered from line 7 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489446657224
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 4 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489446664197
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 7 to 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489446669152
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489446674624
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 11 to 4:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489446735412
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 4 to 8:       if (s.charAt(low) != s.charAt(high)) {
40. Reordered from line 8 to 7:       if (s.charAt(low) != s.charAt(high)) {
41. Reordered from line 9 to 8:     if (isPalindrome)
42. Reordered from line 8 to 4:     if (isPalindrome)
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Moved from trash to solution at line 8:         break;}
44. Reordered from line 11 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
45. Reordered from line 8 to 10:     low= 0; high = s.length() - 1; isPalindrome = true;
46. Reordered from line 11 to 8:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489446811196
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
48. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489446856428
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 8 to 6:     int low, high, isPalindrome;          // This is line Y
50. Reordered from line 8 to 7:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489446867532
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 8 to 6:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489446878547
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 8 to 6:     String s = input.nextLine();          // This is line X
53. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489446891467
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 10 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489446901067
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 12 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
56. Reordered from line 12 to 9:     low= 0; high = s.length() - 1; isPalindrome = true;
57. Reordered from line 11 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489446918531
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489446924015
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 13 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489446937847
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
60. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489446945175
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 15 to 11:       low++; high--;
Submit Parsons Solution clicked @ 1489446958180
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 15 to 11:     while (low < high {
Submit Parsons Solution clicked @ 1489446967863
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 13 to 11:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489446972855
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
64. Reordered from line 16 to 11:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489446984387
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 20 to 11:     }}
66. Reordered from line 11 to 21:     }}
67. Reordered from line 19 to 11:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489446997351
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
68. Reordered from line 20 to 11:       }
69. Reordered from line 11 to 20:       }
70. Reordered from line 19 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489447012362
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
71. Reordered from line 19 to 20:     else
72. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1489447032899
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
73. Reordered from line 18 to 13:     if (isPalindrome)
74. Reordered from line 16 to 14:     low= 1; high = s.length() - 1; isPalindrome = true;
75. Reordered from line 17 to 15:     while (low < high {
76. Reordered from line 18 to 16:       low++; high--;
77. Reordered from line 17 to 20:       System.out.println(s + " is not a palindrome");
78. Reordered from line 18 to 20:       }
Submit Parsons Solution clicked @ 1489447059763
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
79. Reordered from line 15 to 13:     while (low < high {
Submit Parsons Solution clicked @ 1489447073170
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
80. Reordered from line 15 to 13:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447076974
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
81. Reordered from line 17 to 13:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489447081951
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
82. Reordered from line 19 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489447085723
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
83. Reordered from line 19 to 13:     else
Submit Parsons Solution clicked @ 1489447090683
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
84. Reordered from line 20 to 19:       }
85. Reordered from line 20 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489447097883
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
86. Reordered from line 19 to 14:     if (isPalindrome)
87. Reordered from line 18 to 15:     low= 1; high = s.length() - 1; isPalindrome = true;
88. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
89. Reordered from line 19 to 18:     while (low < high {
Submit Parsons Solution clicked @ 1489447121115
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
90. Reordered from line 18 to 14:     while (low < high {
Submit Parsons Solution clicked @ 1489447128863
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
91. Reordered from line 16 to 14:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447133727
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
92. Reordered from line 17 to 14:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489447138218
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
93. Reordered from line 19 to 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489447144763
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
94. Reordered from line 20 to 14:       }
Submit Parsons Solution clicked @ 1489447151855
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
95. Reordered from line 19 to 15:     if (isPalindrome)
96. Reordered from line 15 to 21:     if (isPalindrome)
97. Reordered from line 19 to 15:     else
Submit Parsons Solution clicked @ 1489447172715
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
98. Reordered from line 21 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489447178307
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
99. Reordered from line 17 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489447182674
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
100. Reordered from line 19 to 16:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447186711
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
101. Reordered from line 16 to 15:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447192375
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
102. Reordered from line 19 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489447196291
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
103. Reordered from line 20 to 15:     while (low < high {
Submit Parsons Solution clicked @ 1489447200251
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
104. Reordered from line 21 to 15:     }}
Submit Parsons Solution clicked @ 1489447207634
This line is not in its correct location:     }}
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
105. Reordered from line 17 to 15:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489447213642
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
106. Reordered from line 19 to 15:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489447217526
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
107. Reordered from line 18 to 15:     while (low < high {
Submit Parsons Solution clicked @ 1489447221055
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
108. Reordered from line 19 to 15:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447225235
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
109. Reordered from line 19 to 15:     }}
Submit Parsons Solution clicked @ 1489447229707
This line is not in its correct location:     }}
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
110. Reordered from line 20 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489447232958
This line is not in its correct location:     }}
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
111. Reordered from line 17 to 16:     low= 1; high = s.length() - 1; isPalindrome = true;
112. Reordered from line 18 to 17:     while (low < high {
113. Reordered from line 17 to 16:     while (low < high {
114. Reordered from line 19 to 21:       System.out.println(s + " is not a palindrome");
115. Reordered from line 18 to 21:     }}
Submit Parsons Solution clicked @ 1489447267670
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
116. Reordered from line 16 to 17:     while (low < high {
Submit Parsons Solution clicked @ 1489447274190
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
117. Reordered from line 16 to 21:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447278610
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
118. Reordered from line 16 to 21:     while (low < high {
Submit Parsons Solution clicked @ 1489447282610
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
119. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
120. Moved from solution to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1489447294298
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (4 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
36. Reordered from line 7 to 5
47. Reordered from line 6 to 4
Line 5 (4 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
32. Reordered from line 7 to 4
48. Reordered from line 6 to 5
Line 6 (9 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
13. Reordered from line 5 to 7
14. Reordered from line 7 to 6
31. Reordered from line 7 to 4
33. Reordered from line 5 to 4
35. Reordered from line 4 to 6
37. Reordered from line 7 to 6
50. Reordered from line 8 to 7
52. Reordered from line 8 to 6
Line 7 (5 moves):     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 5
34. Reordered from line 7 to 6
46. Reordered from line 11 to 8
49. Reordered from line 8 to 6
53. Reordered from line 8 to 7
Line 8 (5 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 9
44. Reordered from line 11 to 8
45. Reordered from line 8 to 10
56. Reordered from line 12 to 9
58. Reordered from line 9 to 8
Line 9 (2 moves):     while (low < high) {
21. Moved from problem to solution at line 11
59. Reordered from line 13 to 9
Line 10 (6 moves):       if (s.charAt(low) != s.charAt(high)) {
28. Moved from problem to solution at line 11
38. Reordered from line 11 to 4
39. Reordered from line 4 to 8
40. Reordered from line 8 to 7
54. Reordered from line 10 to 8
60. Reordered from line 11 to 10
Line 11 (2 moves):         isPalindrome = false;
17. Moved from problem to solution at line 9
70. Reordered from line 19 to 11
Line 12 (3 moves):         break;}
29. Moved from problem to trash at line 0
43. Moved from trash to solution at line 8
72. Reordered from line 17 to 12
Line 13 (4 moves):       low++; high--;
30. Moved from problem to solution at line 14
61. Reordered from line 15 to 11
76. Reordered from line 18 to 16
85. Reordered from line 20 to 13
Line 14 (7 moves):       }
25. Moved from problem to solution at line 17
26. Reordered from line 17 to 18
68. Reordered from line 20 to 11
69. Reordered from line 11 to 20
78. Reordered from line 18 to 20
84. Reordered from line 20 to 19
94. Reordered from line 20 to 14
Line 15 (11 moves):     if (isPalindrome)
16. Moved from problem to solution at line 8
41. Reordered from line 9 to 8
42. Reordered from line 8 to 4
51. Reordered from line 8 to 6
57. Reordered from line 11 to 12
73. Reordered from line 18 to 13
86. Reordered from line 19 to 14
95. Reordered from line 19 to 15
96. Reordered from line 15 to 21
98. Reordered from line 21 to 15
110. Reordered from line 20 to 15
Line 16 (8 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 15
27. Reordered from line 15 to 13
64. Reordered from line 16 to 11
81. Reordered from line 17 to 13
88. Reordered from line 18 to 16
92. Reordered from line 17 to 14
102. Reordered from line 19 to 15
105. Reordered from line 17 to 15
Line 17 (4 moves):     else
20. Moved from problem to solution at line 11
71. Reordered from line 19 to 20
83. Reordered from line 19 to 13
97. Reordered from line 19 to 15
Line 18 (8 moves):       System.out.println(s + " is not a palindrome");
24. Moved from problem to solution at line 16
67. Reordered from line 19 to 11
77. Reordered from line 17 to 20
82. Reordered from line 19 to 13
93. Reordered from line 19 to 14
99. Reordered from line 17 to 15
106. Reordered from line 19 to 15
114. Reordered from line 19 to 21
Line 19 (7 moves):     }}
10. Moved from problem to solution at line 5
12. Reordered from line 5 to 7
65. Reordered from line 20 to 11
66. Reordered from line 11 to 21
104. Reordered from line 21 to 15
109. Reordered from line 19 to 15
115. Reordered from line 18 to 21
Line 8 (7) (13 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 10
55. Reordered from line 12 to 8
63. Reordered from line 13 to 11
74. Reordered from line 16 to 14
80. Reordered from line 15 to 13
87. Reordered from line 18 to 15
91. Reordered from line 16 to 14
100. Reordered from line 19 to 16
101. Reordered from line 16 to 15
108. Reordered from line 19 to 15
111. Reordered from line 17 to 16
117. Reordered from line 16 to 21
119. Moved from solution to trash at line 0
Line 9 (5) (13 moves):     while (low < high {
22. Moved from problem to solution at line 12
62. Reordered from line 15 to 11
75. Reordered from line 17 to 15
79. Reordered from line 15 to 13
89. Reordered from line 19 to 18
90. Reordered from line 18 to 14
103. Reordered from line 20 to 15
107. Reordered from line 18 to 15
112. Reordered from line 18 to 17
113. Reordered from line 17 to 16
116. Reordered from line 16 to 17
118. Reordered from line 16 to 21
120. Moved from solution to trash at line 1
Your Grade:
You took 120 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489447342966
Time spent on this problem: 1222 seconds
<HR>
