Problem No. 1
Using Template # 100
The Problem:
String s = input.nextLine();          // This is line X
else
import java.util.Scanner;
public static void main(String[] args) {
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
int low, high, isPalindrome;          // This is line Y
while (low < high {
while while (low <= high) {
while (low < high) {
isPalindrome = false;
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
if (isPalindrome)
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
break;}
}
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
String s = input.nextLine();          // This is line X
else
import java.util.Scanner;
public static void main(String[] args) {
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
int low, high, isPalindrome;          // This is line Y
while (low < high {
while while (low <= high) {
while (low < high) {
isPalindrome = false;
}}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
low++; high--;
if (isPalindrome)
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
break;}
}
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 7:     while (low < high {
14. Reordered from line 7 to 8:     while (low < high {
15. Moved from solution to problem at line 11:     while (low < high {
16. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
17. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 8:         isPalindrome = false;
19. Reordered from line 8 to 9:         isPalindrome = false;
20. Moved from problem to solution at line 9:     else
21. Reordered from line 9 to 10:     else
22. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
23. Reordered from line 10 to 11:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 10:       System.out.println(s + " is not a palindrome");
25. Moved from problem to trash at line 0:     low= 0; high = s.length() - 1; isPalindrome = true;
26. Moved from problem to trash at line 1:         break;}
27. Moved from problem to solution at line 12:     }}
28. Reordered from line 12 to 13:     }}
29. Moved from problem to solution at line 13:       }
30. Moved from problem to trash at line 2:     if (isPalindrome)
31. Moved from problem to trash at line 3:       low++; high--;
32. Moved from trash to problem at line 21:     low= 0; high = s.length() - 1; isPalindrome = true;
33. Moved from problem to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
34. Moved from problem to trash at line 2:     while (low < high) {
35. Moved from problem to trash at line 2:    while while (low <= high) {
36. Moved from problem to trash at line 1:     while (low < high {
Submit Parsons Solution clicked @ 1489333029905
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from trash to solution at line 6:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489333104497
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489333144345
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Moved from solution to trash at line 2:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489333175317
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from solution to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489333182728
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489333210554
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489333224167
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from trash to solution at line 9:     while (low < high) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489333249245
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1489333262438
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from solution to trash at line 1:       System.out.println(s + " is not a palindrome");
45. Moved from trash to solution at line 11:       low++; high--;
Submit Parsons Solution clicked @ 1489333273005
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 11 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1489333279514
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 13 to 12:         break;}
Submit Parsons Solution clicked @ 1489333286659
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 16 to 14:       }
Submit Parsons Solution clicked @ 1489333295217
This line is not in its correct location:     else
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489333307357
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
51. Moved from solution to trash at line 3:     else
Submit Parsons Solution clicked @ 1489333318518
This line is not in its correct location:     }}
Insert this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 17:     else
Submit Parsons Solution clicked @ 1489333325821
This line is not in its correct location:     }}
Insert this line in its place:       System.out.println(s + " is not a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Moved from trash to solution at line 18:       System.out.println(s + " is not a palindrome");
54. Moved from solution to problem at line 1:     }}
55. Moved from problem to solution at line 18:     }}
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
56. Reordered from line 18 to 19:     }}
Submit Parsons Solution clicked @ 1489333408943
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
10. Reordered from line 5 to 6
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
38. Moved from solution to trash at line 2
40. Moved from trash to solution at line 7
Line 8 (6 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to trash at line 0
32. Moved from trash to problem at line 21
33. Moved from problem to trash at line 3
37. Moved from trash to solution at line 6
39. Moved from solution to trash at line 3
41. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
34. Moved from problem to trash at line 2
42. Moved from trash to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 7
17. Reordered from line 7 to 8
Line 11 (2 moves):         isPalindrome = false;
18. Moved from problem to solution at line 8
19. Reordered from line 8 to 9
Line 12 (3 moves):         break;}
26. Moved from problem to trash at line 1
43. Moved from trash to solution at line 12
47. Reordered from line 13 to 12
Line 13 (3 moves):       low++; high--;
31. Moved from problem to trash at line 3
45. Moved from trash to solution at line 11
46. Reordered from line 11 to 12
Line 14 (2 moves):       }
29. Moved from problem to solution at line 13
48. Reordered from line 16 to 14
Line 15 (2 moves):     if (isPalindrome)
30. Moved from problem to trash at line 2
49. Moved from trash to solution at line 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 10
23. Reordered from line 10 to 11
50. Reordered from line 17 to 16
Line 17 (4 moves):     else
20. Moved from problem to solution at line 9
21. Reordered from line 9 to 10
51. Moved from solution to trash at line 3
52. Moved from trash to solution at line 17
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
24. Moved from problem to solution at line 10
44. Moved from solution to trash at line 1
53. Moved from trash to solution at line 18
Line 19 (5 moves):     }}
27. Moved from problem to solution at line 12
28. Reordered from line 12 to 13
54. Moved from solution to problem at line 1
55. Moved from problem to solution at line 18
56. Reordered from line 18 to 19
Line 9 (37) (1 moves):    while while (low <= high) {
35. Moved from problem to trash at line 2
Line 9 (5) (4 moves):     while (low < high {
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
15. Moved from solution to problem at line 11
36. Moved from problem to trash at line 1
Your Grade:
You took 56 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489333415327
Time spent on this problem: 923 seconds
<HR>
