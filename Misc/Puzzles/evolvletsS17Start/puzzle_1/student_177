Problem No. 1
Using Template # 100
The Problem:
public class SentinelValue {
public Class SentinelValue {
data = input.nextInt(); sum = 0;
System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
Scanner input = new Scanner(System.in);  //This line should immediately be placed before Line X
int data, sum;                           // This is line X
System.out.print("Enter an int value (the program exits if the input is 0): ");
}}
public static void main(String[] args) {
sum += data;
while (data != 1) {
while (data != 0) {
System.out.println("The sum is " + sum);
data = input.nextInt();}                                                         // This is line Y
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
Using Template # 100
The Problem:
public class SentinelValue {
public Class SentinelValue {
data = input.nextInt(); sum = 0;
System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
Scanner input = new Scanner(System.in);  //This line should immediately be placed before Line X
int data, sum;                           // This is line X
System.out.print("Enter an int value (the program exits if the input is 0): ");
}}
public static void main(String[] args) {
sum += data;
while (data != 1) {
while (data != 0) {
System.out.println("The sum is " + sum);
data = input.nextInt();}                                                         // This is line Y
import java.util.Scanner;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class SentinelValue {
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Reordered from line 2 to 3:   public static void main(String[] args) {
5. Moved from problem to trash at line 0: public Class SentinelValue {
6. Moved from problem to solution at line 3:     int data, sum;                           // This is line X
7. Reordered from line 3 to 4:     int data, sum;                           // This is line X
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in);  //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5:       System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
10. Reordered from line 6 to 5:     int data, sum;                           // This is line X
11. Moved from problem to solution at line 6:       data = input.nextInt();}                                                         // This is line Y
12. Reordered from line 7 to 6:       System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
13. Moved from problem to solution at line 6:     while (data != 0) {
14. Moved from problem to solution at line 8:     data = input.nextInt(); sum = 0;
15. Reordered from line 8 to 9:     data = input.nextInt(); sum = 0;
16. Moved from problem to solution at line 9:     }}
17. Moved from solution to problem at line 3:     }}
18. Moved from problem to solution at line 9:     System.out.print("Enter an int value (the program exits if the input is 0): ");
19. Moved from problem to solution at line 10:       sum += data;
20. Reordered from line 11 to 10:     data = input.nextInt(); sum = 0;
21. Moved from problem to solution at line 11:     System.out.println("The sum is " + sum);
22. Reordered from line 12 to 11:       sum += data;
23. Moved from problem to solution at line 12:     }}
24. Reordered from line 13 to 12:     System.out.println("The sum is " + sum);
25. Moved from problem to trash at line 1:     while (data != 1) {
Submit Parsons Solution clicked @ 1489457727228
This line is not in its correct location:     while (data != 0) {
Move this line in its place:     System.out.print("Enter an int value (the program exits if the input is 0): ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 9 to 6:     System.out.print("Enter an int value (the program exits if the input is 0): ");
Submit Parsons Solution clicked @ 1489457754368
This line is not in its correct location:     while (data != 0) {
Move this line in its place:     data = input.nextInt(); sum = 0;
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 11 to 7:       sum += data;
Submit Parsons Solution clicked @ 1489457765593
This line is not in its correct location:       sum += data;
Move this line in its place:     data = input.nextInt(); sum = 0;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 11 to 8:     data = input.nextInt(); sum = 0;
Submit Parsons Solution clicked @ 1489457773474
This line is not in its correct location:       sum += data;
Move this line in its place:     data = input.nextInt(); sum = 0;
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 8 to 7:     data = input.nextInt(); sum = 0;
Submit Parsons Solution clicked @ 1489457790884
This line is not in its correct location:       sum += data;
Move this line in its place:     while (data != 0) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 9 to 8:     while (data != 0) {
31. Reordered from line 9 to 12:       sum += data;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489457801742
This line is not in its correct location:       System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
Move this line in its place:       sum += data;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 12 to 9:       sum += data;
Submit Parsons Solution clicked @ 1489457807399
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class SentinelValue {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
4. Reordered from line 2 to 3
Line 4 (1 moves):     Scanner input = new Scanner(System.in);  //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
Line 5 (3 moves):     int data, sum;                           // This is line X
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
10. Reordered from line 6 to 5
Line 6 (2 moves):     System.out.print("Enter an int value (the program exits if the input is 0): ");
18. Moved from problem to solution at line 9
26. Reordered from line 9 to 6
Line 7 (5 moves):     data = input.nextInt(); sum = 0;
14. Moved from problem to solution at line 8
15. Reordered from line 8 to 9
20. Reordered from line 11 to 10
28. Reordered from line 11 to 8
29. Reordered from line 8 to 7
Line 8 (2 moves):     while (data != 0) {
13. Moved from problem to solution at line 6
30. Reordered from line 9 to 8
Line 9 (5 moves):       sum += data;
19. Moved from problem to solution at line 10
22. Reordered from line 12 to 11
27. Reordered from line 11 to 7
31. Reordered from line 9 to 12
32. Reordered from line 12 to 9
Line 10 (2 moves):       System.out.print("Enter an int value (the program exits if the input is 0): ");  //This line should immediately be placed before Line Y
9. Moved from problem to solution at line 5
12. Reordered from line 7 to 6
Line 11 (1 moves):       data = input.nextInt();}                                                         // This is line Y
11. Moved from problem to solution at line 6
Line 12 (2 moves):     System.out.println("The sum is " + sum);
21. Moved from problem to solution at line 11
24. Reordered from line 13 to 12
Line 13 (3 moves):     }}
16. Moved from problem to solution at line 9
17. Moved from solution to problem at line 3
23. Moved from problem to solution at line 12
Line 2 (8) (1 moves): public Class SentinelValue {
5. Moved from problem to trash at line 0
Line 8 (12) (1 moves):     while (data != 1) {
25. Moved from problem to trash at line 1
Your Grade:
You took 32 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489457818369
Time spent on this problem: 551 seconds
<HR>
