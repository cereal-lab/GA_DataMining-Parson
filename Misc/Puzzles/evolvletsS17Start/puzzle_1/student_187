Problem No. 1
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
import java.util.Scanner;
low++; high--;
}
}}
System.out.println(s + " is a palindrome");
else
isPalindrome = false;
System.out.println(s + " is not a palindrome");
break;}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while (low < high) {
while while (low <= high) {
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
import java.util.Scanner;
low++; high--;
}
}}
System.out.println(s + " is a palindrome");
else
isPalindrome = false;
System.out.println(s + " is not a palindrome");
break;}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while (low < high) {
while while (low <= high) {
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489536230474
Please clear all the lines from the left panel before submitting your answer.
6. Moved from problem to solution at line 3:     if (isPalindrome)
7. Reordered from line 3 to 4:     if (isPalindrome)
8. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 7:       low++; high--;
12. Moved from problem to solution at line 8:       System.out.println(s + " is a palindrome");
13. Moved from problem to solution at line 9:     }}
14. Moved from problem to solution at line 10:       }
15. Moved from problem to solution at line 11:         break;}
16. Moved from problem to solution at line 12:         isPalindrome = false;
17. Moved from problem to solution at line 13:     else
18. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
19. Moved from problem to solution at line 15:     while (low < high) {
20. Moved from problem to solution at line 16:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
21. Moved from problem to solution at line 17:    while while (low <= high) {
22. Moved from problem to solution at line 18:       if (s.charAt(low) != s.charAt(high)) {
23. Moved from problem to solution at line 19:     low= 0; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 20:     low= 1; high = s.length() - 1; isPalindrome = true;
25. Reordered from line 10 to 21:       }
26. Reordered from line 9 to 21:     }}
Submit Parsons Solution clicked @ 1489536296005
This line is not in its correct location:     String s = input.nextLine();          // This is line X
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 5 to 7:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489536309771
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 5 to 4:     int low, high, isPalindrome;          // This is line Y
29. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489536327638
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Reordered from line 14 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
31. Reordered from line 8 to 7:     String s = input.nextLine();          // This is line X
32. Reordered from line 9 to 19:       System.out.println(s + " is a palindrome");
33. Reordered from line 18 to 10:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489536356289
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Reordered from line 6 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
35. Reordered from line 7 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489536402249
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489536440453
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 17 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
38. Reordered from line 18 to 9:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489536458814
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Moved from solution to problem at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489536468766
Please clear all the lines from the left panel before submitting your answer.
40. Moved from problem to solution at line 15:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489536476178
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 16 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489536482563
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 18 to 10:       if (s.charAt(low) != s.charAt(high)) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Explain Parsons Solution clicked @ 1489536497998
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4
29. Reordered from line 5 to 4
36. Reordered from line 6 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
20. Moved from problem to solution at line 16
30. Reordered from line 14 to 6
34. Reordered from line 6 to 4
Line 6 (4 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 5
27. Reordered from line 5 to 7
31. Reordered from line 8 to 7
35. Reordered from line 7 to 5
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 6
28. Reordered from line 5 to 4
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 19
37. Reordered from line 17 to 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to solution at line 15
41. Reordered from line 16 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
22. Moved from problem to solution at line 18
42. Reordered from line 18 to 10
Line 13 (1 moves):       low++; high--;
11. Moved from problem to solution at line 7
Line 12 (1 moves):         break;}
15. Moved from problem to solution at line 11
Line 15 (3 moves):     if (isPalindrome)
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
33. Reordered from line 18 to 10
Line 11 (1 moves):         isPalindrome = false;
16. Moved from problem to solution at line 12
Line 17 (1 moves):     else
17. Moved from problem to solution at line 13
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 14
Line 8 (7) (4 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 20
38. Reordered from line 18 to 9
39. Moved from solution to problem at line 2
40. Moved from problem to solution at line 15
Line 9 (37) (1 moves):    while while (low <= high) {
21. Moved from problem to solution at line 17
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
12. Moved from problem to solution at line 8
32. Reordered from line 9 to 19
Line 14 (2 moves):       }
14. Moved from problem to solution at line 10
25. Reordered from line 10 to 21
Line 19 (2 moves):     }}
13. Moved from problem to solution at line 9
26. Reordered from line 9 to 21
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
low++; high--;
break;}
if (isPalindrome)
isPalindrome = false;
else
System.out.println(s + " is not a palindrome");
low= 1; high = s.length() - 1; isPalindrome = true;
while while (low <= high) {
System.out.println(s + " is a palindrome");
}
}}
The lines you deleted so far are as follows:
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489536606722
Time spent on this problem: 486 seconds
<HR>
