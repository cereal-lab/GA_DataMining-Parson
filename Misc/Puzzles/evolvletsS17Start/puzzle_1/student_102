Problem No. 1
Using Template # 100
The Problem:
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}}
break;}
if (isPalindrome)
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
isPalindrome = false;
while (low < high {
while (low < high) {
low++; high--;
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
else
String s = input.nextLine();          // This is line X
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}}
break;}
if (isPalindrome)
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
isPalindrome = false;
while (low < high {
while (low < high) {
low++; high--;
int low, high, isPalindrome;          // This is line Y
import java.util.Scanner;
else
String s = input.nextLine();          // This is line X
System.out.println(s + " is not a palindrome");
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2: import java.util.Scanner;
5. Reordered from line 2 to 3: import java.util.Scanner;
6. Reordered from line 3 to 1: import java.util.Scanner;
7. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
10. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
12. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
13. Moved from problem to solution at line 6:     while (low < high {
14. Reordered from line 6 to 7:     while (low < high {
15. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
16. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 7:     int low, high, isPalindrome;          // This is line Y
18. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
19. Moved from problem to solution at line 9:         isPalindrome = false;
20. Reordered from line 9 to 10:         isPalindrome = false;
21. Moved from problem to solution at line 10:     else
22. Reordered from line 10 to 11:     else
23. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
25. Moved from solution to problem at line 4:     int low, high, isPalindrome;          // This is line Y
26. Moved from solution to problem at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
27. Moved from problem to solution at line 11:     if (isPalindrome)
28. Moved from solution to problem at line 6:     if (isPalindrome)
29. Moved from problem to solution at line 11:       low++; high--;
30. Reordered from line 11 to 12:       low++; high--;
31. Moved from problem to solution at line 11:         break;}
32. Moved from problem to solution at line 13:     if (isPalindrome)
33. Reordered from line 13 to 14:     if (isPalindrome)
34. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
35. Reordered from line 14 to 15:       System.out.println(s + " is a palindrome");
36. Reordered from line 12 to 15:     else
37. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
38. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
39. Moved from problem to solution at line 16:     }}
40. Reordered from line 16 to 17:     }}
Submit Parsons Solution clicked @ 1489356068027
Please clear all the lines from the left panel before submitting your answer.
41. Moved from problem to trash at line 0:     int low, high, isPalindrome;          // This is line Y
42. Moved from problem to trash at line 1:     while (low < high) {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Moved from problem to solution at line 13:       }
44. Moved from problem to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489356106987
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Moved from trash to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
46. Moved from solution to trash at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489356127507
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
48. Moved from solution to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489356136235
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Moved from solution to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
50. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489356150235
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Moved from solution to trash at line 2:     while (low < high {
Submit Parsons Solution clicked @ 1489356169587
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489356182691
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489356189195
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (3 moves): import java.util.Scanner;
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
6. Reordered from line 3 to 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 3
8. Reordered from line 3 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 5
12. Reordered from line 5 to 6
18. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 4
10. Reordered from line 4 to 5
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
17. Moved from problem to solution at line 7
25. Moved from solution to problem at line 4
41. Moved from problem to trash at line 0
50. Moved from trash to solution at line 7
Line 8 (5 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
23. Moved from problem to solution at line 8
46. Moved from solution to trash at line 2
47. Moved from trash to solution at line 8
49. Moved from solution to trash at line 3
52. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
42. Moved from problem to trash at line 1
53. Moved from trash to solution at line 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 7
16. Reordered from line 7 to 8
Line 11 (2 moves):         isPalindrome = false;
19. Moved from problem to solution at line 9
20. Reordered from line 9 to 10
Line 12 (1 moves):         break;}
31. Moved from problem to solution at line 11
Line 13 (2 moves):       low++; high--;
29. Moved from problem to solution at line 11
30. Reordered from line 11 to 12
Line 14 (1 moves):       }
43. Moved from problem to solution at line 13
Line 15 (4 moves):     if (isPalindrome)
27. Moved from problem to solution at line 11
28. Moved from solution to problem at line 6
32. Moved from problem to solution at line 13
33. Reordered from line 13 to 14
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
34. Moved from problem to solution at line 14
35. Reordered from line 14 to 15
Line 17 (3 moves):     else
21. Moved from problem to solution at line 10
22. Reordered from line 10 to 11
36. Reordered from line 12 to 15
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
37. Moved from problem to solution at line 15
38. Reordered from line 15 to 16
Line 19 (2 moves):     }}
39. Moved from problem to solution at line 16
40. Reordered from line 16 to 17
Line 8 (7) (5 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 9
26. Moved from solution to problem at line 2
44. Moved from problem to trash at line 2
45. Moved from trash to solution at line 8
48. Moved from solution to trash at line 2
Line 9 (5) (3 moves):     while (low < high {
13. Moved from problem to solution at line 6
14. Reordered from line 6 to 7
51. Moved from solution to trash at line 2
Your Grade:
You took 53 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489356196123
Time spent on this problem: 528 seconds
<HR>
