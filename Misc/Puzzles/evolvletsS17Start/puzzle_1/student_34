Problem No. 1
Using Template # 100
The Problem:
}
else
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
while (low < high) {
while while (low <= high) {
System.out.println(s + " is not a palindrome");
isPalindrome = false;
System.out.println(s + " is a palindrome");
import java.util.Scanner;
low++; high--;
if (isPalindrome)
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
public class Palindrome {
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
}
else
if (s.charAt(low) != s.charAt(high)) {
public static void main(String[] args) {
while (low < high) {
while while (low <= high) {
System.out.println(s + " is not a palindrome");
isPalindrome = false;
System.out.println(s + " is a palindrome");
import java.util.Scanner;
low++; high--;
if (isPalindrome)
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
public class Palindrome {
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
10. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
12. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
13. Moved from problem to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
14. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
16. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489184229131
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489184230666
Please clear all the lines from the left panel before submitting your answer.
Submit Parsons Solution clicked @ 1489184231458
Please clear all the lines from the left panel before submitting your answer.
17. Moved from problem to solution at line 9:       if (s.charAt(low) != s.charAt(high)) {
18. Reordered from line 10 to 9:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 10:     while (low < high) {
20. Moved from problem to solution at line 11:    while while (low <= high) {
21. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
22. Moved from problem to solution at line 13:         isPalindrome = false;
23. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 15:     if (isPalindrome)
25. Moved from problem to solution at line 16:       low++; high--;
26. Moved from problem to solution at line 17:     }}
27. Moved from problem to solution at line 18:     else
28. Moved from problem to solution at line 19:         break;}
29. Moved from problem to solution at line 20:       }
30. Reordered from line 17 to 21:     }}
31. Reordered from line 19 to 20:       }
32. Reordered from line 18 to 19:         break;}
33. Reordered from line 18 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489184300818
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489184302942
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
34. Moved from solution to problem at line 8:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489184316514
Please clear all the lines from the left panel before submitting your answer.
35. Moved from problem to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489184322682
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489184325514
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 10 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489184335602
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 11 to 12:    while while (low <= high) {
38. Reordered from line 12 to 21:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489184357090
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 11 to 21:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489184365762
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 12 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489184371882
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 17 to 12:         break;}
Submit Parsons Solution clicked @ 1489184378926
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 16 to 13:       low++; high--;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489184383162
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 18 to 14:       }
Submit Parsons Solution clicked @ 1489184389582
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 17 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489184393834
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 17 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489184401047
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1489184405382
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from solution to trash at line 0:    while while (low <= high) {
48. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489184421754
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (3 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
10. Reordered from line 6 to 5
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 5
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
14. Reordered from line 8 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 7
16. Reordered from line 9 to 8
Line 9 (2 moves):     while (low < high) {
19. Moved from problem to solution at line 10
36. Reordered from line 10 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 9
33. Reordered from line 18 to 10
Line 11 (2 moves):         isPalindrome = false;
22. Moved from problem to solution at line 13
40. Reordered from line 12 to 11
Line 12 (3 moves):         break;}
28. Moved from problem to solution at line 19
32. Reordered from line 18 to 19
41. Reordered from line 17 to 12
Line 13 (2 moves):       low++; high--;
25. Moved from problem to solution at line 16
42. Reordered from line 16 to 13
Line 14 (3 moves):       }
29. Moved from problem to solution at line 20
31. Reordered from line 19 to 20
43. Reordered from line 18 to 14
Line 15 (2 moves):     if (isPalindrome)
24. Moved from problem to solution at line 15
44. Reordered from line 17 to 15
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 14
45. Reordered from line 17 to 16
Line 17 (2 moves):     else
27. Moved from problem to solution at line 18
46. Reordered from line 18 to 17
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 12
Line 19 (2 moves):     }}
26. Moved from problem to solution at line 17
30. Reordered from line 17 to 21
Line 9 (37) (4 moves):    while while (low <= high) {
20. Moved from problem to solution at line 11
37. Reordered from line 11 to 12
38. Reordered from line 12 to 21
47. Moved from solution to trash at line 0
Line 8 (7) (6 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 8
18. Reordered from line 10 to 9
34. Moved from solution to problem at line 8
35. Moved from problem to solution at line 12
39. Reordered from line 11 to 21
48. Moved from solution to trash at line 1
Your Grade:
You took 48 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489184428009
Time spent on this problem: 478 seconds
<HR>
