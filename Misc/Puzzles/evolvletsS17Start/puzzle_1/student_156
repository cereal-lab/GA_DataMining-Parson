Problem No. 1
Using Template # 100
The Problem:
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
System.out.println(s + " is not a palindrome");
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
}
public static void main(String[] args) {
else
import java.util.Scanner;
isPalindrome = false;
}}
int low, high, isPalindrome;          // This is line Y
while (low < high {
while while (low <= high) {
while (low < high) {
if (isPalindrome)
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
System.out.println(s + " is not a palindrome");
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
}
public static void main(String[] args) {
else
import java.util.Scanner;
isPalindrome = false;
}}
int low, high, isPalindrome;          // This is line Y
while (low < high {
while while (low <= high) {
while (low < high) {
if (isPalindrome)
public class Palindrome {
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: import java.util.Scanner;
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2: public class Palindrome {
5. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 9:       System.out.println(s + " is not a palindrome");
11. Moved from problem to solution at line 8:         isPalindrome = false;
12. Moved from problem to solution at line 6:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from solution to problem at line 20:         isPalindrome = false;
14. Moved from problem to solution at line 9:     while (low < high) {
15. Moved from problem to solution at line 12:       low++; high--;
16. Moved from problem to trash at line 0:    while while (low <= high) {
17. Moved from problem to trash at line 1:     while (low < high {
18. Moved from problem to trash at line 2:         break;}
19. Moved from trash to solution at line 13:         break;}
20. Moved from problem to solution at line 14:       System.out.println(s + " is a palindrome");
21. Moved from problem to trash at line 2:         isPalindrome = false;
22. Moved from problem to trash at line 2:     else
23. Moved from solution to trash at line 4:         break;}
24. Moved from problem to trash at line 4:     if (isPalindrome)
25. Moved from problem to solution at line 13:       }
Submit Parsons Solution clicked @ 1489448123009
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
26. Reordered from line 7 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
27. Reordered from line 8 to 4:     String s = input.nextLine();          // This is line X
28. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489448175672
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489448194465
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
30. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489448210100
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1489448222440
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
32. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489448235924
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 15 to 14:       }
34. Moved from solution to trash at line 3:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489448247528
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489448256412
This line is not in its correct location:     }}
Insert this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from trash to solution at line 17:     else
37. Moved from trash to solution at line 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489448267565
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
2. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
4. Moved from problem to solution at line 2
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 4
29. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
26. Reordered from line 7 to 4
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
27. Reordered from line 8 to 4
28. Reordered from line 4 to 5
Line 7 (1 moves):     int low, high, isPalindrome;          // This is line Y
5. Moved from problem to solution at line 4
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 6
Line 9 (1 moves):     while (low < high) {
14. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
9. Moved from problem to solution at line 8
Line 11 (4 moves):         isPalindrome = false;
11. Moved from problem to solution at line 8
13. Moved from solution to problem at line 20
21. Moved from problem to trash at line 2
30. Moved from trash to solution at line 11
Line 12 (4 moves):         break;}
18. Moved from problem to trash at line 2
19. Moved from trash to solution at line 13
23. Moved from solution to trash at line 4
31. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
15. Moved from problem to solution at line 12
32. Reordered from line 14 to 13
Line 14 (2 moves):       }
25. Moved from problem to solution at line 13
33. Reordered from line 15 to 14
Line 15 (2 moves):     if (isPalindrome)
24. Moved from problem to trash at line 4
35. Moved from trash to solution at line 15
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
20. Moved from problem to solution at line 14
Line 17 (2 moves):     else
22. Moved from problem to trash at line 2
36. Moved from trash to solution at line 17
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
10. Moved from problem to solution at line 9
34. Moved from solution to trash at line 3
37. Moved from trash to solution at line 18
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
16. Moved from problem to trash at line 0
Line 9 (5) (1 moves):     while (low < high {
17. Moved from problem to trash at line 1
Your Grade:
You took 37 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489448293937
Time spent on this problem: 667 seconds
<HR>
