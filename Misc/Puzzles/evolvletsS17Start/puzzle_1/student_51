Problem No. 1
Using Template # 100
The Problem:
if (isPalindrome)
else
public static void main(String[] args) {
low++; high--;
isPalindrome = false;
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}}
while (low < high) {
while while (low <= high) {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
import java.util.Scanner;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}
String s = input.nextLine();          // This is line X
break;}
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
if (isPalindrome)
else
public static void main(String[] args) {
low++; high--;
isPalindrome = false;
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
}}
while (low < high) {
while while (low <= high) {
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
import java.util.Scanner;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}
String s = input.nextLine();          // This is line X
break;}
int low, high, isPalindrome;          // This is line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5:     String s = input.nextLine();          // This is line X
11. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
13. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
14. Moved from problem to solution at line 7:     if (isPalindrome)
15. Reordered from line 7 to 8:     if (isPalindrome)
16. Moved from problem to solution at line 5:     low= 1; high = s.length() - 1; isPalindrome = true;
17. Reordered from line 5 to 9:     low= 1; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 9:     low= 0; high = s.length() - 1; isPalindrome = true;
19. Reordered from line 8 to 10:     if (isPalindrome)
20. Moved from problem to solution at line 10:       low++; high--;
21. Reordered from line 10 to 11:       low++; high--;
22. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
23. Reordered from line 11 to 12:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 12:     }}
25. Reordered from line 12 to 13:     }}
26. Moved from problem to solution at line 13:       if (s.charAt(low) != s.charAt(high)) {
27. Reordered from line 13 to 14:       if (s.charAt(low) != s.charAt(high)) {
28. Moved from problem to solution at line 14:         isPalindrome = false;
29. Reordered from line 14 to 15:         isPalindrome = false;
30. Moved from problem to solution at line 15:       System.out.println(s + " is not a palindrome");
31. Reordered from line 15 to 16:       System.out.println(s + " is not a palindrome");
32. Moved from problem to solution at line 16:       }
33. Reordered from line 16 to 17:       }
Submit Parsons Solution clicked @ 1489247797570
Please clear all the lines from the left panel before submitting your answer.
34. Moved from problem to trash at line 0:    while while (low <= high) {
35. Moved from problem to trash at line 1:     while (low < high) {
36. Moved from problem to trash at line 2:     else
37. Moved from problem to trash at line 3:         break;}
Submit Parsons Solution clicked @ 1489247822941
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 8 to 11:     low= 0; high = s.length() - 1; isPalindrome = true;
39. Reordered from line 8 to 12:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489247848059
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 12 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
41. Reordered from line 9 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489247865284
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from solution to trash at line 4:     low= 1; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489247877898
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1489247883502
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (2 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
Line 13 (2 moves):       low++; high--;
20. Moved from problem to solution at line 10
21. Reordered from line 10 to 11
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
18. Moved from problem to solution at line 9
38. Reordered from line 8 to 11
Line 16 (2 moves):       System.out.println(s + " is a palindrome");
22. Moved from problem to solution at line 11
23. Reordered from line 11 to 12
Line 15 (4 moves):     if (isPalindrome)
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
19. Reordered from line 8 to 10
41. Reordered from line 9 to 12
Line 19 (2 moves):     }}
24. Moved from problem to solution at line 12
25. Reordered from line 12 to 13
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
26. Moved from problem to solution at line 13
27. Reordered from line 13 to 14
Line 11 (2 moves):         isPalindrome = false;
28. Moved from problem to solution at line 14
29. Reordered from line 14 to 15
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
30. Moved from problem to solution at line 15
31. Reordered from line 15 to 16
Line 14 (2 moves):       }
32. Moved from problem to solution at line 16
33. Reordered from line 16 to 17
Line 9 (37) (1 moves):    while while (low <= high) {
34. Moved from problem to trash at line 0
Line 9 (1 moves):     while (low < high) {
35. Moved from problem to trash at line 1
Line 17 (1 moves):     else
36. Moved from problem to trash at line 2
Line 12 (1 moves):         break;}
37. Moved from problem to trash at line 3
Line 8 (7) (5 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 5
17. Reordered from line 5 to 9
39. Reordered from line 8 to 12
40. Reordered from line 12 to 8
42. Moved from solution to trash at line 4
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 42 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
if (isPalindrome)
}}
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
System.out.println(s + " is not a palindrome");
}
The lines you deleted so far are as follows:
while while (low <= high) {
while (low < high) {
else
break;}
low= 1; high = s.length() - 1; isPalindrome = true;
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489247904791
Time spent on this problem: 463 seconds
<HR>
