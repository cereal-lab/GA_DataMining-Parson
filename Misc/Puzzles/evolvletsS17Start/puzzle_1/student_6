Problem No. 1
Using Template # 100
The Problem:
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
while while (low <= high) {
while (low < high {
while (low < high) {
public static void main(String[] args) {
public class Palindrome {
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
isPalindrome = false;
String s = input.nextLine();          // This is line X
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
import java.util.Scanner;
System.out.println(s + " is not a palindrome");
low++; high--;
low= 0; high = s.length() - 1; isPalindrome = true;
while while (low <= high) {
while (low < high {
while (low < high) {
public static void main(String[] args) {
public class Palindrome {
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
isPalindrome = false;
String s = input.nextLine();          // This is line X
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is a palindrome");
}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
else
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:         break;}
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from solution to problem at line 13:         break;}
5. Moved from problem to solution at line 1: public class Palindrome {
6. Reordered from line 1 to 2: public class Palindrome {
7. Moved from problem to solution at line 2:   public static void main(String[] args) {
8. Reordered from line 2 to 3:   public static void main(String[] args) {
9. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
10. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
11. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
12. Reordered from line 4 to 5:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
14. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
15. Reordered from line 6 to 7:     int low, high, isPalindrome;          // This is line Y
16. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
17. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
18. Moved from problem to solution at line 8:       System.out.println(s + " is not a palindrome");
19. Reordered from line 8 to 9:       System.out.println(s + " is not a palindrome");
20. Moved from problem to solution at line 9:       }
21. Reordered from line 9 to 10:       }
22. Moved from problem to solution at line 10:     else
23. Reordered from line 10 to 11:     else
24. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
25. Reordered from line 11 to 12:       System.out.println(s + " is a palindrome");
26. Moved from problem to solution at line 12:     }}
27. Reordered from line 12 to 13:     }}
28. Moved from problem to trash at line 0:     while (low < high) {
29. Moved from problem to trash at line 1:     while (low < high {
30. Moved from problem to trash at line 2:    while while (low <= high) {
31. Moved from problem to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
32. Moved from problem to trash at line 4:       low++; high--;
33. Moved from problem to trash at line 3:         break;}
34. Moved from problem to trash at line 3:     if (isPalindrome)
35. Moved from problem to trash at line 6:         isPalindrome = false;
Submit Parsons Solution clicked @ 1488945274294
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Moved from solution to trash at line 6:     int low, high, isPalindrome;          // This is line Y
37. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
38. Moved from solution to problem at line 4:       if (s.charAt(low) != s.charAt(high)) {
39. Moved from problem to trash at line 6:       if (s.charAt(low) != s.charAt(high)) {
40. Moved from trash to solution at line 8:     if (isPalindrome)
Submit Parsons Solution clicked @ 1488945355165
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from solution to problem at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
42. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Moved from problem to trash at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1488945377186
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Moved from solution to problem at line 4:     if (isPalindrome)
45. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
46. Moved from problem to solution at line 9:     if (isPalindrome)
Submit Parsons Solution clicked @ 1488945400099
This line is not in its correct location:     if (isPalindrome)
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from solution to problem at line 4:     if (isPalindrome)
48. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1488945417520
Please clear all the lines from the left panel before submitting your answer.
49. Moved from problem to trash at line 2:     if (isPalindrome)
Submit Parsons Solution clicked @ 1488945423244
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Moved from trash to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1488945441517
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Moved from trash to solution at line 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1488945458192
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 12:         break;}
Submit Parsons Solution clicked @ 1488945465385
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1488945475525
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 16 to 14:     else
55. Reordered from line 14 to 15:     else
56. Reordered from line 16 to 14:       }
Submit Parsons Solution clicked @ 1488945486704
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Insert this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Moved from trash to solution at line 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1488945494823
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 18 to 16:       System.out.println(s + " is a palindrome");
59. Reordered from line 18 to 17:     else
Submit Parsons Solution clicked @ 1488945503960
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (2 moves): public class Palindrome {
5. Moved from problem to solution at line 1
6. Reordered from line 1 to 2
Line 3 (2 moves):   public static void main(String[] args) {
7. Moved from problem to solution at line 2
8. Reordered from line 2 to 3
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Moved from problem to solution at line 3
10. Reordered from line 3 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
13. Moved from problem to solution at line 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 4
12. Reordered from line 4 to 5
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
14. Moved from problem to solution at line 6
15. Reordered from line 6 to 7
36. Moved from solution to trash at line 6
42. Moved from trash to solution at line 7
Line 8 (5 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
31. Moved from problem to trash at line 3
37. Moved from trash to solution at line 8
41. Moved from solution to problem at line 3
43. Moved from problem to trash at line 7
45. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
28. Moved from problem to trash at line 0
48. Moved from trash to solution at line 9
Line 10 (5 moves):       if (s.charAt(low) != s.charAt(high)) {
16. Moved from problem to solution at line 7
17. Reordered from line 7 to 8
38. Moved from solution to problem at line 4
39. Moved from problem to trash at line 6
50. Moved from trash to solution at line 10
Line 11 (2 moves):         isPalindrome = false;
35. Moved from problem to trash at line 6
51. Moved from trash to solution at line 11
Line 12 (4 moves):         break;}
2. Moved from problem to solution at line 1
4. Moved from solution to problem at line 13
33. Moved from problem to trash at line 3
52. Moved from trash to solution at line 12
Line 13 (2 moves):       low++; high--;
32. Moved from problem to trash at line 4
53. Moved from trash to solution at line 13
Line 14 (3 moves):       }
20. Moved from problem to solution at line 9
21. Reordered from line 9 to 10
56. Reordered from line 16 to 14
Line 15 (7 moves):     if (isPalindrome)
34. Moved from problem to trash at line 3
40. Moved from trash to solution at line 8
44. Moved from solution to problem at line 4
46. Moved from problem to solution at line 9
47. Moved from solution to problem at line 4
49. Moved from problem to trash at line 2
57. Moved from trash to solution at line 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 11
25. Reordered from line 11 to 12
58. Reordered from line 18 to 16
Line 17 (5 moves):     else
22. Moved from problem to solution at line 10
23. Reordered from line 10 to 11
54. Reordered from line 16 to 14
55. Reordered from line 14 to 15
59. Reordered from line 18 to 17
Line 18 (2 moves):       System.out.println(s + " is not a palindrome");
18. Moved from problem to solution at line 8
19. Reordered from line 8 to 9
Line 19 (2 moves):     }}
26. Moved from problem to solution at line 12
27. Reordered from line 12 to 13
Line 9 (5) (1 moves):     while (low < high {
29. Moved from problem to trash at line 1
Line 9 (37) (1 moves):    while while (low <= high) {
30. Moved from problem to trash at line 2
Your Grade:
You took 59 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1488945508953
Time spent on this problem: 629 seconds
<HR>
