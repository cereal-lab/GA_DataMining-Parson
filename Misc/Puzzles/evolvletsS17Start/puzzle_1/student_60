Problem No. 1
Using Template # 100
The Problem:
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
while while (low <= high) {
while (low < high) {
isPalindrome = false;
import java.util.Scanner;
}
if (isPalindrome)
else
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
low++; high--;
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
}}
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
if (s.charAt(low) != s.charAt(high)) {
System.out.println(s + " is not a palindrome");
while while (low <= high) {
while (low < high) {
isPalindrome = false;
import java.util.Scanner;
}
if (isPalindrome)
else
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
low++; high--;
public class Palindrome {
int low, high, isPalindrome;          // This is line Y
low= 1; high = s.length() - 1; isPalindrome = true;
low= 0; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
public static void main(String[] args) {
}}
break;}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1: public class Palindrome {
3. Moved from problem to solution at line 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
9. Moved from problem to trash at line 0:    while while (low <= high) {
10. Moved from problem to solution at line 8:       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 9:         isPalindrome = false;
12. Moved from problem to trash at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 10:     if (isPalindrome)
14. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 12:     else
16. Moved from problem to solution at line 13:       System.out.println(s + " is not a palindrome");
17. Moved from problem to solution at line 7:     low= 1; high = s.length() - 1; isPalindrome = true;
18. Reordered from line 7 to 6:     low= 1; high = s.length() - 1; isPalindrome = true;
19. Moved from problem to solution at line 9:     while (low < high) {
20. Moved from problem to solution at line 12:       }
21. Moved from problem to solution at line 13:       low++; high--;
22. Moved from problem to solution at line 14:         break;}
Submit Parsons Solution clicked @ 1489267970415
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 7 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489267985359
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 8 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489267996271
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Moved from solution to trash at line 2:     low= 1; high = s.length() - 1; isPalindrome = true;
26. Moved from trash to solution at line 7:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489268007943
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489268013263
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 15 to 12:     if (isPalindrome)
29. Reordered from line 12 to 14:     if (isPalindrome)
30. Reordered from line 15 to 12:         break;}
31. Reordered from line 13 to 14:       }
Submit Parsons Solution clicked @ 1489268030191
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
3. Moved from problem to solution at line 2
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
7. Moved from problem to solution at line 6
23. Reordered from line 7 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
8. Moved from problem to solution at line 7
24. Reordered from line 8 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
6. Moved from problem to solution at line 5
27. Reordered from line 8 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to trash at line 1
26. Moved from trash to solution at line 7
Line 9 (1 moves):     while (low < high) {
19. Moved from problem to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 8
Line 11 (1 moves):         isPalindrome = false;
11. Moved from problem to solution at line 9
Line 12 (2 moves):         break;}
22. Moved from problem to solution at line 14
30. Reordered from line 15 to 12
Line 13 (1 moves):       low++; high--;
21. Moved from problem to solution at line 13
Line 14 (2 moves):       }
20. Moved from problem to solution at line 12
31. Reordered from line 13 to 14
Line 15 (3 moves):     if (isPalindrome)
13. Moved from problem to solution at line 10
28. Reordered from line 15 to 12
29. Reordered from line 12 to 14
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
14. Moved from problem to solution at line 11
Line 17 (1 moves):     else
15. Moved from problem to solution at line 12
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
16. Moved from problem to solution at line 13
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
9. Moved from problem to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 7
18. Reordered from line 7 to 6
25. Moved from solution to trash at line 2
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489268150543
Time spent on this problem: 419 seconds
<HR>
