Problem No. 1
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
while while (low <= high) {
while (low < high) {
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
isPalindrome = false;
break;}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
String s = input.nextLine();          // This is line X
import java.util.Scanner;
low++; high--;
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
}}
while while (low <= high) {
while (low < high) {
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
public class Palindrome {
}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
System.out.println(s + " is a palindrome");
isPalindrome = false;
break;}
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
else
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
String s = input.nextLine();          // This is line X
import java.util.Scanner;
low++; high--;
public static void main(String[] args) {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 2 to 1: import java.util.Scanner;
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 4 to 3:   public static void main(String[] args) {
8. Reordered from line 4 to 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
9. Reordered from line 4 to 3:   public static void main(String[] args) {
10. Moved from problem to solution at line 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Reordered from line 4 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
12. Moved from problem to solution at line 5:     int low, high, isPalindrome;          // This is line Y
13. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
14. Reordered from line 6 to 5:     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
16. Reordered from line 7 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489367528505
Please clear all the lines from the left panel before submitting your answer.
17. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
18. Moved from solution to problem at line 9:     String s = input.nextLine();          // This is line X
19. Moved from problem to solution at line 7:     String s = input.nextLine();          // This is line X
20. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 9:     low= 1; high = s.length() - 1; isPalindrome = true;
22. Moved from problem to solution at line 10:         isPalindrome = false;
23. Moved from problem to solution at line 11:       System.out.println(s + " is a palindrome");
24. Moved from problem to solution at line 12:         break;}
25. Moved from problem to solution at line 13:     if (isPalindrome)
26. Moved from problem to solution at line 14:       low++; high--;
27. Moved from problem to solution at line 15:     else
28. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
29. Moved from problem to solution at line 15:     while (low < high) {
30. Moved from problem to solution at line 18:    while while (low <= high) {
31. Moved from problem to solution at line 19:     }}
32. Moved from problem to solution at line 20:       }
Submit Parsons Solution clicked @ 1489367583736
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
34. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
35. Reordered from line 5 to 4:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
36. Reordered from line 6 to 5:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489367617344
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 5 to 6:     String s = input.nextLine();          // This is line X
38. Reordered from line 5 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Submit Parsons Solution clicked @ 1489367626648
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 9 to 19:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367646768
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
40. Reordered from line 14 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489367656512
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 21 to 11:       if (s.charAt(low) != s.charAt(high)) {
42. Reordered from line 12 to 10:       System.out.println(s + " is a palindrome");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489367666688
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 12 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489367671048
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 11 to 21:       System.out.println(s + " is a palindrome");
45. Reordered from line 20 to 21:       }
Submit Parsons Solution clicked @ 1489367678415
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 15 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489367684272
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 21 to 14:       }
Submit Parsons Solution clicked @ 1489367691216
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 21 to 20:       System.out.println(s + " is a palindrome");
49. Reordered from line 20 to 16:       System.out.println(s + " is a palindrome");
50. Reordered from line 18 to 17:     else
51. Reordered from line 19 to 18:    while while (low <= high) {
52. Reordered from line 21 to 19:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367711831
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 19 to 18:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367714984
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Moved from solution to problem at line 14:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367722415
Please clear all the lines from the left panel before submitting your answer.
55. Moved from problem to solution at line 20:     low= 1; high = s.length() - 1; isPalindrome = true;
56. Reordered from line 20 to 21:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489367732223
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 18 to 21:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489367739167
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Moved from solution to trash at line 0:     low= 1; high = s.length() - 1; isPalindrome = true;
59. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489367756359
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
3. Reordered from line 2 to 1
Line 2 (1 moves): public class Palindrome {
2. Moved from problem to solution at line 1
Line 3 (4 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
7. Reordered from line 4 to 3
9. Reordered from line 4 to 3
Line 4 (3 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
8. Reordered from line 4 to 3
38. Reordered from line 5 to 4
Line 5 (6 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 4
11. Reordered from line 4 to 5
13. Reordered from line 6 to 5
16. Reordered from line 7 to 6
33. Reordered from line 6 to 5
35. Reordered from line 5 to 4
Line 6 (6 moves):     String s = input.nextLine();          // This is line X
15. Moved from problem to solution at line 6
18. Moved from solution to problem at line 9
19. Moved from problem to solution at line 7
34. Reordered from line 7 to 6
36. Reordered from line 6 to 5
37. Reordered from line 5 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
12. Moved from problem to solution at line 5
14. Reordered from line 6 to 5
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
20. Moved from problem to solution at line 8
Line 9 (2 moves):     while (low < high) {
29. Moved from problem to solution at line 15
40. Reordered from line 14 to 9
Line 10 (3 moves):       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 7
41. Reordered from line 21 to 11
43. Reordered from line 12 to 10
Line 11 (1 moves):         isPalindrome = false;
22. Moved from problem to solution at line 10
Line 12 (1 moves):         break;}
24. Moved from problem to solution at line 12
Line 13 (2 moves):       low++; high--;
26. Moved from problem to solution at line 14
46. Reordered from line 15 to 13
Line 14 (3 moves):       }
32. Moved from problem to solution at line 20
45. Reordered from line 20 to 21
47. Reordered from line 21 to 14
Line 15 (1 moves):     if (isPalindrome)
25. Moved from problem to solution at line 13
Line 16 (5 moves):       System.out.println(s + " is a palindrome");
23. Moved from problem to solution at line 11
42. Reordered from line 12 to 10
44. Reordered from line 11 to 21
48. Reordered from line 21 to 20
49. Reordered from line 20 to 16
Line 17 (2 moves):     else
27. Moved from problem to solution at line 15
50. Reordered from line 18 to 17
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
28. Moved from problem to solution at line 14
Line 19 (1 moves):     }}
31. Moved from problem to solution at line 19
Line 8 (7) (8 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
21. Moved from problem to solution at line 9
39. Reordered from line 9 to 19
52. Reordered from line 21 to 19
53. Reordered from line 19 to 18
54. Moved from solution to problem at line 14
55. Moved from problem to solution at line 20
56. Reordered from line 20 to 21
58. Moved from solution to trash at line 0
Line 9 (37) (4 moves):    while while (low <= high) {
30. Moved from problem to solution at line 18
51. Reordered from line 19 to 18
57. Reordered from line 18 to 21
59. Moved from solution to trash at line 1
Your Grade:
You took 59 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489367765799
Time spent on this problem: 535 seconds
<HR>
