Problem No. 1
Using Template # 100
The Problem:
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.println("    " + numberOfDimes + " dimes");
int numberOfPennies = remainingAmount;
int numberOfQuarters = remainingAmount / 25;
}}
remainingAmount = remainingAmount % 100;
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfNickels + " nickels");
remainingAmount = remainingAmount % 10;
public static void Main(String[] args) {
public static void main(String[] args) {
public class ComputeChange {
remainingAmount = remainingAmount % 25;
int remainingAmount = (int)(amount * 100);
remainingAmount = remainingAmount % 5;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
double amount = input.nextDouble();
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfNickels = remainingAmount / 5;
int numberOfOneDollars = remainingAmount / 100;
import java.util.Scanner;
System.out.println("    " + numberOfPennies + " pennies");
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 24 lines.
Re-assemble them with 26 (or fewer) moves for full credit
Using Template # 100
The Problem:
System.out.println("    " + numberOfQuarters + " quarters ");
System.out.println("    " + numberOfDimes + " dimes");
int numberOfPennies = remainingAmount;
int numberOfQuarters = remainingAmount / 25;
}}
remainingAmount = remainingAmount % 100;
int numberOfDimes = remainingAmount / 10;
System.out.println("    " + numberOfNickels + " nickels");
remainingAmount = remainingAmount % 10;
public static void Main(String[] args) {
public static void main(String[] args) {
public class ComputeChange {
remainingAmount = remainingAmount % 25;
int remainingAmount = (int)(amount * 100);
remainingAmount = remainingAmount % 5;
Scanner input = new Scanner(System.in); //This line should be placed before Line X
System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
double amount = input.nextDouble();
System.out.println("    " + numberOfOneDollars + " dollars");
int numberOfNickels = remainingAmount / 5;
int numberOfOneDollars = remainingAmount / 100;
import java.util.Scanner;
System.out.println("    " + numberOfPennies + " pennies");
System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:  }}
2. Moved from problem to solution at line 1:     System.out.println("    " + numberOfPennies + " pennies");
3. Moved from problem to solution at line 1:     System.out.println("    " + numberOfNickels + " nickels");
4. Moved from problem to solution at line 1:     System.out.println("    " + numberOfDimes + " dimes");
5. Moved from problem to solution at line 1:     System.out.println("    " + numberOfQuarters + " quarters ");
6. Moved from problem to solution at line 1:     System.out.println("    " + numberOfOneDollars + " dollars");
7. Moved from problem to solution at line 1:     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
8. Moved from problem to solution at line 1:     int numberOfPennies = remainingAmount;
9. Moved from problem to solution at line 1:     int numberOfNickels = remainingAmount / 5;
10. Moved from problem to solution at line 2:     remainingAmount = remainingAmount % 5;
11. Moved from problem to solution at line 1:     remainingAmount = remainingAmount % 10;
12. Moved from problem to solution at line 1:     int numberOfDimes = remainingAmount / 10;
13. Moved from problem to solution at line 1:     remainingAmount = remainingAmount % 25;
14. Moved from problem to solution at line 1:     int numberOfQuarters = remainingAmount / 25;
15. Moved from problem to solution at line 1:     remainingAmount = remainingAmount % 100;
16. Moved from problem to solution at line 1:     int numberOfOneDollars = remainingAmount / 100;
17. Moved from problem to solution at line 1:     int remainingAmount = (int)(amount * 100);
18. Moved from problem to solution at line 1:     double amount = input.nextDouble();
19. Moved from problem to solution at line 1:     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
20. Moved from problem to solution at line 1:     Scanner input = new Scanner(System.in); //This line should be placed before Line X
21. Moved from problem to solution at line 1:   public static void main(String[] args) {
22. Moved from problem to trash at line 0:   public static void Main(String[] args) {
23. Moved from problem to solution at line 1: public class ComputeChange {
24. Moved from problem to solution at line 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1489189479531
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
24. Moved from problem to solution at line 1
Line 2 (1 moves): public class ComputeChange {
23. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
21. Moved from problem to solution at line 1
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should be placed before Line X
20. Moved from problem to solution at line 1
Line 5 (1 moves):     System.out.print("Enter an amount in double, for example 11.56: "); // This is line X
19. Moved from problem to solution at line 1
Line 6 (1 moves):     double amount = input.nextDouble();
18. Moved from problem to solution at line 1
Line 7 (1 moves):     int remainingAmount = (int)(amount * 100);
17. Moved from problem to solution at line 1
Line 8 (1 moves):     int numberOfOneDollars = remainingAmount / 100;
16. Moved from problem to solution at line 1
Line 9 (1 moves):     remainingAmount = remainingAmount % 100;
15. Moved from problem to solution at line 1
Line 10 (1 moves):     int numberOfQuarters = remainingAmount / 25;
14. Moved from problem to solution at line 1
Line 11 (1 moves):     remainingAmount = remainingAmount % 25;
13. Moved from problem to solution at line 1
Line 12 (1 moves):     int numberOfDimes = remainingAmount / 10;
12. Moved from problem to solution at line 1
Line 13 (1 moves):     remainingAmount = remainingAmount % 10;
11. Moved from problem to solution at line 1
Line 14 (1 moves):     int numberOfNickels = remainingAmount / 5;
9. Moved from problem to solution at line 1
Line 15 (1 moves):     remainingAmount = remainingAmount % 5;
10. Moved from problem to solution at line 2
Line 16 (1 moves):     int numberOfPennies = remainingAmount;
8. Moved from problem to solution at line 1
Line 17 (1 moves):     System.out.println("Your amount " + amount + " consists of"); //After this line, please print dollar first, then quarters, dimes, nickels and pennies
7. Moved from problem to solution at line 1
Line 18 (1 moves):     System.out.println("    " + numberOfOneDollars + " dollars");
6. Moved from problem to solution at line 1
Line 19 (1 moves):     System.out.println("    " + numberOfQuarters + " quarters ");
5. Moved from problem to solution at line 1
Line 20 (1 moves):     System.out.println("    " + numberOfDimes + " dimes");
4. Moved from problem to solution at line 1
Line 21 (1 moves):     System.out.println("    " + numberOfNickels + " nickels");
3. Moved from problem to solution at line 1
Line 22 (1 moves):     System.out.println("    " + numberOfPennies + " pennies");
2. Moved from problem to solution at line 1
Line 23 (1 moves):  }}
1. Moved from problem to solution at line 0
Line 3 (3) (1 moves):   public static void Main(String[] args) {
22. Moved from problem to trash at line 0
Your Grade:
You took 24 steps to solve a Parsons puzzle containing 24 lines of code.
Next Problem clicked @ 1489189484103
Time spent on this problem: 261 seconds
<HR>
