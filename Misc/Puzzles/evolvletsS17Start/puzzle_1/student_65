Problem No. 1
Using Template # 100
The Problem:
low++; high--;
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
while while (low <= high) {
while (low < high {
while (low < high) {
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
public class Palindrome {
break;}
}}
System.out.println(s + " is not a palindrome");
public static void main(String[] args) {
else
import java.util.Scanner;
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
low++; high--;
if (isPalindrome)
if (s.charAt(low) != s.charAt(high)) {
low= 0; high = s.length() - 1; isPalindrome = true;
while while (low <= high) {
while (low < high {
while (low < high) {
int low, high, isPalindrome;          // This is line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
isPalindrome = false;
public class Palindrome {
break;}
}}
System.out.println(s + " is not a palindrome");
public static void main(String[] args) {
else
import java.util.Scanner;
String s = input.nextLine();          // This is line X
System.out.println(s + " is a palindrome");
}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       }
3. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
4. Moved from problem to solution at line 1:         isPalindrome = false;
5. Moved from problem to solution at line 1:         break;}
6. Moved from problem to solution at line 2:     else
7. Moved from problem to solution at line 1:     while (low < high {
8. Moved from problem to solution at line 2:    while while (low <= high) {
9. Moved from problem to solution at line 3:     while (low < high) {
10. Reordered from line 3 to 5:     while (low < high) {
11. Reordered from line 2 to 5:    while while (low <= high) {
12. Reordered from line 1 to 4:     while (low < high {
13. Moved from problem to solution at line 1:       low++; high--;
14. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
15. Moved from problem to solution at line 1:     int low, high, isPalindrome;          // This is line Y
16. Moved from problem to solution at line 2:     low= 0; high = s.length() - 1; isPalindrome = true;
17. Moved from problem to solution at line 2:     if (isPalindrome)
18. Moved from problem to solution at line 1:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
19. Moved from problem to solution at line 1:     String s = input.nextLine();          // This is line X
20. Moved from problem to solution at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
21. Moved from problem to solution at line 1:   public static void main(String[] args) {
22. Moved from problem to solution at line 1: public class Palindrome {
23. Moved from problem to solution at line 1: import java.util.Scanner;
24. Moved from problem to solution at line 14:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489282201914
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Outdented line 1: import java.util.Scanner;
Submit Parsons Solution clicked @ 1489282351974
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1489282372388
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
25. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
26. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489282480738
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Reordered from line 5 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489282494428
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 9 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489282530396
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Reordered from line 9 to 15:     if (isPalindrome)
30. Reordered from line 14 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489282549346
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
31. Reordered from line 14 to 10:       if (s.charAt(low) != s.charAt(high)) {
32. Reordered from line 11 to 13:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489282562090
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
33. Reordered from line 11 to 19:       low++; high--;
34. Reordered from line 19 to 18:       low++; high--;
35. Reordered from line 17 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489282582809
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 13 to 18:       System.out.println(s + " is a palindrome");
37. Reordered from line 17 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489282594480
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 14 to 21:     else
39. Reordered from line 21 to 20:     else
40. Reordered from line 19 to 13:       }
Submit Parsons Solution clicked @ 1489282608187
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 14 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489282613253
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Moved from solution to trash at line 0:     while (low < high {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489282626443
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489282635393
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:     else
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 17 to 19:       System.out.println(s + " is not a palindrome");
45. Reordered from line 19 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489282644959
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): import java.util.Scanner;
23. Moved from problem to solution at line 1
*  Outdented line 1
Line 2 (1 moves): public class Palindrome {
22. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
21. Moved from problem to solution at line 1
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
18. Moved from problem to solution at line 1
25. Reordered from line 6 to 4
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
20. Moved from problem to solution at line 1
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
19. Moved from problem to solution at line 1
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
15. Moved from problem to solution at line 1
26. Reordered from line 7 to 5
27. Reordered from line 5 to 7
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
16. Moved from problem to solution at line 2
28. Reordered from line 9 to 8
Line 9 (3 moves):     while (low < high) {
9. Moved from problem to solution at line 3
10. Reordered from line 3 to 5
30. Reordered from line 14 to 9
Line 10 (2 moves):       if (s.charAt(low) != s.charAt(high)) {
24. Moved from problem to solution at line 14
31. Reordered from line 14 to 10
Line 11 (2 moves):         isPalindrome = false;
4. Moved from problem to solution at line 1
35. Reordered from line 17 to 11
Line 12 (1 moves):         break;}
5. Moved from problem to solution at line 1
Line 13 (5 moves):       low++; high--;
13. Moved from problem to solution at line 1
33. Reordered from line 11 to 19
34. Reordered from line 19 to 18
37. Reordered from line 17 to 13
41. Reordered from line 14 to 13
Line 14 (2 moves):       }
2. Moved from problem to solution at line 1
40. Reordered from line 19 to 13
Line 15 (2 moves):     if (isPalindrome)
17. Moved from problem to solution at line 2
29. Reordered from line 9 to 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
14. Moved from problem to solution at line 1
32. Reordered from line 11 to 13
36. Reordered from line 13 to 18
Line 17 (3 moves):     else
6. Moved from problem to solution at line 2
38. Reordered from line 14 to 21
39. Reordered from line 21 to 20
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
3. Moved from problem to solution at line 1
44. Reordered from line 17 to 19
45. Reordered from line 19 to 18
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (5) (3 moves):     while (low < high {
7. Moved from problem to solution at line 1
12. Reordered from line 1 to 4
42. Moved from solution to trash at line 0
Line 9 (37) (3 moves):    while while (low <= high) {
8. Moved from problem to solution at line 2
11. Reordered from line 2 to 5
43. Moved from solution to trash at line 1
Your Grade:
You took 45 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489283126301
Time spent on this problem: 1336 seconds
<HR>
