Problem No. 1
Using Template # 100
The Problem:
isPalindrome = false;
}}
System.out.println(s + " is a palindrome");
while while (low <= high) {
while (low < high) {
}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
else
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
import java.util.Scanner;
public class Palindrome {
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
isPalindrome = false;
}}
System.out.println(s + " is a palindrome");
while while (low <= high) {
while (low < high) {
}
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
String s = input.nextLine();          // This is line X
else
int low, high, isPalindrome;          // This is line Y
if (isPalindrome)
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
import java.util.Scanner;
public class Palindrome {
System.out.println(s + " is not a palindrome");
if (s.charAt(low) != s.charAt(high)) {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1: public class Palindrome {
3. Reordered from line 1 to 2: public class Palindrome {
4. Moved from problem to solution at line 2:   public static void main(String[] args) {
5. Reordered from line 2 to 3:   public static void main(String[] args) {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 2:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Reordered from line 4 to 2:   public static void main(String[] args) {
10. Moved from problem to solution at line 4:     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6:     int low, high, isPalindrome;          // This is line Y
12. Reordered from line 7 to 6:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
13. Moved from problem to solution at line 7:     low= 1; high = s.length() - 1; isPalindrome = true;
14. Reordered from line 7 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
15. Moved from problem to solution at line 8:     if (isPalindrome)
16. Reordered from line 8 to 9:     if (isPalindrome)
17. Moved from problem to solution at line 9:       System.out.println(s + " is a palindrome");
18. Reordered from line 9 to 10:       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 10:         break;}
20. Reordered from line 10 to 11:         break;}
21. Moved from problem to solution at line 11:     else
22. Reordered from line 11 to 12:     else
23. Moved from problem to solution at line 12:     }}
24. Reordered from line 12 to 13:     }}
25. Moved from problem to solution at line 13:         isPalindrome = false;
26. Moved from problem to solution at line 14:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489443673465
Please clear all the lines from the left panel before submitting your answer.
27. Moved from problem to solution at line 13:       if (s.charAt(low) != s.charAt(high)) {
28. Reordered from line 13 to 9:       if (s.charAt(low) != s.charAt(high)) {
29. Reordered from line 14 to 10:         isPalindrome = false;
30. Reordered from line 15 to 11:       System.out.println(s + " is not a palindrome");
31. Reordered from line 15 to 12:     else
32. Moved from problem to trash at line 0:    while while (low <= high) {
33. Moved from problem to trash at line 1:     while (low < high) {
34. Moved from problem to trash at line 2:       }
35. Moved from problem to trash at line 3:     low= 0; high = s.length() - 1; isPalindrome = true;
36. Moved from problem to trash at line 4:       low++; high--;
Submit Parsons Solution clicked @ 1489443780614
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Moved from solution to trash at line 2:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489443799047
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 5 to 2:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
39. Reordered from line 2 to 5:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
40. Reordered from line 4 to 2: public class Palindrome {
Submit Parsons Solution clicked @ 1489443820849
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Insert this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Moved from trash to solution at line 3:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489443833015
This line is not in its correct location:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Move this line in its place:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 6 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
43. Reordered from line 7 to 5:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489443874015
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 6 to 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Submit Parsons Solution clicked @ 1489443883327
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489443890146
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 9 to 8:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489443913783
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Moved from trash to solution at line 8:       low++; high--;
Submit Parsons Solution clicked @ 1489443922973
This line is not in its correct location:       low++; high--;
Insert this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Moved from solution to trash at line 2:       low++; high--;
49. Moved from trash to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489443934098
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Moved from solution to trash at line 1:       if (s.charAt(low) != s.charAt(high)) {
51. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489443945243
This line is not in its correct location:         isPalindrome = false;
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Moved from trash to solution at line 9:       low++; high--;
Submit Parsons Solution clicked @ 1489443969257
This line is not in its correct location:       low++; high--;
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Moved from solution to trash at line 2:       low++; high--;
54. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489443986354
This line is not in its correct location:         isPalindrome = false;
Insert this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Moved from trash to solution at line 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489444008052
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Moved from trash to solution at line 12:       }
Submit Parsons Solution clicked @ 1489444018952
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Moved from solution to trash at line 2:       }
58. Moved from trash to solution at line 12:       low++; high--;
Submit Parsons Solution clicked @ 1489444030248
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Moved from solution to trash at line 2:       low++; high--;
60. Moved from trash to solution at line 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489444039472
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Moved from solution to trash at line 1:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489444043797
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Moved from trash to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489444117740
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
64. Moved from trash to solution at line 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489444127054
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Moved from solution to trash at line 1:    while while (low <= high) {
66. Moved from solution to trash at line 3:       System.out.println(s + " is not a palindrome");
67. Moved from trash to problem at line 20:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489444147256
Please clear all the lines from the left panel before submitting your answer.
68. Moved from problem to trash at line 4:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489444154163
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
69. Moved from solution to trash at line 2:     else
Submit Parsons Solution clicked @ 1489444167305
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
70. Moved from trash to solution at line 12:       }
Submit Parsons Solution clicked @ 1489444176895
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
71. Moved from trash to solution at line 12:     else
72. Moved from trash to solution at line 12:       System.out.println(s + " is not a palindrome");
73. Moved from trash to solution at line 12:    while while (low <= high) {
74. Moved from trash to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
75. Moved from trash to solution at line 13:       low++; high--;
Submit Parsons Solution clicked @ 1489444202559
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
76. Reordered from line 12 to 13:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489444209863
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
77. Reordered from line 14 to 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489444215100
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
78. Reordered from line 15 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489444220235
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Indented line 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489444228525
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Outdented line 12:       System.out.println(s + " is not a palindrome");
*  Outdented line 12:       System.out.println(s + " is not a palindrome");
79. Reordered from line 13 to 21:    while while (low <= high) {
80. Reordered from line 13 to 21:       low++; high--;
81. Reordered from line 13 to 21:     low= 1; high = s.length() - 1; isPalindrome = true;
82. Reordered from line 15 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489444252326
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
83. Reordered from line 14 to 12:     else
84. Reordered from line 14 to 21:       System.out.println(s + " is not a palindrome");
85. Reordered from line 13 to 21:     if (isPalindrome)
86. Reordered from line 16 to 12:     }}
Submit Parsons Solution clicked @ 1489444271824
This line is not in its correct location:     }}
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
87. Reordered from line 17 to 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489444277745
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
88. Reordered from line 21 to 12:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489444284550
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
89. Reordered from line 20 to 12:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489444289859
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
90. Reordered from line 16 to 12:     else
Submit Parsons Solution clicked @ 1489444297429
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
91. Reordered from line 16 to 12:     }}
Submit Parsons Solution clicked @ 1489444302585
This line is not in its correct location:     }}
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
92. Reordered from line 17 to 12:       }
Submit Parsons Solution clicked @ 1489444307621
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
93. Reordered from line 18 to 12:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489444313509
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
94. Reordered from line 20 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1489444317330
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
95. Reordered from line 21 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489444321303
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1489444322973
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (3 moves): public class Palindrome {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
40. Reordered from line 4 to 2
Line 3 (5 moves):   public static void main(String[] args) {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
9. Reordered from line 4 to 2
37. Moved from solution to trash at line 2
41. Moved from trash to solution at line 3
Line 4 (6 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
12. Reordered from line 7 to 6
38. Reordered from line 5 to 2
39. Reordered from line 2 to 5
42. Reordered from line 6 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
8. Moved from problem to solution at line 2
44. Reordered from line 6 to 5
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
10. Moved from problem to solution at line 4
45. Reordered from line 7 to 6
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
11. Moved from problem to solution at line 6
43. Reordered from line 7 to 5
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
35. Moved from problem to trash at line 3
49. Moved from trash to solution at line 8
Line 9 (2 moves):     while (low < high) {
33. Moved from problem to trash at line 1
54. Moved from trash to solution at line 9
Line 10 (5 moves):       if (s.charAt(low) != s.charAt(high)) {
27. Moved from problem to solution at line 13
28. Reordered from line 13 to 9
46. Reordered from line 9 to 8
50. Moved from solution to trash at line 1
55. Moved from trash to solution at line 10
Line 11 (2 moves):         isPalindrome = false;
25. Moved from problem to solution at line 13
29. Reordered from line 14 to 10
Line 18 (12 moves):       System.out.println(s + " is not a palindrome");
26. Moved from problem to solution at line 14
30. Reordered from line 15 to 11
66. Moved from solution to trash at line 3
67. Moved from trash to problem at line 20
68. Moved from problem to trash at line 4
72. Moved from trash to solution at line 12
78. Reordered from line 15 to 12
*  Indented line 12
*  Outdented line 12
*  Outdented line 12
84. Reordered from line 14 to 21
95. Reordered from line 21 to 12
Line 13 (10 moves):       low++; high--;
36. Moved from problem to trash at line 4
47. Moved from trash to solution at line 8
48. Moved from solution to trash at line 2
52. Moved from trash to solution at line 9
53. Moved from solution to trash at line 2
58. Moved from trash to solution at line 12
59. Moved from solution to trash at line 2
75. Moved from trash to solution at line 13
80. Reordered from line 13 to 21
94. Reordered from line 20 to 12
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 9
18. Reordered from line 9 to 10
93. Reordered from line 18 to 12
Line 14 (5 moves):       }
34. Moved from problem to trash at line 2
56. Moved from trash to solution at line 12
57. Moved from solution to trash at line 2
70. Moved from trash to solution at line 12
92. Reordered from line 17 to 12
Line 19 (4 moves):     }}
23. Moved from problem to solution at line 12
24. Reordered from line 12 to 13
86. Reordered from line 16 to 12
91. Reordered from line 16 to 12
Line 17 (7 moves):     else
21. Moved from problem to solution at line 11
22. Reordered from line 11 to 12
31. Reordered from line 15 to 12
69. Moved from solution to trash at line 2
71. Moved from trash to solution at line 12
83. Reordered from line 14 to 12
90. Reordered from line 16 to 12
Line 8 (7) (9 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
51. Moved from solution to trash at line 1
62. Moved from trash to solution at line 12
63. Moved from solution to trash at line 1
74. Moved from trash to solution at line 12
76. Reordered from line 12 to 13
81. Reordered from line 13 to 21
89. Reordered from line 20 to 12
Line 15 (5 moves):     if (isPalindrome)
15. Moved from problem to solution at line 8
16. Reordered from line 8 to 9
82. Reordered from line 15 to 12
85. Reordered from line 13 to 21
88. Reordered from line 21 to 12
Line 9 (37) (9 moves):    while while (low <= high) {
32. Moved from problem to trash at line 0
60. Moved from trash to solution at line 12
61. Moved from solution to trash at line 1
64. Moved from trash to solution at line 12
65. Moved from solution to trash at line 1
73. Moved from trash to solution at line 12
77. Reordered from line 14 to 12
79. Reordered from line 13 to 21
87. Reordered from line 17 to 12
Line 12 (2 moves):         break;}
19. Moved from problem to solution at line 10
20. Reordered from line 10 to 11
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 95 steps before bailing out of a Parsons puzzle containing 21 lines of code.
Your answer so far is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
System.out.println(s + " is not a palindrome");
low++; high--;
System.out.println(s + " is a palindrome");
}
}}
else
low= 1; high = s.length() - 1; isPalindrome = true;
if (isPalindrome)
while while (low <= high) {
break;}
The lines you deleted so far are as follows:
The correct answer is as follows:
import java.util.Scanner;
public class Palindrome {
public static void main(String[] args) {
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
String s = input.nextLine();          // This is line X
int low, high, isPalindrome;          // This is line Y
low= 0; high = s.length() - 1; isPalindrome = true;
while (low < high) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
break;}
low++; high--;
}
if (isPalindrome)
System.out.println(s + " is a palindrome");
else
System.out.println(s + " is not a palindrome");
}}
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1489444421700
Time spent on this problem: 1097 seconds
<HR>
