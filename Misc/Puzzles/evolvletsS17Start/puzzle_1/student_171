Problem No. 1
Using Template # 100
The Problem:
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
break;}
while while (low <= high) {
while (low < high) {
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
isPalindrome = false;
System.out.println(s + " is a palindrome");
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is not a palindrome");
}
int low, high, isPalindrome;          // This is line Y
else
String s = input.nextLine();          // This is line X
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
break;}
while while (low <= high) {
while (low < high) {
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
if (isPalindrome)
isPalindrome = false;
System.out.println(s + " is a palindrome");
public class Palindrome {
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
low++; high--;
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
System.out.println(s + " is not a palindrome");
}
int low, high, isPalindrome;          // This is line Y
else
String s = input.nextLine();          // This is line X
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: import java.util.Scanner;
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 2: public class Palindrome {
5. Reordered from line 2 to 3: public class Palindrome {
6. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
8. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
9. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
10. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
12. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
13. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 7:     while (low < high) {
15. Reordered from line 7 to 8:     while (low < high) {
16. Moved from solution to problem at line 14:     while (low < high) {
17. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
18. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
19. Moved from problem to solution at line 8:     while (low < high) {
Submit Parsons Solution clicked @ 1489453704319
Please clear all the lines from the left panel before submitting your answer.
20. Moved from problem to solution at line 9:       low++; high--;
21. Reordered from line 9 to 10:       low++; high--;
22. Moved from problem to solution at line 10:     if (isPalindrome)
23. Moved from problem to solution at line 11:    while while (low <= high) {
24. Moved from problem to solution at line 12:     low= 1; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to solution at line 13:     low= 0; high = s.length() - 1; isPalindrome = true;
26. Moved from problem to solution at line 14:         break;}
27. Moved from problem to solution at line 15:         isPalindrome = false;
28. Moved from problem to solution at line 16:       System.out.println(s + " is a palindrome");
29. Moved from problem to solution at line 17:       System.out.println(s + " is not a palindrome");
30. Moved from problem to solution at line 18:     else
31. Moved from problem to solution at line 19:       }
32. Moved from problem to solution at line 20:     }}
33. Reordered from line 20 to 21:     }}
34. Reordered from line 20 to 14:       low++; high--;
Submit Parsons Solution clicked @ 1489453745728
This line is not in its correct location:   public static void main(String[] args) {
Move this line in its place: public class Palindrome {
Sorry, your solution is not yet complete and correct.
Please correct your answer
35. Reordered from line 3 to 2: public class Palindrome {
Submit Parsons Solution clicked @ 1489453763371
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
36. Reordered from line 5 to 6:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489453774442
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     String s = input.nextLine();          // This is line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
37. Reordered from line 7 to 6:     String s = input.nextLine();          // This is line X
Submit Parsons Solution clicked @ 1489453777528
This line is not in its correct location:     while (low < high) {
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
38. Reordered from line 11 to 8:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453786789
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
39. Reordered from line 10 to 8:       if (s.charAt(low) != s.charAt(high)) {
40. Reordered from line 11 to 8:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489453794256
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
41. Reordered from line 10 to 8:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453798453
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 12 to 8:     low= 1; high = s.length() - 1; isPalindrome = true;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489453802293
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 13 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489453807302
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 10 to 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453813082
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 11 to 9:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489453845919
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Reordered from line 10 to 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453849310
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
47. Reordered from line 14 to 9:       low++; high--;
Submit Parsons Solution clicked @ 1489453854761
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
48. Reordered from line 13 to 9:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489453861799
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 14 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489453864564
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Reordered from line 14 to 11:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489453872432
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 18 to 11:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489453878375
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 14 to 11:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453881980
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 14 to 11:       low++; high--;
Submit Parsons Solution clicked @ 1489453885071
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 16 to 11:         break;}
Submit Parsons Solution clicked @ 1489453893842
This line is not in its correct location:         break;}
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 16 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489453897146
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 16 to 11:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489453900324
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Reordered from line 12 to 11:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489453902994
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
58. Reordered from line 20 to 11:       }
Submit Parsons Solution clicked @ 1489453907209
This line is not in its correct location:       }
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
59. Reordered from line 15 to 12:       low++; high--;
60. Reordered from line 12 to 11:       low++; high--;
Submit Parsons Solution clicked @ 1489453911942
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
61. Reordered from line 20 to 11:     else
Submit Parsons Solution clicked @ 1489453915749
This line is not in its correct location:     else
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
62. Reordered from line 19 to 11:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489453919939
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
63. Reordered from line 15 to 12:     if (isPalindrome)
64. Reordered from line 16 to 13:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489453930322
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
65. Reordered from line 14 to 12:     else
Submit Parsons Solution clicked @ 1489453933895
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
66. Reordered from line 18 to 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453937185
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
67. Reordered from line 19 to 12:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489453941974
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
68. Reordered from line 18 to 12:       }
Submit Parsons Solution clicked @ 1489453945928
This line is not in its correct location:       }
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
69. Reordered from line 18 to 12:       low++; high--;
Submit Parsons Solution clicked @ 1489453951114
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
70. Reordered from line 20 to 12:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489453955192
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
*  Indented line 14:       }
71. Reordered from line 16 to 13:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453960602
This line is not in its correct location:       System.out.println(s + " is a palindrome");
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
72. Reordered from line 13 to 12:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453963257
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
73. Reordered from line 17 to 12:     else
Submit Parsons Solution clicked @ 1489453966319
This line is not in its correct location:     else
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
74. Reordered from line 20 to 12:         break;}
Submit Parsons Solution clicked @ 1489453969393
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
75. Reordered from line 14 to 13:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453975064
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
76. Reordered from line 19 to 13:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489453978540
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
77. Reordered from line 15 to 13:     else
Submit Parsons Solution clicked @ 1489453982216
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
78. Reordered from line 18 to 13:       }
Submit Parsons Solution clicked @ 1489453984951
This line is not in its correct location:       }
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
79. Reordered from line 19 to 13:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489453989142
This line is not in its correct location:       System.out.println(s + " is not a palindrome");
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
80. Reordered from line 17 to 13:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489453992690
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
81. Reordered from line 16 to 13:     else
Submit Parsons Solution clicked @ 1489453997280
This line is not in its correct location:     else
Move this line in its place:       low++; high--;
Sorry, your solution is not yet complete and correct.
Please correct your answer
82. Reordered from line 19 to 13:       low++; high--;
Submit Parsons Solution clicked @ 1489454000093
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
83. Reordered from line 20 to 14:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454002574
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
84. Reordered from line 16 to 14:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489454016286
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
85. Reordered from line 15 to 14:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454020248
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
86. Reordered from line 19 to 14:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489454023149
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
87. Reordered from line 17 to 14:     else
Submit Parsons Solution clicked @ 1489454026026
This line is not in its correct location:     else
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
88. Reordered from line 19 to 14:       }
Submit Parsons Solution clicked @ 1489454029532
This line is not in its correct location:     else
Move this line in its place:     if (isPalindrome)
Sorry, your solution is not yet complete and correct.
Please correct your answer
89. Reordered from line 16 to 15:     if (isPalindrome)
Submit Parsons Solution clicked @ 1489454032655
This line is not in its correct location:     else
Move this line in its place:       System.out.println(s + " is a palindrome");
Sorry, your solution is not yet complete and correct.
Please correct your answer
90. Reordered from line 18 to 16:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489454035545
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
91. Reordered from line 18 to 16:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454038899
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
92. Reordered from line 17 to 16:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489454043720
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
93. Reordered from line 20 to 16:       System.out.println(s + " is a palindrome");
Submit Parsons Solution clicked @ 1489454049025
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
94. Reordered from line 19 to 17:     else
95. Reordered from line 19 to 18:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454053737
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
96. Reordered from line 20 to 18:       System.out.println(s + " is not a palindrome");
Submit Parsons Solution clicked @ 1489454056320
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
97. Reordered from line 20 to 19:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489454059774
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
98. Reordered from line 20 to 19:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454062258
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
99. Reordered from line 20 to 19:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489454064901
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
100. Reordered from line 21 to 19:     }}
Submit Parsons Solution clicked @ 1489454067047
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
101. Moved from solution to trash at line 0:    while while (low <= high) {
102. Moved from solution to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489454073805
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
1. Moved from problem to solution at line 0
Line 2 (3 moves): public class Palindrome {
4. Moved from problem to solution at line 2
5. Reordered from line 2 to 3
35. Reordered from line 3 to 2
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Moved from problem to solution at line 3
7. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Moved from problem to solution at line 5
11. Reordered from line 5 to 6
Line 6 (3 moves):     String s = input.nextLine();          // This is line X
12. Moved from problem to solution at line 6
13. Reordered from line 6 to 7
37. Reordered from line 7 to 6
Line 7 (3 moves):     int low, high, isPalindrome;          // This is line Y
8. Moved from problem to solution at line 4
9. Reordered from line 4 to 5
36. Reordered from line 5 to 6
Line 8 (2 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
25. Moved from problem to solution at line 13
43. Reordered from line 13 to 8
Line 9 (5 moves):     while (low < high) {
14. Moved from problem to solution at line 7
15. Reordered from line 7 to 8
16. Moved from solution to problem at line 14
19. Moved from problem to solution at line 8
49. Reordered from line 14 to 9
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
17. Moved from problem to solution at line 7
18. Reordered from line 7 to 8
39. Reordered from line 10 to 8
48. Reordered from line 13 to 9
Line 11 (2 moves):         isPalindrome = false;
27. Moved from problem to solution at line 15
62. Reordered from line 19 to 11
Line 12 (3 moves):         break;}
26. Moved from problem to solution at line 14
54. Reordered from line 16 to 11
74. Reordered from line 20 to 12
Line 13 (9 moves):       low++; high--;
20. Moved from problem to solution at line 9
21. Reordered from line 9 to 10
34. Reordered from line 20 to 14
47. Reordered from line 14 to 9
53. Reordered from line 14 to 11
59. Reordered from line 15 to 12
60. Reordered from line 12 to 11
69. Reordered from line 18 to 12
82. Reordered from line 19 to 13
Line 14 (6 moves):       }
31. Moved from problem to solution at line 19
58. Reordered from line 20 to 11
68. Reordered from line 18 to 12
*  Indented line 14
78. Reordered from line 18 to 13
88. Reordered from line 19 to 14
Line 15 (9 moves):     if (isPalindrome)
22. Moved from problem to solution at line 10
40. Reordered from line 11 to 8
45. Reordered from line 11 to 9
55. Reordered from line 16 to 11
57. Reordered from line 12 to 11
63. Reordered from line 15 to 12
76. Reordered from line 19 to 13
86. Reordered from line 19 to 14
89. Reordered from line 16 to 15
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
28. Moved from problem to solution at line 16
70. Reordered from line 20 to 12
93. Reordered from line 20 to 16
Line 17 (8 moves):     else
30. Moved from problem to solution at line 18
61. Reordered from line 20 to 11
65. Reordered from line 14 to 12
73. Reordered from line 17 to 12
77. Reordered from line 15 to 13
81. Reordered from line 16 to 13
87. Reordered from line 17 to 14
94. Reordered from line 19 to 17
Line 18 (5 moves):       System.out.println(s + " is not a palindrome");
29. Moved from problem to solution at line 17
51. Reordered from line 18 to 11
67. Reordered from line 19 to 12
79. Reordered from line 19 to 13
96. Reordered from line 20 to 18
Line 19 (3 moves):     }}
32. Moved from problem to solution at line 20
33. Reordered from line 20 to 21
100. Reordered from line 21 to 19
Line 9 (37) (17 moves):    while while (low <= high) {
23. Moved from problem to solution at line 11
38. Reordered from line 11 to 8
41. Reordered from line 10 to 8
44. Reordered from line 10 to 9
46. Reordered from line 10 to 9
52. Reordered from line 14 to 11
66. Reordered from line 18 to 12
71. Reordered from line 16 to 13
72. Reordered from line 13 to 12
75. Reordered from line 14 to 13
80. Reordered from line 17 to 13
84. Reordered from line 16 to 14
90. Reordered from line 18 to 16
92. Reordered from line 17 to 16
97. Reordered from line 20 to 19
99. Reordered from line 20 to 19
101. Moved from solution to trash at line 0
Line 8 (7) (11 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
24. Moved from problem to solution at line 12
42. Reordered from line 12 to 8
50. Reordered from line 14 to 11
56. Reordered from line 16 to 11
64. Reordered from line 16 to 13
83. Reordered from line 20 to 14
85. Reordered from line 15 to 14
91. Reordered from line 18 to 16
95. Reordered from line 19 to 18
98. Reordered from line 20 to 19
102. Moved from solution to trash at line 1
Your Grade:
You took 102 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489454137656
Time spent on this problem: 1208 seconds
<HR>
