Problem No. 1
Using Template # 100
The Problem:
public class Palindrome {
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
low++; high--;
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while while (low <= high) {
while (low < high) {
}
if (isPalindrome)
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
public class Palindrome {
System.out.println(s + " is not a palindrome");
System.out.println(s + " is a palindrome");
low++; high--;
else
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
while while (low <= high) {
while (low < high) {
}
if (isPalindrome)
import java.util.Scanner;
low= 0; high = s.length() - 1; isPalindrome = true;
low= 1; high = s.length() - 1; isPalindrome = true;
int low, high, isPalindrome;          // This is line Y
String s = input.nextLine();          // This is line X
break;}
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
public static void main(String[] args) {
if (s.charAt(low) != s.charAt(high)) {
isPalindrome = false;
}}
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0: public class Palindrome {
2. Moved from problem to solution at line 1:   public static void main(String[] args) {
3. Reordered from line 1 to 2:   public static void main(String[] args) {
4. Moved from problem to solution at line 1: import java.util.Scanner;
5. Moved from problem to solution at line 3:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
6. Reordered from line 3 to 4:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
7. Moved from problem to solution at line 4:     int low, high, isPalindrome;          // This is line Y
8. Reordered from line 4 to 5:     int low, high, isPalindrome;          // This is line Y
9. Moved from problem to solution at line 5:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
10. Reordered from line 5 to 6:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
11. Moved from problem to solution at line 6:     String s = input.nextLine();          // This is line X
12. Reordered from line 6 to 7:     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 7:       if (s.charAt(low) != s.charAt(high)) {
14. Reordered from line 7 to 8:       if (s.charAt(low) != s.charAt(high)) {
15. Moved from problem to solution at line 8:       low++; high--;
16. Moved from problem to solution at line 9:         isPalindrome = false;
*  Outdented line 9:         isPalindrome = false;
17. Moved from problem to solution at line 10:       System.out.println(s + " is a palindrome");
18. Reordered from line 10 to 11:       System.out.println(s + " is a palindrome");
19. Moved from problem to solution at line 11:     else
20. Reordered from line 11 to 12:     else
21. Moved from problem to solution at line 12:       System.out.println(s + " is not a palindrome");
22. Reordered from line 12 to 13:       System.out.println(s + " is not a palindrome");
23. Moved from problem to solution at line 11:     if (isPalindrome)
24. Reordered from line 11 to 9:     if (isPalindrome)
25. Reordered from line 12 to 10:       System.out.println(s + " is a palindrome");
26. Reordered from line 14 to 11:       System.out.println(s + " is not a palindrome");
27. Reordered from line 14 to 11:     else
28. Moved from problem to solution at line 8:     low= 0; high = s.length() - 1; isPalindrome = true;
29. Reordered from line 8 to 12:     low= 0; high = s.length() - 1; isPalindrome = true;
30. Reordered from line 12 to 11:     low= 0; high = s.length() - 1; isPalindrome = true;
31. Moved from problem to solution at line 12:    while while (low <= high) {
32. Moved from problem to solution at line 14:     while (low < high) {
33. Moved from problem to solution at line 15:     low= 1; high = s.length() - 1; isPalindrome = true;
34. Moved from problem to solution at line 18:         break;}
35. Reordered from line 18 to 19:         break;}
36. Moved from problem to solution at line 18:       }
37. Moved from solution to problem at line 12:       }
38. Moved from problem to solution at line 19:       }
39. Reordered from line 19 to 20:       }
40. Moved from problem to solution at line 20:     }}
41. Reordered from line 20 to 21:     }}
Submit Parsons Solution clicked @ 1489447460432
This line is not in its correct location:     int low, high, isPalindrome;          // This is line Y
Move this line in its place:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
Sorry, your solution is not yet complete and correct.
Please correct your answer
42. Reordered from line 5 to 8:     int low, high, isPalindrome;          // This is line Y
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1489447483285
This line is not in its correct location:       low++; high--;
Move this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
43. Reordered from line 8 to 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489447584295
This line is not in its correct location:       low++; high--;
Move this line in its place:     low= 0; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
44. Reordered from line 11 to 8:     low= 0; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447596902
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
45. Reordered from line 12 to 8:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489447605895
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
46. Moved from solution to problem at line 6:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489447613705
Please clear all the lines from the left panel before submitting your answer.
47. Moved from problem to solution at line 20:    while while (low <= high) {
48. Reordered from line 21 to 20:     }}
Submit Parsons Solution clicked @ 1489447630401
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
49. Reordered from line 21 to 9:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489447637987
Sorry, that line has a bug
Delete this line:    while while (low <= high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
50. Moved from solution to trash at line 0:    while while (low <= high) {
Submit Parsons Solution clicked @ 1489447655849
This line is not in its correct location:       low++; high--;
Move this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
51. Reordered from line 13 to 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489447662131
This line is not in its correct location:       low++; high--;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
52. Reordered from line 17 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489447691290
This line is not in its correct location:       low++; high--;
Move this line in its place:         isPalindrome = false;
Sorry, your solution is not yet complete and correct.
Please correct your answer
53. Reordered from line 17 to 10:         isPalindrome = false;
Submit Parsons Solution clicked @ 1489447695760
This line is not in its correct location:         isPalindrome = false;
Move this line in its place:       if (s.charAt(low) != s.charAt(high)) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
54. Reordered from line 11 to 10:       if (s.charAt(low) != s.charAt(high)) {
Submit Parsons Solution clicked @ 1489447700619
This line is not in its correct location:       low++; high--;
Move this line in its place:         break;}
Sorry, your solution is not yet complete and correct.
Please correct your answer
55. Reordered from line 18 to 12:         break;}
Submit Parsons Solution clicked @ 1489447705966
This line is not in its correct location:     if (isPalindrome)
Move this line in its place:       }
Sorry, your solution is not yet complete and correct.
Please correct your answer
56. Reordered from line 19 to 14:       }
Submit Parsons Solution clicked @ 1489447710133
Sorry, that line has a bug
Delete this line:     low= 1; high = s.length() - 1; isPalindrome = true;
Sorry, your solution is not yet complete and correct.
Please correct your answer
57. Moved from solution to problem at line 16:     low= 1; high = s.length() - 1; isPalindrome = true;
58. Moved from problem to trash at line 1:     low= 1; high = s.length() - 1; isPalindrome = true;
Submit Parsons Solution clicked @ 1489447731723
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
4. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
1. Moved from problem to solution at line 0
Line 3 (2 moves):   public static void main(String[] args) {
2. Moved from problem to solution at line 1
3. Reordered from line 1 to 2
Line 4 (2 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
5. Moved from problem to solution at line 3
6. Reordered from line 3 to 4
Line 5 (2 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
9. Moved from problem to solution at line 5
10. Reordered from line 5 to 6
Line 6 (2 moves):     String s = input.nextLine();          // This is line X
11. Moved from problem to solution at line 6
12. Reordered from line 6 to 7
Line 7 (4 moves):     int low, high, isPalindrome;          // This is line Y
7. Moved from problem to solution at line 4
8. Reordered from line 4 to 5
42. Reordered from line 5 to 8
43. Reordered from line 8 to 7
Line 8 (4 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
28. Moved from problem to solution at line 8
29. Reordered from line 8 to 12
30. Reordered from line 12 to 11
44. Reordered from line 11 to 8
Line 9 (2 moves):     while (low < high) {
32. Moved from problem to solution at line 14
51. Reordered from line 13 to 9
Line 10 (4 moves):       if (s.charAt(low) != s.charAt(high)) {
13. Moved from problem to solution at line 7
14. Reordered from line 7 to 8
52. Reordered from line 17 to 10
54. Reordered from line 11 to 10
Line 11 (3 moves):         isPalindrome = false;
16. Moved from problem to solution at line 9
*  Outdented line 9
53. Reordered from line 17 to 10
Line 12 (3 moves):         break;}
34. Moved from problem to solution at line 18
35. Reordered from line 18 to 19
55. Reordered from line 18 to 12
Line 13 (1 moves):       low++; high--;
15. Moved from problem to solution at line 8
Line 14 (5 moves):       }
36. Moved from problem to solution at line 18
37. Moved from solution to problem at line 12
38. Moved from problem to solution at line 19
39. Reordered from line 19 to 20
56. Reordered from line 19 to 14
Line 15 (2 moves):     if (isPalindrome)
23. Moved from problem to solution at line 11
24. Reordered from line 11 to 9
Line 16 (3 moves):       System.out.println(s + " is a palindrome");
17. Moved from problem to solution at line 10
18. Reordered from line 10 to 11
25. Reordered from line 12 to 10
Line 17 (3 moves):     else
19. Moved from problem to solution at line 11
20. Reordered from line 11 to 12
27. Reordered from line 14 to 11
Line 18 (3 moves):       System.out.println(s + " is not a palindrome");
21. Moved from problem to solution at line 12
22. Reordered from line 12 to 13
26. Reordered from line 14 to 11
Line 19 (3 moves):     }}
40. Moved from problem to solution at line 20
41. Reordered from line 20 to 21
48. Reordered from line 21 to 20
Line 9 (37) (6 moves):    while while (low <= high) {
31. Moved from problem to solution at line 12
45. Reordered from line 12 to 8
46. Moved from solution to problem at line 6
47. Moved from problem to solution at line 20
49. Reordered from line 21 to 9
50. Moved from solution to trash at line 0
Line 8 (7) (3 moves):     low= 1; high = s.length() - 1; isPalindrome = true;
33. Moved from problem to solution at line 15
57. Moved from solution to problem at line 16
58. Moved from problem to trash at line 1
Your Grade:
You took 58 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489447748493
Time spent on this problem: 700 seconds
<HR>
