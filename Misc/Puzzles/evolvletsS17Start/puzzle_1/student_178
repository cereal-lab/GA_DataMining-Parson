Problem No. 1
Using Template # 100
The Problem:
}}
System.out.println(s + " is not a palindrome");
else
import java.util.Scanner;
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
isPalindrome = false;
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
}
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 21 lines.
Re-assemble them with 23 (or fewer) moves for full credit
Using Template # 100
The Problem:
}}
System.out.println(s + " is not a palindrome");
else
import java.util.Scanner;
low++; high--;
System.out.print("Enter a string: "); //This line should immediately be placed before Line X
if (isPalindrome)
isPalindrome = false;
System.out.println(s + " is a palindrome");
if (s.charAt(low) != s.charAt(high)) {
String s = input.nextLine();          // This is line X
public static void main(String[] args) {
}
int low, high, isPalindrome;          // This is line Y
Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
break;}
while while (low <= high) {
while (low < high {
while (low < high) {
low= 0; high = s.length() - 1; isPalindrome = true;
public class Palindrome {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
1. Moved from problem to solution at line 0:     }}
2. Moved from problem to solution at line 1:       System.out.println(s + " is not a palindrome");
3. Moved from problem to solution at line 1:     else
4. Moved from problem to solution at line 1:       System.out.println(s + " is a palindrome");
5. Moved from problem to solution at line 1:     if (isPalindrome)
6. Moved from problem to solution at line 1:       }
7. Moved from problem to solution at line 1:       low++; high--;
8. Moved from problem to solution at line 1:         break;}
9. Moved from problem to solution at line 1:         isPalindrome = false;
10. Moved from problem to solution at line 1:       if (s.charAt(low) != s.charAt(high)) {
11. Moved from problem to solution at line 1:     while (low < high {
12. Moved from problem to solution at line 1:     low= 0; high = s.length() - 1; isPalindrome = true;
13. Moved from problem to solution at line 1:     String s = input.nextLine();          // This is line X
14. Moved from problem to solution at line 1:     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
15. Moved from problem to solution at line 1:     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
16. Moved from problem to solution at line 1:   public static void main(String[] args) {
17. Moved from problem to solution at line 1: public class Palindrome {
18. Moved from problem to solution at line 1: import java.util.Scanner;
19. Moved from problem to trash at line 0:     int low, high, isPalindrome;          // This is line Y
20. Moved from problem to trash at line 1:    while while (low <= high) {
21. Moved from problem to trash at line 2:     while (low < high) {
Submit Parsons Solution clicked @ 1489459579613
This line is not in its correct location:     low= 0; high = s.length() - 1; isPalindrome = true;
Insert this line in its place:     int low, high, isPalindrome;          // This is line Y
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Moved from trash to solution at line 7:     int low, high, isPalindrome;          // This is line Y
Submit Parsons Solution clicked @ 1489459595479
Sorry, that line has a bug
Delete this line:     while (low < high {
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Moved from solution to trash at line 2:     while (low < high {
Submit Parsons Solution clicked @ 1489459612682
This line is not in its correct location:       if (s.charAt(low) != s.charAt(high)) {
Insert this line in its place:     while (low < high) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Moved from trash to solution at line 9:     while (low < high) {
Submit Parsons Solution clicked @ 1489459630021
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): import java.util.Scanner;
18. Moved from problem to solution at line 1
Line 2 (1 moves): public class Palindrome {
17. Moved from problem to solution at line 1
Line 3 (1 moves):   public static void main(String[] args) {
16. Moved from problem to solution at line 1
Line 4 (1 moves):     Scanner input = new Scanner(System.in); //This line should  be placed before Line Y
15. Moved from problem to solution at line 1
Line 5 (1 moves):     System.out.print("Enter a string: "); //This line should immediately be placed before Line X
14. Moved from problem to solution at line 1
Line 6 (1 moves):     String s = input.nextLine();          // This is line X
13. Moved from problem to solution at line 1
Line 7 (2 moves):     int low, high, isPalindrome;          // This is line Y
19. Moved from problem to trash at line 0
22. Moved from trash to solution at line 7
Line 8 (1 moves):     low= 0; high = s.length() - 1; isPalindrome = true;
12. Moved from problem to solution at line 1
Line 9 (2 moves):     while (low < high) {
21. Moved from problem to trash at line 2
24. Moved from trash to solution at line 9
Line 10 (1 moves):       if (s.charAt(low) != s.charAt(high)) {
10. Moved from problem to solution at line 1
Line 11 (1 moves):         isPalindrome = false;
9. Moved from problem to solution at line 1
Line 12 (1 moves):         break;}
8. Moved from problem to solution at line 1
Line 13 (1 moves):       low++; high--;
7. Moved from problem to solution at line 1
Line 14 (1 moves):       }
6. Moved from problem to solution at line 1
Line 15 (1 moves):     if (isPalindrome)
5. Moved from problem to solution at line 1
Line 16 (1 moves):       System.out.println(s + " is a palindrome");
4. Moved from problem to solution at line 1
Line 17 (1 moves):     else
3. Moved from problem to solution at line 1
Line 18 (1 moves):       System.out.println(s + " is not a palindrome");
2. Moved from problem to solution at line 1
Line 19 (1 moves):     }}
1. Moved from problem to solution at line 0
Line 9 (37) (1 moves):    while while (low <= high) {
20. Moved from problem to trash at line 1
Line 9 (5) (2 moves):     while (low < high {
11. Moved from problem to solution at line 1
23. Moved from solution to trash at line 2
Your Grade:
You took 24 steps to solve a Parsons puzzle containing 21 lines of code.
Next Problem clicked @ 1489459637005
Time spent on this problem: 419 seconds
<HR>
