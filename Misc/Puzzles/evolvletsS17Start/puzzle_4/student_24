Problem No. 4
Using Template # 100
The Problem:
System.out.print("   " + j);
for (int i = 1; i <= 9; i++) {
for (int j = 1; j <= 9; j++)
for for (int j = 1; j < 9; j++)
System.out.print("    ");
System.out.print(i + " | ");
for (int j = 1; j <= 9; j++) {
System.out.println("           Multiplication Table");
public static void Main(String[] args) {
public static void main(String[] args) {
System.out.printf("%4d", i * j);}
}}
System.out.println("\n-----------------------------------------");
System.out.println();}
public class MultiplicationTable {
Using Template # 100
The Problem:
Using Template # 100
The Problem:
This problem contains 15 lines.
Re-assemble them with 16 (or fewer) moves for full credit
1. Moved from problem to solution at line 0: public class MultiplicationTable {
2. Moved from problem to trash at line 0:   public static void main(String[] args) {
3. Moved from problem to solution at line 1:   public static void Main(String[] args) {
4. Reordered from line 2 to 1: public class MultiplicationTable {
5. Moved from problem to trash at line 1:         System.out.printf("%4d", i * j);}
6. Moved from problem to solution at line 2: }}
7. Reordered from line 2 to 3: }}
8. Moved from problem to solution at line 3:     for (int i = 1; i <= 9; i++) {
9. Moved from problem to solution at line 4:     for (int j = 1; j <= 9; j++)
10. Moved from problem to solution at line 5:    for for (int j = 1; j < 9; j++)
11. Moved from problem to solution at line 6:     System.out.println("\n-----------------------------------------");
12. Moved from problem to solution at line 7:     System.out.println("           Multiplication Table");
13. Moved from problem to solution at line 6:       for (int j = 1; j <= 9; j++) {
14. Moved from problem to solution at line 9:       System.out.print(i + " | ");
15. Moved from problem to solution at line 10:     System.out.print("    ");
16. Moved from problem to solution at line 11:       System.out.print("   " + j);
17. Moved from problem to solution at line 12:       System.out.println();}
Submit Parsons Solution clicked @ 1489264109934
Sorry, that line has a bug
Delete this line:   public static void Main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
18. Moved from solution to trash at line 1:   public static void Main(String[] args) {
Submit Parsons Solution clicked @ 1489264117214
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Insert this line in its place:   public static void main(String[] args) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
19. Moved from trash to solution at line 2:   public static void main(String[] args) {
Submit Parsons Solution clicked @ 1489264128589
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:     System.out.println("           Multiplication Table");
Sorry, your solution is not yet complete and correct.
Please correct your answer
20. Reordered from line 8 to 3:     System.out.println("           Multiplication Table");
Submit Parsons Solution clicked @ 1489264133972
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:     System.out.print("    ");
Sorry, your solution is not yet complete and correct.
Please correct your answer
21. Reordered from line 10 to 4:     System.out.print("    ");
Submit Parsons Solution clicked @ 1489264141120
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:     for (int j = 1; j <= 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
22. Reordered from line 6 to 5:     for (int j = 1; j <= 9; j++)
Submit Parsons Solution clicked @ 1489264148891
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:       System.out.print("   " + j);
Sorry, your solution is not yet complete and correct.
Please correct your answer
23. Reordered from line 11 to 6:       System.out.print("   " + j);
Submit Parsons Solution clicked @ 1489264155339
This line is not in its correct location:     for (int i = 1; i <= 9; i++) {
Move this line in its place:     System.out.println("\n-----------------------------------------");
Sorry, your solution is not yet complete and correct.
Please correct your answer
24. Reordered from line 10 to 7:     System.out.println("\n-----------------------------------------");
25. Reordered from line 9 to 8:    for for (int j = 1; j < 9; j++)
26. Reordered from line 11 to 9:       System.out.print(i + " | ");
Submit Parsons Solution clicked @ 1489264170284
Sorry, that line has a bug
Delete this line:    for for (int j = 1; j < 9; j++)
Sorry, your solution is not yet complete and correct.
Please correct your answer
27. Moved from solution to trash at line 2:    for for (int j = 1; j < 9; j++)
Submit Parsons Solution clicked @ 1489264180918
This line is not in its correct location:       System.out.print(i + " | ");
Move this line in its place:     for (int i = 1; i <= 9; i++) {
Sorry, your solution is not yet complete and correct.
Please correct your answer
28. Reordered from line 9 to 8:     for (int i = 1; i <= 9; i++) {
Submit Parsons Solution clicked @ 1489264187444
This line is not in its correct location:       System.out.println();}
Insert this line in its place:         System.out.printf("%4d", i * j);}
Sorry, your solution is not yet complete and correct.
Please correct your answer
29. Moved from trash to solution at line 11:         System.out.printf("%4d", i * j);}
Submit Parsons Solution clicked @ 1489264196659
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (2 moves): public class MultiplicationTable {
1. Moved from problem to solution at line 0
4. Reordered from line 2 to 1
Line 2 (2 moves):   public static void main(String[] args) {
2. Moved from problem to trash at line 0
19. Moved from trash to solution at line 2
Line 3 (2 moves):     System.out.println("           Multiplication Table");
12. Moved from problem to solution at line 7
20. Reordered from line 8 to 3
Line 4 (2 moves):     System.out.print("    ");
15. Moved from problem to solution at line 10
21. Reordered from line 10 to 4
Line 5 (2 moves):     for (int j = 1; j <= 9; j++)
9. Moved from problem to solution at line 4
22. Reordered from line 6 to 5
Line 6 (2 moves):       System.out.print("   " + j);
16. Moved from problem to solution at line 11
23. Reordered from line 11 to 6
Line 7 (2 moves):     System.out.println("\n-----------------------------------------");
11. Moved from problem to solution at line 6
24. Reordered from line 10 to 7
Line 8 (2 moves):     for (int i = 1; i <= 9; i++) {
8. Moved from problem to solution at line 3
28. Reordered from line 9 to 8
Line 9 (2 moves):       System.out.print(i + " | ");
14. Moved from problem to solution at line 9
26. Reordered from line 11 to 9
Line 10 (1 moves):       for (int j = 1; j <= 9; j++) {
13. Moved from problem to solution at line 6
Line 11 (2 moves):         System.out.printf("%4d", i * j);}
5. Moved from problem to trash at line 1
29. Moved from trash to solution at line 11
Line 12 (1 moves):       System.out.println();}
17. Moved from problem to solution at line 12
Line 13 (2 moves): }}
6. Moved from problem to solution at line 2
7. Reordered from line 2 to 3
Line 2 (3) (2 moves):   public static void Main(String[] args) {
3. Moved from problem to solution at line 1
18. Moved from solution to trash at line 1
Line 5 (29) (3 moves):    for for (int j = 1; j < 9; j++)
10. Moved from problem to solution at line 5
25. Reordered from line 9 to 8
27. Moved from solution to trash at line 2
Your Grade:
You took 29 steps to solve a Parsons puzzle containing 15 lines of code.
Next Problem clicked @ 1489264199099
Time spent on this problem: 196 seconds
<HR>
