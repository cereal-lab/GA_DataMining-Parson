Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
firstValue = stdin.nextShort();
else
} // End of else-clause
if  firstValue  <  secondNum
if( firstValue  <  secondNum )
short secondNum
short secondNum;
System.out.print( firstValue);
System.out.print( "Enter the first value");
} // End of if-clause
System.out.print( "Enter the second value");
System.out.print( secondNum);
{
secondNum = stdin.nextShort();
short firstValue;
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondNum
// Read firstValue
// Read secondNum
// If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
firstValue = stdin.nextShort();
else
} // End of else-clause
if  firstValue  <  secondNum
if( firstValue  <  secondNum )
short secondNum
short secondNum;
System.out.print( firstValue);
System.out.print( "Enter the first value");
} // End of if-clause
System.out.print( "Enter the second value");
System.out.print( secondNum);
{
secondNum = stdin.nextShort();
short firstValue;
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondNum
// Read firstValue
// Read secondNum
// If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Tutor selected  @ 1448331363345
Moved from problem to solution at line 11: System.out.print( firstValue);
Moved from problem to solution at line 13: System.out.print( secondNum);
Moved from problem to solution at line 10: short secondNum
Moved from problem to solution at line 16: if( firstValue  <  secondNum )
Moved from problem to trash at line 0: {
Moved from problem to trash at line 1: short firstValue;
Moved from problem to trash at line 2: secondNum = stdin.nextShort();
Moved from problem to trash at line 3: System.out.print( "Enter the second value");
Moved from problem to trash at line 4: {
Moved from problem to trash at line 1: } // End of if-clause
Moved from problem to trash at line 5: System.out.print( "Enter the first value");
Moved from problem to trash at line 2: short secondNum;
Moved from problem to trash at line 1: if  firstValue  <  secondNum
Moved from problem to trash at line 2: } // End of else-clause
Moved from problem to trash at line 2: firstValue = stdin.nextShort();
Moved from problem to trash at line 1: else
Submit Parsons Solution clicked @ 1448331731671
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 9: short firstValue;
Submit Parsons Solution clicked @ 1448331752907
Every statement must end with a semi-colon ;
Delete this line: short secondNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Outdented line 11: short secondNum
Moved from solution to problem at line 6: short secondNum
Moved from problem to trash at line 11: short secondNum
Submit Parsons Solution clicked @ 1448331772620
Other lines should appear before this line: // Read firstValue
Insert this line in its place: short secondNum;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 11: short secondNum
Submit Parsons Solution clicked @ 1448331788916
Every statement must end with a semi-colon ;
Delete this line: short secondNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 5: short secondNum
Submit Parsons Solution clicked @ 1448332057745
Other lines should appear before this line: // Read firstValue
Insert this line in its place: short secondNum;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Attempted to reorder // The Java program
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder // Declare firstValue
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder // Read secondNum
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Attempted to move from solution to problem at line 13: } // End of class Problem
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 12: // If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 11: System.out.print( secondNum);
Moved from solution to problem at line 8: System.out.print( firstValue);
Attempted to move from solution to problem at line 7: // Declare secondNum
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 8: short firstValue;
Attempted to move from solution to problem at line 8: // Read firstValue
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 7: // Declare secondNum
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 5: Scanner stdin = new Scanner( System.in );
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 4: Scanner stdin = new Scanner( System.in );
Do not remove the lines already provided to you - they are all needed.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder public class Problem
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder import java.util.Scanner;
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder // The Java program
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder public class Problem
This line was provided to you in its correct order. Do not reorder it.
Outdented line 1: // The Java program
Attempted to reorder // The Java program
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder import java.util.Scanner;
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Attempted to move from solution to problem at line 7: // Declare firstValue
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 8: // If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 11: if( firstValue  <  secondNum )
Attempted to move from solution to problem at line 11: }  // End of method main
Do not remove the lines already provided to you - they are all needed.
Moved from problem to trash at line 11: if( firstValue  <  secondNum )
Moved from problem to trash at line 13: System.out.print( firstValue);
Moved from problem to trash at line 11: System.out.print( secondNum);
Moved from problem to trash at line 11: short firstValue;
Submit Parsons Solution clicked @ 1448332103269
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332103879
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332104051
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332104191
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332104347
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332104488
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1448332104644
Other lines should appear before this line: // Declare secondNum
Insert this line in its place: short firstValue;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 9: short firstValue;
Submit Parsons Solution clicked @ 1448332127983
Other lines should appear before this line: // Read firstValue
Insert this line in its place: short secondNum;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 11: short secondNum
Submit Parsons Solution clicked @ 1448332143314
Every statement must end with a semi-colon ;
Delete this line: short secondNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 15: System.out.print( secondNum);
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1448332312724
Every statement must end with a semi-colon ;
Delete this line: short secondNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1448332314756
Here is a summary of your actions sorted by line
Line 1 (4 moves): // The Java program
Attempted to reorder line 1
Attempted to reorder line 1
Outdented line 1
Attempted to reorder line 1
Line 2 (2 moves): import java.util.Scanner;
Attempted to reorder line 2
Attempted to reorder line 2
Line 3 (2 moves): public class Problem
Attempted to reorder line 3
Attempted to reorder line 3
Line 4 (2 moves): {
Attempted to reorder line 4
Attempted to reorder line 4
Line 6 (0 moves): public static void main( String args[] )
Line 7 (4 moves): {
Attempted to reorder line 7
Attempted to reorder line 7
Attempted to reorder line 7
Attempted to reorder line 7
Line 8 (2 moves): Scanner stdin = new Scanner( System.in );
Attempted to move from solution to problem at line 5
Attempted to move from solution to problem at line 4
Line 10 (2 moves): // Declare firstValue
Attempted to reorder line 10
Attempted to move from solution to problem at line 7
Line 11 (5 moves): short firstValue;
Moved from problem to trash at line 1
Moved from trash to solution at line 9
Moved from solution to problem at line 8
Moved from problem to trash at line 11
Moved from trash to solution at line 9
Line 13 (2 moves): // Declare secondNum
Attempted to move from solution to problem at line 7
Attempted to move from solution to problem at line 7
LINE 14 (7 moves): short secondNum
Moved from problem to solution at line 10
Outdented line 11
Moved from solution to problem at line 6
Moved from problem to trash at line 11
Moved from trash to solution at line 11
Moved from solution to trash at line 5
Moved from trash to solution at line 11
Line 16 (1 moves): // Read firstValue
Attempted to move from solution to problem at line 8
Line 20 (1 moves): // Read secondNum
Attempted to reorder line 20
Line 24 (2 moves): // If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
Attempted to move from solution to problem at line 12
Attempted to move from solution to problem at line 8
Line 31 (4 moves): System.out.print( secondNum);
Moved from problem to solution at line 13
Moved from solution to problem at line 11
Moved from problem to trash at line 11
Moved from trash to solution at line 15
Line 33 (2 moves): }  // End of method main
Attempted to reorder line 33
Attempted to move from solution to problem at line 11
Line 35 (2 moves): } // End of class Problem
Attempted to reorder line 35
Attempted to move from solution to problem at line 13
Line 26 (1 moves): {
Moved from problem to trash at line 0
Line 22 (1 moves): secondNum = stdin.nextShort();
Moved from problem to trash at line 2
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to trash at line 3
Line 30 (1 moves): {
Moved from problem to trash at line 4
Line 28 (1 moves): } // End of if-clause
Moved from problem to trash at line 1
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to trash at line 5
Line 14 (1 moves): short secondNum;
Moved from problem to trash at line 2
LINE 25 (1 moves): if  firstValue  <  secondNum
Moved from problem to trash at line 1
Line 32 (1 moves): } // End of else-clause
Moved from problem to trash at line 2
Line 18 (1 moves): firstValue = stdin.nextShort();
Moved from problem to trash at line 2
Line 29 (1 moves): else
Moved from problem to trash at line 1
Line 25 (3 moves): if( firstValue  <  secondNum )
Moved from problem to solution at line 16
Moved from solution to problem at line 11
Moved from problem to trash at line 11
Line 27 (3 moves): System.out.print( firstValue);
Moved from problem to solution at line 11
Moved from solution to problem at line 8
Moved from problem to trash at line 13
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 32 steps before bailing out of a Parsons puzzle containing 16 lines of code.
The correct answer is as follows:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
short firstValue;
// Declare secondNum
short secondNum;
// Read firstValue
System.out.print( "Enter the first value");
firstValue = stdin.nextShort();
// Read secondNum
System.out.print( "Enter the second value");
secondNum = stdin.nextShort();
// If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
if( firstValue  <  secondNum )
{
System.out.print( firstValue);
} // End of if-clause
else
{
System.out.print( secondNum);
} // End of else-clause
}  // End of method main
} // End of class Problem
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1448332316443
Time spent on this problem: 1019 seconds
<HR>
