Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the second value");
{
if( firstValue  <  secondNum )
} // End of else-clause
secondNum = stdin.nextShort();
firstValue = stdin.nextShort();
System.out.print( "Enter the first value");
short secondNum
short secondNum;
short firstValue;
} // End of if-clause
{
System.out.print( secondNum);
else:
else
System.out.print( firstValue);
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondNum
// Read firstValue
// Read secondNum
// If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the second value");
{
if( firstValue  <  secondNum )
} // End of else-clause
secondNum = stdin.nextShort();
firstValue = stdin.nextShort();
System.out.print( "Enter the first value");
short secondNum
short secondNum;
short firstValue;
} // End of if-clause
{
System.out.print( secondNum);
else:
else
System.out.print( firstValue);
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondNum
// Read firstValue
// Read secondNum
// If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to trash at line 0: else:
Moved from problem to trash at line 1: {
Moved from problem to trash at line 2: } // End of if-clause
Moved from problem to trash at line 1: {
Moved from problem to trash at line 1: } // End of else-clause
Moved from problem to solution at line 13: if( firstValue  <  secondNum )
Moved from problem to solution at line 14: System.out.print( firstValue);
Moved from problem to solution at line 15: else
Moved from problem to solution at line 16: System.out.print( secondNum);
Moved from problem to solution at line 12: System.out.print( "Enter the second value");
Moved from problem to solution at line 11: System.out.print( "Enter the first value");
Moved from problem to solution at line 10: short secondNum
Moved from problem to trash at line 3: short secondNum;
Moved from problem to solution at line 9: short firstValue;
Moved from problem to solution at line 16: secondNum = stdin.nextShort();
Moved from problem to solution at line 14: firstValue = stdin.nextShort();
Submit Parsons Solution clicked @ 1448309036113
Every statement must end with a semi-colon ;
Delete this line: short secondNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Attempted to move from solution to trash at line 1: } // End of class Problem
Do not remove the lines already provided to you - they are all needed.
Moved from solution to trash at line 3: short secondNum
Moved from trash to solution at line 11: short secondNum;
Submit Parsons Solution clicked @ 1448309063138
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstValue
Line 11 (1 moves): short firstValue;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondNum
Line 14 (2 moves): short secondNum;
Moved from problem to trash at line 3
Moved from trash to solution at line 11
Line 16 (0 moves): // Read firstValue
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 11
Line 18 (1 moves): firstValue = stdin.nextShort();
Moved from problem to solution at line 14
Line 20 (0 moves): // Read secondNum
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 12
Line 22 (1 moves): secondNum = stdin.nextShort();
Moved from problem to solution at line 16
Line 24 (0 moves): // If firstValue is less than secondNum, print firstValue. Otherwise, print secondNum
Line 25 (1 moves): if( firstValue  <  secondNum )
Moved from problem to solution at line 13
Line 27 (1 moves): System.out.print( firstValue);
Moved from problem to solution at line 14
Line 29 (1 moves): else
Moved from problem to solution at line 15
Line 31 (1 moves): System.out.print( secondNum);
Moved from problem to solution at line 16
Line 33 (0 moves): }  // End of method main
Line 35 (1 moves): } // End of class Problem
Attempted to move from solution to trash at line 1
LINE 29 (1 moves): else:
Moved from problem to trash at line 0
Line 26 (1 moves): {
Moved from problem to trash at line 1
Line 28 (1 moves): } // End of if-clause
Moved from problem to trash at line 2
Line 30 (1 moves): {
Moved from problem to trash at line 1
Line 32 (1 moves): } // End of else-clause
Moved from problem to trash at line 1
LINE 14 (2 moves): short secondNum
Moved from problem to solution at line 10
Moved from solution to trash at line 3
Your Grade:
You took 18 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1448309065558
Time spent on this problem: 133 seconds
<HR>
