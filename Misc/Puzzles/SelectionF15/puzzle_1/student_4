Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the second value");
secondInput = Short.parseShort( stdin.readLine() );
secondInput == Short.parseShort( stdin.readLine() );
short secondInput;
short firstInput;
System.out.print( firstInput);
else
if( firstInput  <  secondInput )
} // End of else-clause
{
} // End of if-clause
firstInput = Short.parseShort( stdin.readLine() );
System.out.print( secondInput);
{
System.out.print( "Enter the first value");
System.out.print( "Enter the first value")
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.io.*;
public class Problem
{
public static void main( String args[] ) throws IOException
{
InputStreamReader iStream = new InputStreamReader(System.in);
BufferedReader stdin = new BufferedReader(iStream);
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the second value");
secondInput = Short.parseShort( stdin.readLine() );
secondInput == Short.parseShort( stdin.readLine() );
short secondInput;
short firstInput;
System.out.print( firstInput);
else
if( firstInput  <  secondInput )
} // End of else-clause
{
} // End of if-clause
firstInput = Short.parseShort( stdin.readLine() );
System.out.print( secondInput);
{
System.out.print( "Enter the first value");
System.out.print( "Enter the first value")
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.io.*;
public class Problem
{
public static void main( String args[] ) throws IOException
{
InputStreamReader iStream = new InputStreamReader(System.in);
BufferedReader stdin = new BufferedReader(iStream);
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 8: System.out.print( firstInput);
Moved from problem to solution at line 5: short secondInput;
Moved from problem to solution at line 6: secondInput == Short.parseShort( stdin.readLine() );
Moved from problem to solution at line 11: } // End of if-clause
Moved from problem to solution at line 15: System.out.print( "Enter the first value")
Moved from problem to solution at line 14: System.out.print( secondInput);
Moved from problem to solution at line 10: if( firstInput  <  secondInput )
Moved from problem to solution at line 6: System.out.print( "Enter the second value");
Moved from problem to solution at line 7: secondInput = Short.parseShort( stdin.readLine() );
Moved from problem to solution at line 13: } // End of else-clause
Moved from problem to trash at line 0: System.out.print( "Enter the first value");
Moved from problem to trash at line 1: firstInput = Short.parseShort( stdin.readLine() );
Moved from problem to trash at line 2: short firstInput;
Moved from problem to trash at line 3: else
Moved from problem to trash at line 4: {
Moved from problem to trash at line 5: {
Moved from trash to problem at line 16: firstInput = Short.parseShort( stdin.readLine() );
Moved from trash to problem at line 16: System.out.print( "Enter the first value");
Moved from trash to problem at line 16: else
Moved from trash to problem at line 16: short firstInput;
Moved from trash to problem at line 16: {
Moved from trash to problem at line 16: {
Moved from problem to solution at line 20: System.out.print( "Enter the first value");
Moved from problem to solution at line 15: firstInput = Short.parseShort( stdin.readLine() );
Attempted to reorder // Declare secondInput
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
This line was provided to you in its correct order. Do not reorder it.
Moved from solution to trash at line 0: System.out.print( "Enter the first value");
Attempted to move from solution to trash at line 1: } // End of class Problem
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to trash at line 1: // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Do not remove the lines already provided to you - they are all needed.
Moved from solution to trash at line 1: System.out.print( firstInput);
Attempted to move from solution to trash at line 1: // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Do not remove the lines already provided to you - they are all needed.
Moved from trash to problem at line 11: System.out.print( "Enter the first value");
Moved from trash to problem at line 12: System.out.print( firstInput);
Moved from solution to problem at line 8: if( firstInput  <  secondInput )
Attempted to move from solution to problem at line 8: InputStreamReader iStream = new InputStreamReader(System.in);
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 7: {
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 5: secondInput = Short.parseShort( stdin.readLine() );
Attempted to move from solution to problem at line 6: public static void main( String args[] ) throws IOException
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 7: InputStreamReader iStream = new InputStreamReader(System.in);
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 9: } // End of if-clause
Moved from solution to problem at line 11: System.out.print( secondInput);
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Attempted to move from solution to problem at line 14: // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Do not remove the lines already provided to you - they are all needed.
Moved from solution to problem at line 13: System.out.print( "Enter the first value")
Attempted to move from solution to problem at line 13: // Read secondInput
Do not remove the lines already provided to you - they are all needed.
Moved from problem to trash at line 0: System.out.print( "Enter the first value");
Moved from problem to trash at line 1: System.out.print( "Enter the first value")
Moved from problem to trash at line 2: System.out.print( secondInput);
Moved from problem to trash at line 3: if( firstInput  <  secondInput )
Moved from problem to trash at line 2: System.out.print( firstInput);
Moved from problem to trash at line 2: short firstInput;
Moved from problem to trash at line 4: secondInput = Short.parseShort( stdin.readLine() );
Moved from problem to trash at line 2: else
Attempted to reorder InputStreamReader iStream = new InputStreamReader(System.in);
This line was provided to you in its correct order. Do not reorder it.
Explain Parsons Solution clicked @ 1447364589937
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.io.*;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 15 (1 moves): short secondInput;
Moved from problem to solution at line 5
Line 22 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 6
LINE 23 (1 moves): secondInput == Short.parseShort( stdin.readLine() );
Moved from problem to solution at line 6
Line 6 (1 moves): public static void main( String args[] ) throws IOException
Attempted to move from solution to problem at line 6
Line 7 (1 moves): {
Attempted to move from solution to problem at line 7
Line 8 (3 moves): InputStreamReader iStream = new InputStreamReader(System.in);
Attempted to move from solution to problem at line 8
Attempted to move from solution to problem at line 7
Attempted to reorder line 8
Line 33 (1 moves): } // End of else-clause
Moved from problem to solution at line 13
Line 19 (3 moves): firstInput = Short.parseShort( stdin.readLine() );
Moved from problem to trash at line 1
Moved from trash to problem at line 16
Moved from problem to solution at line 15
Line 9 (0 moves): BufferedReader stdin = new BufferedReader(iStream);
Line 11 (0 moves): // Declare firstInput
Line 14 (1 moves): // Declare secondInput
Attempted to reorder line 14
Line 17 (0 moves): // Read firstInput
Line 21 (1 moves): // Read secondInput
Attempted to move from solution to problem at line 13
Line 25 (4 moves): // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Attempted to reorder line 25
Attempted to move from solution to trash at line 1
Attempted to move from solution to trash at line 1
Attempted to move from solution to problem at line 14
Line 34 (0 moves): }  // End of method main
Line 36 (1 moves): } // End of class Problem
Attempted to move from solution to trash at line 1
Line 18 (6 moves): System.out.print( "Enter the first value");
Moved from problem to trash at line 0
Moved from trash to problem at line 16
Moved from problem to solution at line 20
Moved from solution to trash at line 0
Moved from trash to problem at line 11
Moved from problem to trash at line 0
LINE 18 (3 moves): System.out.print( "Enter the first value")
Moved from problem to solution at line 15
Moved from solution to problem at line 13
Moved from problem to trash at line 1
Line 32 (3 moves): System.out.print( secondInput);
Moved from problem to solution at line 14
Moved from solution to problem at line 11
Moved from problem to trash at line 2
Line 26 (3 moves): if( firstInput  <  secondInput )
Moved from problem to solution at line 10
Moved from solution to problem at line 8
Moved from problem to trash at line 3
Line 28 (4 moves): System.out.print( firstInput);
Moved from problem to solution at line 8
Moved from solution to trash at line 1
Moved from trash to problem at line 12
Moved from problem to trash at line 2
Line 12 (3 moves): short firstInput;
Moved from problem to trash at line 2
Moved from trash to problem at line 16
Moved from problem to trash at line 2
Line 23 (3 moves): secondInput = Short.parseShort( stdin.readLine() );
Moved from problem to solution at line 7
Moved from solution to problem at line 5
Moved from problem to trash at line 4
Line 30 (3 moves): else
Moved from problem to trash at line 3
Moved from trash to problem at line 16
Moved from problem to trash at line 2
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 35 steps before bailing out of a Parsons puzzle containing 16 lines of code.
The correct answer is as follows:
// The Java program
import java.io.*;
public class Problem
{
public static void main( String args[] ) throws IOException
{
InputStreamReader iStream = new InputStreamReader(System.in);
BufferedReader stdin = new BufferedReader(iStream);
// Declare firstInput
short firstInput;
// Declare secondInput
short secondInput;
// Read firstInput
System.out.print( "Enter the first value");
firstInput = Short.parseShort( stdin.readLine() );
// Read secondInput
System.out.print( "Enter the second value");
secondInput = Short.parseShort( stdin.readLine() );
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
if( firstInput  <  secondInput )
{
System.out.print( firstInput);
} // End of if-clause
else
{
System.out.print( secondInput);
} // End of else-clause
}  // End of method main
} // End of class Problem
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1447364592428
Time spent on this problem: 111 seconds
<HR>
