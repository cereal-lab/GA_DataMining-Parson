Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
} // End of if-clause
System.out.print( firstNum);
if( firstNum  <  secondInput )
{
} // End of else-clause
secondInput = stdin.nextShort();
stdin.nextShort() = secondInput;
System.out.print( secondInput);
System.out.print( secondInput)
System.out.print( "Enter the second value");
firstNum = stdin.nextShort();
short secondInput;
else
{
System.out.print( "Enter the first value");
short firstNum;
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondInput
// Read firstNum
// Read secondInput
// If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
} // End of if-clause
System.out.print( firstNum);
if( firstNum  <  secondInput )
{
} // End of else-clause
secondInput = stdin.nextShort();
stdin.nextShort() = secondInput;
System.out.print( secondInput);
System.out.print( secondInput)
System.out.print( "Enter the second value");
firstNum = stdin.nextShort();
short secondInput;
else
{
System.out.print( "Enter the first value");
short firstNum;
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondInput
// Read firstNum
// Read secondInput
// If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: short firstNum;
Moved from problem to solution at line 10: short secondInput;
Reordered from line 10 to 12: short secondInput;
Reordered from line 12 to 11: short secondInput;
Moved from problem to solution at line 13: System.out.print( "Enter the first value");
Moved from problem to solution at line 14: firstNum = stdin.nextShort();
Moved from problem to solution at line 16: System.out.print( "Enter the second value");
Moved from problem to solution at line 18: if( firstNum  <  secondInput )
Moved from problem to solution at line 19: {
Moved from problem to solution at line 20: System.out.print( firstNum);
Moved from problem to solution at line 21: } // End of if-clause
Moved from problem to solution at line 22: else
Moved from problem to solution at line 23: {
Moved from problem to solution at line 24: System.out.print( secondInput)
Moved from problem to solution at line 25: } // End of else-clause
Moved from problem to solution at line 17: stdin.nextShort() = secondInput;
Reordered from line 21 to 25: System.out.print( firstNum);
Moved from solution to problem at line 14: System.out.print( secondInput)
Moved from problem to solution at line 21: System.out.print( secondInput);
Reordered from line 25 to 21: System.out.print( firstNum);
Reordered from line 22 to 26: System.out.print( secondInput);
Reordered from line 26 to 25: System.out.print( secondInput);
Moved from solution to problem at line 12: stdin.nextShort() = secondInput;
Moved from problem to solution at line 17: secondInput = stdin.nextShort();
Reordered from line 25 to 21: System.out.print( secondInput);
Reordered from line 22 to 26: System.out.print( firstNum);
Reordered from line 26 to 25: System.out.print( firstNum);
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Moved from problem to trash at line 0: System.out.print( secondInput)
Moved from problem to trash at line 1: stdin.nextShort() = secondInput;
Submit Parsons Solution clicked @ 1448336254718
This line is not in its correct location: System.out.print( secondInput);
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 22 to 21: } // End of if-clause
Moved from trash to solution at line 20: stdin.nextShort() = secondInput;
Moved from solution to trash at line 1: stdin.nextShort() = secondInput;
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Reordered from line 22 to 21: System.out.print( secondInput);
Submit Parsons Solution clicked @ 1448336307997
This line is not in its correct location: System.out.print( secondInput);
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: System.out.print( secondInput);
Moved from trash to solution at line 21: stdin.nextShort() = secondInput;
Submit Parsons Solution clicked @ 1448336319888
Variable to which assignment is made (secondInput) must appear on the left hand side of the assignment operator =
Delete this line: stdin.nextShort() = secondInput;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: stdin.nextShort() = secondInput;
Moved from trash to solution at line 21: System.out.print( secondInput)
Submit Parsons Solution clicked @ 1448336331127
Every statement must end with a semi-colon ;
Delete this line: System.out.print( secondInput)
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: System.out.print( secondInput)
Submit Parsons Solution clicked @ 1448336335971
This line is not in its correct location: } // End of if-clause
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 3: } // End of if-clause
Submit Parsons Solution clicked @ 1448336341468
This line is not in its correct location: else
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 3: else
Submit Parsons Solution clicked @ 1448336345870
This line is not in its correct location: {
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 4: {
Submit Parsons Solution clicked @ 1448336352669
This line is not in its correct location: } // End of else-clause
Insert this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: } // End of else-clause
Submit Parsons Solution clicked @ 1448336358203
Other lines should appear before this line: }  // End of method main
Insert this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 21: System.out.print( secondInput);
Moved from trash to solution at line 22: } // End of if-clause
Moved from trash to solution at line 23: else
Moved from trash to solution at line 24: {
Submit Parsons Solution clicked @ 1448336443195
This line is not in its correct location: System.out.print( secondInput);
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Outdented line 21: System.out.print( secondInput);
Moved from solution to problem at line 15: System.out.print( secondInput);
Moved from trash to solution at line 25: } // End of else-clause
Moved from trash to solution at line 21: stdin.nextShort() = secondInput;
Moved from problem to trash at line 1: System.out.print( secondInput);
Submit Parsons Solution clicked @ 1448336494595
Variable to which assignment is made (secondInput) must appear on the left hand side of the assignment operator =
Delete this line: stdin.nextShort() = secondInput;
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: stdin.nextShort() = secondInput;
Moved from trash to solution at line 21: System.out.print( secondInput);
Submit Parsons Solution clicked @ 1448336515684
This line is not in its correct location: System.out.print( secondInput);
Move this line in its place: System.out.print( firstNum);
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: System.out.print( secondInput);
Moved from trash to solution at line 21: System.out.print( secondInput)
Submit Parsons Solution clicked @ 1448336524499
Every statement must end with a semi-colon ;
Delete this line: System.out.print( secondInput)
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: System.out.print( secondInput)
Reordered from line 24 to 21: System.out.print( firstNum);
Moved from trash to solution at line 25: System.out.print( secondInput);
Submit Parsons Solution clicked @ 1448336540856
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstNum
Line 11 (1 moves): short firstNum;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondInput
Line 14 (3 moves): short secondInput;
Moved from problem to solution at line 10
Reordered from line 10 to 12
Reordered from line 12 to 11
Line 16 (0 moves): // Read firstNum
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 13
Line 18 (1 moves): firstNum = stdin.nextShort();
Moved from problem to solution at line 14
Line 20 (0 moves): // Read secondInput
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 16
Line 22 (1 moves): secondInput = stdin.nextShort();
Moved from problem to solution at line 17
Line 24 (0 moves): // If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
Line 25 (1 moves): if( firstNum  <  secondInput )
Moved from problem to solution at line 18
Line 26 (1 moves): {
Moved from problem to solution at line 19
Line 27 (6 moves): System.out.print( firstNum);
Moved from problem to solution at line 20
Reordered from line 21 to 25
Reordered from line 25 to 21
Reordered from line 22 to 26
Reordered from line 26 to 25
Reordered from line 24 to 21
Line 28 (4 moves): } // End of if-clause
Moved from problem to solution at line 21
Reordered from line 22 to 21
Moved from solution to trash at line 3
Moved from trash to solution at line 22
Line 29 (3 moves): else
Moved from problem to solution at line 22
Moved from solution to trash at line 3
Moved from trash to solution at line 23
Line 30 (3 moves): {
Moved from problem to solution at line 23
Moved from solution to trash at line 4
Moved from trash to solution at line 24
Line 31 (13 moves): System.out.print( secondInput);
Moved from problem to solution at line 21
Reordered from line 22 to 26
Reordered from line 26 to 25
Reordered from line 25 to 21
Reordered from line 22 to 21
Moved from solution to trash at line 2
Moved from trash to solution at line 21
Outdented line 21
Moved from solution to problem at line 15
Moved from problem to trash at line 1
Moved from trash to solution at line 21
Moved from solution to trash at line 2
Moved from trash to solution at line 25
Line 32 (3 moves): } // End of else-clause
Moved from problem to solution at line 25
Moved from solution to trash at line 2
Moved from trash to solution at line 25
Line 33 (0 moves): }  // End of method main
Line 35 (1 moves): } // End of class Problem
Attempted to reorder line 35
LINE 22 (9 moves): stdin.nextShort() = secondInput;
Moved from problem to solution at line 17
Moved from solution to problem at line 12
Moved from problem to trash at line 1
Moved from trash to solution at line 20
Moved from solution to trash at line 1
Moved from trash to solution at line 21
Moved from solution to trash at line 2
Moved from trash to solution at line 21
Moved from solution to trash at line 2
LINE 31 (7 moves): System.out.print( secondInput)
Moved from problem to solution at line 24
Moved from solution to problem at line 14
Moved from problem to trash at line 0
Moved from trash to solution at line 21
Moved from solution to trash at line 2
Moved from trash to solution at line 21
Moved from solution to trash at line 2
Your Grade:
You took 57 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1448336554528
Time spent on this problem: 2243 seconds
<HR>
