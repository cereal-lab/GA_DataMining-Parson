Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
cin >> secondValue;
Cin >> secondValue;
cin >> firstInput;
cout << secondValue;
{
else
} // End of if-clause
{
if( firstInput  <  secondValue )
cout << firstInput
cout << firstInput;
} // End of else-clause
cout << "Enter the first value";
unsigned short firstInput;
unsigned short secondValue;
cout << "Enter the second value";
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The C++ program
#include <iostream>
using namespace std;
int main()
{
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of function main
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
cin >> secondValue;
Cin >> secondValue;
cin >> firstInput;
cout << secondValue;
{
else
} // End of if-clause
{
if( firstInput  <  secondValue )
cout << firstInput
cout << firstInput;
} // End of else-clause
cout << "Enter the first value";
unsigned short firstInput;
unsigned short secondValue;
cout << "Enter the second value";
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The C++ program
#include <iostream>
using namespace std;
int main()
{
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of function main
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to trash at line 0: Cin >> secondValue;
Moved from problem to solution at line 7: unsigned short firstInput;
Moved from problem to solution at line 9: unsigned short secondValue;
Moved from problem to solution at line 11: cout << "Enter the first value";
Moved from problem to solution at line 12: cin >> firstInput;
Moved from problem to solution at line 14: cin >> secondValue;
Moved from problem to solution at line 14: cout << "Enter the second value";
Moved from problem to solution at line 16: if( firstInput  <  secondValue )
Reordered from line 16 to 18: if( firstInput  <  secondValue )
Reordered from line 18 to 17: if( firstInput  <  secondValue )
Moved from problem to solution at line 17: cout << firstInput;
Moved from problem to trash at line 1: cout << firstInput
Moved from problem to solution at line 18: else
Moved from problem to solution at line 18: cout << secondValue;
Moved from problem to solution at line 17: {
Reordered from line 21 to 17: if( firstInput  <  secondValue )
Moved from problem to solution at line 22: {
Moved from problem to solution at line 20: } // End of if-clause
Moved from problem to solution at line 24: } // End of else-clause
Reordered from line 21 to 24: cout << secondValue;
Reordered from line 24 to 23: cout << secondValue;
Submit Parsons Solution clicked @ 1446848024450
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The C++ program
Line 2 (0 moves): #include <iostream>
Line 3 (0 moves): using namespace std;
Line 5 (0 moves): int main()
Line 6 (0 moves): {
Line 8 (0 moves): // Declare firstInput
Line 9 (1 moves): unsigned short firstInput;
Moved from problem to solution at line 7
Line 11 (0 moves): // Declare secondValue
Line 12 (1 moves): unsigned short secondValue;
Moved from problem to solution at line 9
Line 14 (0 moves): // Read firstInput
Line 15 (1 moves): cout << "Enter the first value";
Moved from problem to solution at line 11
Line 16 (1 moves): cin >> firstInput;
Moved from problem to solution at line 12
Line 18 (0 moves): // Read secondValue
Line 19 (1 moves): cout << "Enter the second value";
Moved from problem to solution at line 14
Line 20 (1 moves): cin >> secondValue;
Moved from problem to solution at line 14
Line 22 (0 moves): // If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
Line 23 (4 moves): if( firstInput  <  secondValue )
Moved from problem to solution at line 16
Reordered from line 16 to 18
Reordered from line 18 to 17
Reordered from line 21 to 17
Line 24 (1 moves): {
Moved from problem to solution at line 17
Line 25 (1 moves): cout << firstInput;
Moved from problem to solution at line 17
Line 26 (1 moves): } // End of if-clause
Moved from problem to solution at line 20
Line 27 (1 moves): else
Moved from problem to solution at line 18
Line 28 (1 moves): {
Moved from problem to solution at line 22
Line 29 (3 moves): cout << secondValue;
Moved from problem to solution at line 18
Reordered from line 21 to 24
Reordered from line 24 to 23
Line 30 (1 moves): } // End of else-clause
Moved from problem to solution at line 24
Line 31 (0 moves): }  // End of function main
LINE 20 (1 moves): Cin >> secondValue;
Moved from problem to trash at line 0
LINE 25 (1 moves): cout << firstInput
Moved from problem to trash at line 1
Your Grade:
You took 21 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1446848029029
Time spent on this problem: 163 seconds
<HR>
