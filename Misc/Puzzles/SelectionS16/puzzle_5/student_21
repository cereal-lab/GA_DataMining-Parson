Problem No. 5
Using Template # 2100
Stage: Practice / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Nested.Cascading.Simple
The Problem:
short monthNum;
{
{
stdin.nextShort() = monthNum;
monthNum = stdin.nextShort();
} // End of if-clause
else
{
if( monthNum  <=  6 )
{
{
System.out.print( "Season is spring (April-June)");
System.out.print( "Enter the number of the month (1-12)");
if( monthNum  <=  9 )
{
System.out.print( "Season is winter (January-March)");
else
else;
else
} // End of else-clause
System.out.print( "Season is summer (July-September)");
System.out.print( "Season is fall (October-December)");
} // End of if-clause
if( monthNum  <=  3 )
} // End of if-clause
} // End of else-clause
} // End of else-clause
Using Template # 2100
Stage: Practice / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Nested.Cascading.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare monthNum
// Read monthNum
// Compute and print the season based on monthNum
}  // End of method main
} // End of class Problem
Using Template # 2100
Stage: Practice / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Nested.Cascading.Simple
The Problem:
Moved from problem to solution at line 9: {
Moved from solution to problem at line 9: {
Moved from problem to solution at line 9: short monthNum;
Moved from problem to solution at line 11: System.out.print( "Enter the number of the month (1-12)");
Moved from problem to solution at line 12: monthNum = stdin.nextShort();
Moved from problem to trash at line 0: stdin.nextShort() = monthNum;
Moved from problem to solution at line 13: if( monthNum  <=  9 )
Moved from problem to solution at line 14: System.out.print( "Season is summer (July-September)");
Reordered from line 13 to 16: if( monthNum  <=  9 )
Reordered from line 13 to 17: System.out.print( "Season is summer (July-September)");
Moved from problem to solution at line 16: {
Reordered from line 18 to 17: System.out.print( "Season is summer (July-September)");
Moved from problem to solution at line 18: } // End of if-clause
Moved from problem to solution at line 18: if( monthNum  <=  6 )
Reordered from line 19 to 18: } // End of if-clause
Moved from problem to solution at line 20: System.out.print( "Season is spring (April-June)");
Moved from problem to solution at line 20: {
Moved from problem to solution at line 22: } // End of else-clause
Moved from problem to solution at line 19: else
Moved from problem to solution at line 24: if( monthNum  <=  3 )
Moved from problem to solution at line 25: {
Moved from problem to solution at line 26: System.out.print( "Season is winter (January-March)");
Moved from problem to trash at line 1: else;
Moved from problem to solution at line 24: else
Moved from problem to solution at line 28: else
Moved from problem to solution at line 29: System.out.print( "Season is fall (October-December)");
Moved from problem to solution at line 29: {
Moved from problem to solution at line 31: } // End of else-clause
Moved from problem to trash at line 2: {
Moved from problem to solution at line 28: } // End of else-clause
Moved from problem to trash at line 3: } // End of if-clause
Moved from problem to trash at line 3: } // End of if-clause
Moved from problem to trash at line 4: {
Submit Parsons Solution clicked @ 1455337713546
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to problem at line 28: } // End of else-clause
Reordered from line 18 to 28: } // End of if-clause
Reordered from line 27 to 29: else
Reordered from line 29 to 28: else
Moved from problem to trash at line 4: } // End of else-clause
Submit Parsons Solution clicked @ 1455337779814
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 4: else
Submit Parsons Solution clicked @ 1455337796957
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455337875608
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to problem at line 24: else
Moved from problem to trash at line 4: else
Submit Parsons Solution clicked @ 1455337894524
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: } // End of else-clause
Moved from trash to solution at line 23: } // End of if-clause
Reordered from line 25 to 23: System.out.print( "Season is winter (January-March)");
Moved from solution to trash at line 2: } // End of if-clause
Moved from trash to solution at line 22: else
Reordered from line 25 to 22: } // End of if-clause
Moved from solution to trash at line 4: {
Reordered from line 26 to 25: {
Moved from trash to solution at line 27: else
Moved from trash to solution at line 27: } // End of if-clause
Submit Parsons Solution clicked @ 1455338125911
Other lines should appear before this line: }  // End of method main
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Attempted to move from solution to problem at line 25: }  // End of method main
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 17: }  // End of method main
Do not remove the lines already provided to you - they are all needed.
Attempted to move from solution to problem at line 10: }  // End of method main
Do not remove the lines already provided to you - they are all needed.
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 15 to 14: if( monthNum  <=  9 )
Reordered from line 16 to 15: {
Reordered from line 17 to 16: System.out.print( "Season is summer (July-September)");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Reordered from line 18 to 17: else
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 19 to 18: if( monthNum  <=  6 )
Reordered from line 21 to 19: System.out.print( "Season is spring (April-June)");
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 21 to 19: {
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 22 to 21: } // End of if-clause
Reordered from line 23 to 22: else
Reordered from line 25 to 23: {
Reordered from line 25 to 24: if( monthNum  <=  3 )
Reordered from line 26 to 25: System.out.print( "Season is winter (January-March)");
Reordered from line 27 to 26: } // End of if-clause
Reordered from line 29 to 27: System.out.print( "Season is fall (October-December)");
Reordered from line 29 to 28: else
Reordered from line 30 to 29: } // End of else-clause
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Submit Parsons Solution clicked @ 1455338315169
This line is not in its correct location: if( monthNum  <=  9 )
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 6: } // End of if-clause
Submit Parsons Solution clicked @ 1455338406936
This line is not in its correct location: if( monthNum  <=  9 )
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455338444454
This line is not in its correct location: if( monthNum  <=  9 )
Move this line in its place: if( monthNum  <=  3 )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 23 to 14: if( monthNum  <=  3 )
Reordered from line 24 to 17: System.out.print( "Season is winter (January-March)");
Reordered from line 16 to 15: {
Reordered from line 17 to 16: System.out.print( "Season is winter (January-March)");
Reordered from line 20 to 17: if( monthNum  <=  6 )
Reordered from line 21 to 18: {
Reordered from line 22 to 19: System.out.print( "Season is spring (April-June)");
Reordered from line 22 to 17: else
Reordered from line 27 to 21: else
Reordered from line 27 to 26: System.out.print( "Season is fall (October-December)");
Reordered from line 27 to 23: } // End of if-clause
Submit Parsons Solution clicked @ 1455338546041
This line is not in its correct location: else
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 23 to 17: } // End of if-clause
Submit Parsons Solution clicked @ 1455338564548
This line is not in its correct location: else
Insert this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 22: } // End of if-clause
Moved from solution to trash at line 7: else
Submit Parsons Solution clicked @ 1455338581732
This line is not in its correct location: if( monthNum  <=  9 )
Move this line in its place: else
This code must appear after } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 26 to 24: {
Moved from trash to solution at line 26: } // End of else-clause
Submit Parsons Solution clicked @ 1455338617147
This line is not in its correct location: if( monthNum  <=  9 )
Move this line in its place: else
This code must appear after } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 22: else
Reordered from line 22 to 24: else
Reordered from line 25 to 23: {
Reordered from line 23 to 26: {
Reordered from line 24 to 23: else
Reordered from line 26 to 25: {
Submit Parsons Solution clicked @ 1455338661235
This line is not in its correct location: } // End of else-clause
Insert this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 27: } // End of if-clause
Moved from solution to trash at line 6: } // End of else-clause
Submit Parsons Solution clicked @ 1455338679870
This line is not in its correct location: } // End of else-clause
Either delete it or move it past this line: }  // End of method main
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to problem at line 30: } // End of else-clause
Moved from problem to trash at line 6: } // End of else-clause
Submit Parsons Solution clicked @ 1455338695088
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare monthNum
Line 11 (1 moves): short monthNum;
Moved from problem to solution at line 9
Line 13 (0 moves): // Read monthNum
Line 14 (1 moves): System.out.print( "Enter the number of the month (1-12)");
Moved from problem to solution at line 11
Line 15 (1 moves): monthNum = stdin.nextShort();
Moved from problem to solution at line 12
Line 17 (0 moves): // Compute and print the season based on monthNum
Line 18 (3 moves): if( monthNum  <=  3 )
Moved from problem to solution at line 24
Reordered from line 25 to 24
Reordered from line 23 to 14
Line 19 (3 moves): {
Moved from problem to solution at line 16
Reordered from line 16 to 15
Reordered from line 16 to 15
Line 20 (5 moves): System.out.print( "Season is winter (January-March)");
Moved from problem to solution at line 26
Reordered from line 25 to 23
Reordered from line 26 to 25
Reordered from line 24 to 17
Reordered from line 17 to 16
Line 21 (5 moves): } // End of if-clause
Moved from problem to trash at line 3
Moved from trash to solution at line 27
Reordered from line 27 to 26
Reordered from line 27 to 23
Reordered from line 23 to 17
Line 22 (3 moves): else
Moved from problem to solution at line 19
Reordered from line 18 to 17
Reordered from line 22 to 17
Line 24 (3 moves): if( monthNum  <=  6 )
Moved from problem to solution at line 18
Reordered from line 19 to 18
Reordered from line 20 to 17
Line 25 (3 moves): {
Moved from problem to solution at line 20
Reordered from line 21 to 19
Reordered from line 21 to 18
Line 26 (3 moves): System.out.print( "Season is spring (April-June)");
Moved from problem to solution at line 20
Reordered from line 21 to 19
Reordered from line 22 to 19
Line 27 (5 moves): } // End of if-clause
Moved from problem to solution at line 18
Reordered from line 19 to 18
Reordered from line 18 to 28
Moved from solution to trash at line 2
Moved from trash to solution at line 22
Line 28 (10 moves): else
Moved from problem to solution at line 24
Moved from solution to problem at line 24
Moved from problem to trash at line 4
Moved from trash to solution at line 27
Reordered from line 29 to 28
Reordered from line 27 to 21
Moved from solution to trash at line 7
Moved from trash to solution at line 22
Reordered from line 22 to 24
Reordered from line 24 to 23
Line 30 (3 moves): if( monthNum  <=  9 )
Moved from problem to solution at line 13
Reordered from line 13 to 16
Reordered from line 15 to 14
Line 31 (7 moves): {
Moved from problem to solution at line 29
Reordered from line 26 to 25
Reordered from line 25 to 23
Reordered from line 26 to 24
Reordered from line 25 to 23
Reordered from line 23 to 26
Reordered from line 26 to 25
Line 32 (4 moves): System.out.print( "Season is summer (July-September)");
Moved from problem to solution at line 14
Reordered from line 13 to 17
Reordered from line 18 to 17
Reordered from line 17 to 16
Line 33 (6 moves): } // End of if-clause
Moved from problem to trash at line 3
Moved from trash to solution at line 23
Reordered from line 25 to 22
Reordered from line 22 to 21
Moved from solution to trash at line 6
Moved from trash to solution at line 27
Line 28 (6 moves): else
Moved from problem to solution at line 28
Reordered from line 27 to 29
Reordered from line 29 to 28
Moved from solution to trash at line 4
Moved from trash to solution at line 22
Reordered from line 23 to 22
Line 36 (3 moves): System.out.print( "Season is fall (October-December)");
Moved from problem to solution at line 29
Reordered from line 29 to 27
Reordered from line 27 to 26
Line 40 (9 moves): }  // End of method main
Attempted to reorder line 40
Attempted to move from solution to problem at line 25
Attempted to move from solution to problem at line 17
Attempted to move from solution to problem at line 10
Attempted to reorder line 40
Attempted to reorder line 40
Attempted to reorder line 40
Attempted to reorder line 40
Attempted to reorder line 40
Line 42 (2 moves): } // End of class Problem
Attempted to reorder line 42
Attempted to reorder line 42
LINE 15 (1 moves): stdin.nextShort() = monthNum;
Moved from problem to trash at line 0
LINE 22 (1 moves): else;
Moved from problem to trash at line 1
Line 19 (1 moves): {
Moved from problem to trash at line 2
Line 23 (3 moves): {
Moved from problem to solution at line 9
Moved from solution to problem at line 9
Moved from problem to trash at line 4
Line 38 (2 moves): } // End of else-clause
Moved from problem to solution at line 22
Moved from solution to trash at line 2
Line 19 (2 moves): {
Moved from problem to solution at line 25
Moved from solution to trash at line 4
Line 39 (5 moves): } // End of else-clause
Moved from problem to solution at line 28
Moved from solution to problem at line 28
Moved from problem to trash at line 4
Moved from trash to solution at line 26
Moved from solution to trash at line 6
Line 37 (4 moves): } // End of else-clause
Moved from problem to solution at line 31
Reordered from line 30 to 29
Moved from solution to problem at line 30
Moved from problem to trash at line 6
Your Grade:
You took 94 steps to solve a Parsons puzzle containing 27 lines of code.
Next Problem clicked @ 1455338703790
Time spent on this problem: 1437 seconds
<HR>
