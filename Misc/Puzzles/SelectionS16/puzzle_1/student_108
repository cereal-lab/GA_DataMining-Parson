Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the first value");
short firstInput
short firstInput;
System.out.print( "Enter the second value");
else
{
short secondInput;
} // End of else-clause
if( firstInput  <  secondInput )
} // End of if-clause
System.out.print( secondInput);
{
stdin.nextShort() = firstInput;
firstInput = stdin.nextShort();
secondInput = stdin.nextShort();
System.out.print( firstInput);
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( "Enter the first value");
short firstInput
short firstInput;
System.out.print( "Enter the second value");
else
{
short secondInput;
} // End of else-clause
if( firstInput  <  secondInput )
} // End of if-clause
System.out.print( secondInput);
{
stdin.nextShort() = firstInput;
firstInput = stdin.nextShort();
secondInput = stdin.nextShort();
System.out.print( firstInput);
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: short firstInput;
Moved from problem to solution at line 10: short secondInput;
Reordered from line 10 to 11: short secondInput;
Moved from problem to solution at line 12: System.out.print( "Enter the first value");
Reordered from line 12 to 13: System.out.print( "Enter the first value");
Moved from problem to solution at line 14: firstInput = stdin.nextShort();
Moved from problem to trash at line 0: short firstInput
Moved from problem to solution at line 16: System.out.print( "Enter the second value");
Moved from problem to solution at line 17: secondInput = stdin.nextShort();
Moved from problem to solution at line 19: if( firstInput  <  secondInput )
Moved from problem to solution at line 20: System.out.print( firstInput);
Moved from problem to solution at line 21: else
Moved from problem to solution at line 20: {
Moved from problem to solution at line 22: } // End of if-clause
Moved from problem to solution at line 24: {
Moved from problem to solution at line 25: System.out.print( secondInput);
Moved from problem to solution at line 26: } // End of else-clause
Moved from problem to trash at line 1: stdin.nextShort() = firstInput;
Submit Parsons Solution clicked @ 1455296351307
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (1 moves): short firstInput;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondInput
Line 14 (2 moves): short secondInput;
Moved from problem to solution at line 10
Reordered from line 10 to 11
Line 16 (0 moves): // Read firstInput
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 12
Reordered from line 12 to 13
Line 18 (1 moves): firstInput = stdin.nextShort();
Moved from problem to solution at line 14
Line 20 (0 moves): // Read secondInput
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 16
Line 22 (1 moves): secondInput = stdin.nextShort();
Moved from problem to solution at line 17
Line 24 (0 moves): // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Line 25 (1 moves): if( firstInput  <  secondInput )
Moved from problem to solution at line 19
Line 26 (1 moves): {
Moved from problem to solution at line 20
Line 27 (1 moves): System.out.print( firstInput);
Moved from problem to solution at line 20
Line 28 (1 moves): } // End of if-clause
Moved from problem to solution at line 22
Line 29 (1 moves): else
Moved from problem to solution at line 21
Line 30 (1 moves): {
Moved from problem to solution at line 24
Line 31 (1 moves): System.out.print( secondInput);
Moved from problem to solution at line 25
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 26
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 11 (1 moves): short firstInput
Moved from problem to trash at line 0
LINE 18 (1 moves): stdin.nextShort() = firstInput;
Moved from problem to trash at line 1
Your Grade:
You took 18 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1455296361955
Time spent on this problem: 383 seconds
<HR>
