Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
} // End of else-clause
{
else
firstInput = stdin.nextShort();
if( firstInput  <  secondValue )
secondValue == stdin.nextShort();
secondValue = stdin.nextShort();
short firstInput;
} // End of if-clause
System.out.print( secondValue);
short secondValue;
System.out.print( firstInput);
System.out.print( "Enter the first value");
System.out.print( "Enter the second value");
System.out.print( "Enter the second value")
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
} // End of else-clause
{
else
firstInput = stdin.nextShort();
if( firstInput  <  secondValue )
secondValue == stdin.nextShort();
secondValue = stdin.nextShort();
short firstInput;
} // End of if-clause
System.out.print( secondValue);
short secondValue;
System.out.print( firstInput);
System.out.print( "Enter the first value");
System.out.print( "Enter the second value");
System.out.print( "Enter the second value")
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Indented line 14: } // End of class Problem
Moved from problem to solution at line 8: short firstInput;
Reordered from line 8 to 9: short firstInput;
Moved from problem to solution at line 11: short secondValue;
Moved from problem to solution at line 13: System.out.print( firstInput);
Moved from solution to problem at line 8: System.out.print( firstInput);
Moved from problem to solution at line 13: firstInput = stdin.nextShort();
Moved from problem to solution at line 15: secondValue = stdin.nextShort();
Moved from problem to solution at line 17: if( firstInput  <  secondValue )
Moved from problem to solution at line 13: System.out.print( "Enter the first value");
Moved from problem to solution at line 16: System.out.print( "Enter the second value");
Moved from problem to solution at line 20: else
Moved from problem to solution at line 21: } // End of else-clause
Reordered from line 21 to 20: } // End of else-clause
Moved from problem to solution at line 20: } // End of if-clause
Reordered from line 20 to 19: } // End of if-clause
Moved from problem to solution at line 17: System.out.print( "Enter the second value")
Moved from problem to solution at line 25: System.out.print( secondValue);
Moved from problem to solution at line 26: System.out.print( firstInput);
Moved from problem to trash at line 0: secondValue == stdin.nextShort();
Moved from problem to solution at line 22: {
Reordered from line 27 to 23: System.out.print( firstInput);
Reordered from line 27 to 26: System.out.print( secondValue);
Reordered from line 24 to 27: } // End of else-clause
Moved from problem to solution at line 25: {
Submit Parsons Solution clicked @ 1455334227734
Every statement must end with a semi-colon ;
Delete this line: System.out.print( "Enter the second value")
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 1: System.out.print( "Enter the second value")
Submit Parsons Solution clicked @ 1455334233822
This line is not in its correct location: } // End of if-clause
Move this line in its place: if( firstInput  <  secondValue )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 19 to 23: } // End of if-clause
Submit Parsons Solution clicked @ 1455334240768
This line is not in its correct location: else
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 25 to 24: System.out.print( secondValue);
Submit Parsons Solution clicked @ 1455334246582
This line is not in its correct location: else
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 23 to 22: } // End of if-clause
Reordered from line 25 to 24: {
Submit Parsons Solution clicked @ 1455334257834
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334275512
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334275704
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334275885
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276060
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276224
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276377
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276538
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276709
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334276867
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334277037
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334277217
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1455334277398
Other lines should appear before this line: }  // End of method main
Move this line in its place: } // End of else-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 27 to 26: } // End of else-clause
Submit Parsons Solution clicked @ 1455334288573
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (2 moves): short firstInput;
Moved from problem to solution at line 8
Reordered from line 8 to 9
Line 13 (0 moves): // Declare secondValue
Line 14 (1 moves): short secondValue;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstInput
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 13
Line 18 (1 moves): firstInput = stdin.nextShort();
Moved from problem to solution at line 13
Line 20 (0 moves): // Read secondValue
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 16
Line 22 (1 moves): secondValue = stdin.nextShort();
Moved from problem to solution at line 15
Line 24 (0 moves): // If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
Line 25 (1 moves): if( firstInput  <  secondValue )
Moved from problem to solution at line 17
Line 26 (1 moves): {
Moved from problem to solution at line 22
Line 27 (4 moves): System.out.print( firstInput);
Moved from problem to solution at line 13
Moved from solution to problem at line 8
Moved from problem to solution at line 26
Reordered from line 27 to 23
Line 28 (4 moves): } // End of if-clause
Moved from problem to solution at line 20
Reordered from line 20 to 19
Reordered from line 19 to 23
Reordered from line 23 to 22
Line 29 (1 moves): else
Moved from problem to solution at line 20
Line 30 (2 moves): {
Moved from problem to solution at line 25
Reordered from line 25 to 24
Line 31 (3 moves): System.out.print( secondValue);
Moved from problem to solution at line 25
Reordered from line 27 to 26
Reordered from line 25 to 24
Line 32 (4 moves): } // End of else-clause
Moved from problem to solution at line 21
Reordered from line 21 to 20
Reordered from line 24 to 27
Reordered from line 27 to 26
Line 33 (0 moves): }  // End of method main
Line 35 (1 moves): } // End of class Problem
Indented line 14
LINE 22 (1 moves): secondValue == stdin.nextShort();
Moved from problem to trash at line 0
LINE 21 (2 moves): System.out.print( "Enter the second value")
Moved from problem to solution at line 17
Moved from solution to trash at line 1
Your Grade:
You took 30 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1455334290464
Time spent on this problem: 220 seconds
<HR>
