Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
firstValue = stdin.nextShort();
firstValue == stdin.nextShort();
System.out.print( "Enter the first value");
short secondInput;
System.out.print( firstValue)
System.out.print( firstValue);
if( firstValue  <  secondInput )
else
{
{
System.out.print( "Enter the second value");
System.out.print( secondInput);
} // End of else-clause
secondInput = stdin.nextShort();
short firstValue;
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondInput
// Read firstValue
// Read secondInput
// If firstValue is less than secondInput, print firstValue. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
firstValue = stdin.nextShort();
firstValue == stdin.nextShort();
System.out.print( "Enter the first value");
short secondInput;
System.out.print( firstValue)
System.out.print( firstValue);
if( firstValue  <  secondInput )
else
{
{
System.out.print( "Enter the second value");
System.out.print( secondInput);
} // End of else-clause
secondInput = stdin.nextShort();
short firstValue;
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstValue
// Declare secondInput
// Read firstValue
// Read secondInput
// If firstValue is less than secondInput, print firstValue. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: short firstValue;
Moved from problem to solution at line 11: short secondInput;
Moved from problem to solution at line 13: firstValue = stdin.nextShort();
Moved from problem to solution at line 13: secondInput = stdin.nextShort();
Reordered from line 14 to 15: firstValue = stdin.nextShort();
Moved from problem to solution at line 17: if( firstValue  <  secondInput )
Moved from problem to solution at line 18: System.out.print( firstValue);
Moved from problem to solution at line 18: else
Moved from problem to solution at line 19: } // End of else-clause
Reordered from line 18 to 19: else
Moved from problem to solution at line 20: System.out.print( secondInput);
Reordered from line 21 to 18: System.out.print( firstValue);
Moved from problem to solution at line 15: System.out.print( "Enter the second value");
Moved from problem to solution at line 20: } // End of if-clause
Reordered from line 21 to 24: } // End of else-clause
Reordered from line 24 to 22: } // End of else-clause
Reordered from line 22 to 24: } // End of else-clause
Reordered from line 24 to 23: } // End of else-clause
Moved from problem to trash at line 0: System.out.print( firstValue)
Moved from problem to solution at line 12: System.out.print( "Enter the first value");
Reordered from line 12 to 14: System.out.print( "Enter the first value");
Reordered from line 13 to 17: secondInput = stdin.nextShort();
Reordered from line 16 to 13: firstValue = stdin.nextShort();
Reordered from line 13 to 15: firstValue = stdin.nextShort();
Reordered from line 15 to 13: firstValue = stdin.nextShort();
Reordered from line 13 to 14: firstValue = stdin.nextShort();
Moved from problem to trash at line 1: firstValue == stdin.nextShort();
Moved from problem to solution at line 19: {
Reordered from line 19 to 20: {
Reordered from line 20 to 21: {
Reordered from line 21 to 20: {
Moved from problem to solution at line 23: {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1462040765577
This line is not in its correct location: {
Move this line in its place: else
This code must appear after } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 23 to 25: {
Reordered from line 25 to 24: {
Submit Parsons Solution clicked @ 1462040783748
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstValue
Line 11 (1 moves): short firstValue;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondInput
Line 14 (1 moves): short secondInput;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstValue
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 12
Reordered from line 12 to 14
Line 18 (6 moves): firstValue = stdin.nextShort();
Moved from problem to solution at line 13
Reordered from line 14 to 15
Reordered from line 16 to 13
Reordered from line 13 to 15
Reordered from line 15 to 13
Reordered from line 13 to 14
Line 20 (0 moves): // Read secondInput
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 15
Line 22 (2 moves): secondInput = stdin.nextShort();
Moved from problem to solution at line 13
Reordered from line 13 to 17
Line 24 (0 moves): // If firstValue is less than secondInput, print firstValue. Otherwise, print secondInput
Line 25 (1 moves): if( firstValue  <  secondInput )
Moved from problem to solution at line 17
Line 26 (4 moves): {
Moved from problem to solution at line 19
Reordered from line 19 to 20
Reordered from line 20 to 21
Reordered from line 21 to 20
Line 27 (2 moves): System.out.print( firstValue);
Moved from problem to solution at line 18
Reordered from line 21 to 18
Line 28 (1 moves): } // End of if-clause
Moved from problem to solution at line 20
Line 29 (2 moves): else
Moved from problem to solution at line 18
Reordered from line 18 to 19
Line 30 (3 moves): {
Moved from problem to solution at line 23
Reordered from line 23 to 25
Reordered from line 25 to 24
Line 31 (1 moves): System.out.print( secondInput);
Moved from problem to solution at line 20
Line 32 (5 moves): } // End of else-clause
Moved from problem to solution at line 19
Reordered from line 21 to 24
Reordered from line 24 to 22
Reordered from line 22 to 24
Reordered from line 24 to 23
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 27 (1 moves): System.out.print( firstValue)
Moved from problem to trash at line 0
LINE 18 (1 moves): firstValue == stdin.nextShort();
Moved from problem to trash at line 1
Your Grade:
You took 34 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1462040790039
Time spent on this problem: 636 seconds
<HR>
