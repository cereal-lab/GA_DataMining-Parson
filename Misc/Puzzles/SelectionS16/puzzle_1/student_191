Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
int firstInput;
} // End of else-clause
secondInput = stdin.nextInt();
secondInput == stdin.nextInt();
System.out.print( "Enter the second value");
System.out.print( firstInput);
{
System.out.print( "Enter the first value");
firstInput = stdin.nextInt();
{
if( firstInput  <  secondInput )
else
int secondInput
int secondInput;
System.out.print( secondInput);
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
int firstInput;
} // End of else-clause
secondInput = stdin.nextInt();
secondInput == stdin.nextInt();
System.out.print( "Enter the second value");
System.out.print( firstInput);
{
System.out.print( "Enter the first value");
firstInput = stdin.nextInt();
{
if( firstInput  <  secondInput )
else
int secondInput
int secondInput;
System.out.print( secondInput);
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondInput
// Read firstInput
// Read secondInput
// If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: int firstInput;
Moved from problem to solution at line 11: int secondInput;
Moved from problem to trash at line 0: int secondInput
Moved from problem to solution at line 13: System.out.print( "Enter the first value");
Moved from problem to solution at line 14: firstInput = stdin.nextInt();
Moved from problem to solution at line 16: System.out.print( "Enter the second value");
Moved from problem to solution at line 17: secondInput = stdin.nextInt();
Moved from problem to solution at line 19: if( firstInput  <  secondInput )
Moved from problem to solution at line 19: System.out.print( firstInput);
Reordered from line 20 to 19: if( firstInput  <  secondInput )
Moved from problem to solution at line 21: else
Moved from problem to solution at line 22: System.out.print( secondInput);
Moved from problem to solution at line 21: } // End of if-clause
Moved from problem to solution at line 19: {
Moved from problem to solution at line 23: {
Moved from problem to solution at line 26: } // End of else-clause
Moved from problem to trash at line 1: secondInput == stdin.nextInt();
Submit Parsons Solution clicked @ 1462167042471
This line is not in its correct location: {
Move this line in its place: if( firstInput  <  secondInput )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 19 to 21: {
Submit Parsons Solution clicked @ 1462167056918
This line is not in its correct location: {
Move this line in its place: else
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 22 to 26: } // End of if-clause
Submit Parsons Solution clicked @ 1462167078733
This line is not in its correct location: {
Move this line in its place: else
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 21 to 19: {
Submit Parsons Solution clicked @ 1462167082932
This line is not in its correct location: {
Move this line in its place: if( firstInput  <  secondInput )
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 20 to 19: if( firstInput  <  secondInput )
Submit Parsons Solution clicked @ 1462167093348
This line is not in its correct location: {
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 26 to 25: } // End of if-clause
Submit Parsons Solution clicked @ 1462167113746
This line is not in its correct location: {
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 25 to 22: } // End of if-clause
Submit Parsons Solution clicked @ 1462167127249
This line is not in its correct location: {
Move this line in its place: else
This code must appear after } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 23 to 25: {
Submit Parsons Solution clicked @ 1462167148800
This line is not in its correct location: {
Either delete it or move it past this line: }  // End of method main
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 25 to 24: {
Submit Parsons Solution clicked @ 1462167153976
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (1 moves): int firstInput;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondInput
Line 14 (1 moves): int secondInput;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstInput
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 13
Line 18 (1 moves): firstInput = stdin.nextInt();
Moved from problem to solution at line 14
Line 20 (0 moves): // Read secondInput
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 16
Line 22 (1 moves): secondInput = stdin.nextInt();
Moved from problem to solution at line 17
Line 24 (0 moves): // If firstInput is less than secondInput, print firstInput. Otherwise, print secondInput
Line 25 (3 moves): if( firstInput  <  secondInput )
Moved from problem to solution at line 19
Reordered from line 20 to 19
Reordered from line 20 to 19
Line 26 (3 moves): {
Moved from problem to solution at line 19
Reordered from line 19 to 21
Reordered from line 21 to 19
Line 27 (1 moves): System.out.print( firstInput);
Moved from problem to solution at line 19
Line 28 (4 moves): } // End of if-clause
Moved from problem to solution at line 21
Reordered from line 22 to 26
Reordered from line 26 to 25
Reordered from line 25 to 22
Line 29 (1 moves): else
Moved from problem to solution at line 21
Line 30 (3 moves): {
Moved from problem to solution at line 23
Reordered from line 23 to 25
Reordered from line 25 to 24
Line 31 (1 moves): System.out.print( secondInput);
Moved from problem to solution at line 22
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 26
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 14 (1 moves): int secondInput
Moved from problem to trash at line 0
LINE 22 (1 moves): secondInput == stdin.nextInt();
Moved from problem to trash at line 1
Your Grade:
You took 25 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1462167161295
Time spent on this problem: 666 seconds
<HR>
