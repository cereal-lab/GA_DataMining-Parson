Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( firstNum);
int secondNum;
{
else
if( firstNum  <  secondNum )
System.out.print( "Enter the first value");
secondNum = stdin.nextInt();
System.out.print( "Enter the second value");
System.out.print( secondNum);
firstNum == stdin.nextInt();
firstNum = stdin.nextInt();
} // End of if-clause
} // End of else-clause
int firstNum
int firstNum;
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondNum
// Read firstNum
// Read secondNum
// If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( firstNum);
int secondNum;
{
else
if( firstNum  <  secondNum )
System.out.print( "Enter the first value");
secondNum = stdin.nextInt();
System.out.print( "Enter the second value");
System.out.print( secondNum);
firstNum == stdin.nextInt();
firstNum = stdin.nextInt();
} // End of if-clause
} // End of else-clause
int firstNum
int firstNum;
{
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondNum
// Read firstNum
// Read secondNum
// If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: firstNum == stdin.nextInt();
Moved from problem to solution at line 9: firstNum = stdin.nextInt();
Moved from solution to trash at line 0: firstNum == stdin.nextInt();
Moved from problem to solution at line 9: int secondNum;
Reordered from line 10 to 13: firstNum = stdin.nextInt();
Reordered from line 13 to 12: firstNum = stdin.nextInt();
Moved from problem to solution at line 9: int firstNum;
Reordered from line 10 to 11: int secondNum;
Moved from problem to solution at line 15: System.out.print( secondNum);
Moved from problem to solution at line 16: secondNum = stdin.nextInt();
Moved from problem to solution at line 13: System.out.print( firstNum);
Moved from problem to solution at line 19: if( firstNum  <  secondNum )
Moved from problem to solution at line 20: System.out.print( "Enter the first value");
Moved from problem to solution at line 20: } // End of if-clause
Reordered from line 20 to 22: } // End of if-clause
Reordered from line 22 to 21: } // End of if-clause
Moved from problem to solution at line 20: {
Moved from problem to solution at line 23: System.out.print( "Enter the second value");
Moved from problem to solution at line 23: else
Moved from problem to solution at line 25: } // End of else-clause
Moved from problem to trash at line 1: int firstNum
Moved from problem to solution at line 24: {
Submit Parsons Solution clicked @ 1455332697925
This line is not in its correct location: System.out.print( firstNum);
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 13 to 14: System.out.print( firstNum);
Reordered from line 16 to 17: System.out.print( secondNum);
Submit Parsons Solution clicked @ 1455332706571
This line is not in its correct location: firstNum = stdin.nextInt();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 21 to 13: System.out.print( "Enter the first value");
Reordered from line 15 to 22: System.out.print( firstNum);
Reordered from line 22 to 21: System.out.print( firstNum);
Reordered from line 25 to 17: System.out.print( "Enter the second value");
Reordered from line 16 to 18: secondNum = stdin.nextInt();
Reordered from line 17 to 26: System.out.print( secondNum);
Reordered from line 26 to 25: System.out.print( secondNum);
Submit Parsons Solution clicked @ 1455332738164
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstNum
Line 11 (1 moves): int firstNum;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondNum
Line 14 (2 moves): int secondNum;
Moved from problem to solution at line 9
Reordered from line 10 to 11
Line 16 (0 moves): // Read firstNum
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 20
Reordered from line 21 to 13
Line 18 (3 moves): firstNum = stdin.nextInt();
Moved from problem to solution at line 9
Reordered from line 10 to 13
Reordered from line 13 to 12
Line 20 (0 moves): // Read secondNum
Line 21 (2 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 23
Reordered from line 25 to 17
Line 22 (2 moves): secondNum = stdin.nextInt();
Moved from problem to solution at line 16
Reordered from line 16 to 18
Line 24 (0 moves): // If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
Line 25 (1 moves): if( firstNum  <  secondNum )
Moved from problem to solution at line 19
Line 26 (1 moves): {
Moved from problem to solution at line 20
Line 27 (4 moves): System.out.print( firstNum);
Moved from problem to solution at line 13
Reordered from line 13 to 14
Reordered from line 15 to 22
Reordered from line 22 to 21
Line 28 (3 moves): } // End of if-clause
Moved from problem to solution at line 20
Reordered from line 20 to 22
Reordered from line 22 to 21
Line 29 (1 moves): else
Moved from problem to solution at line 23
Line 30 (1 moves): {
Moved from problem to solution at line 24
Line 31 (4 moves): System.out.print( secondNum);
Moved from problem to solution at line 15
Reordered from line 16 to 17
Reordered from line 17 to 26
Reordered from line 26 to 25
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 25
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 18 (2 moves): firstNum == stdin.nextInt();
Moved from problem to solution at line 9
Moved from solution to trash at line 0
LINE 11 (1 moves): int firstNum
Moved from problem to trash at line 1
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1455332739667
Time spent on this problem: 184 seconds
<HR>
