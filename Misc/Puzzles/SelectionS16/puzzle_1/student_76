Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
short firstInput;
if( firstInput  <  secondNum )
} // End of else-clause
System.out.print( secondNum);
System.out.print( "Enter the first value");
secondNum = stdin.nextShort();
{
System.out.print( "Enter the second value");
else
Else
System.out.print( firstInput);
firstInput = stdin.nextShort();
short secondNum;
short secondNum
{
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondNum
// Read firstInput
// Read secondNum
// If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
short firstInput;
if( firstInput  <  secondNum )
} // End of else-clause
System.out.print( secondNum);
System.out.print( "Enter the first value");
secondNum = stdin.nextShort();
{
System.out.print( "Enter the second value");
else
Else
System.out.print( firstInput);
firstInput = stdin.nextShort();
short secondNum;
short secondNum
{
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondNum
// Read firstInput
// Read secondNum
// If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: firstInput = stdin.nextShort();
Moved from problem to solution at line 12: System.out.print( "Enter the first value");
Moved from problem to solution at line 14: secondNum = stdin.nextShort();
Moved from problem to solution at line 16: if( firstInput  <  secondNum )
Moved from problem to solution at line 17: System.out.print( firstInput);
Moved from problem to solution at line 18: else
Moved from problem to solution at line 18: System.out.print( secondNum);
Reordered from line 19 to 18: else
Reordered from line 18 to 17: else
Moved from problem to solution at line 17: } // End of if-clause
Moved from problem to solution at line 17: {
Reordered from line 20 to 18: System.out.print( firstInput);
Moved from problem to solution at line 11: short secondNum;
Moved from problem to solution at line 23: } // End of else-clause
Moved from problem to trash at line 0: Else
Moved from problem to trash at line 1: short secondNum
Moved from problem to solution at line 9: short firstInput;
Reordered from line 10 to 14: firstInput = stdin.nextShort();
Reordered from line 13 to 14: System.out.print( "Enter the first value");
Moved from problem to solution at line 17: System.out.print( "Enter the second value");
Attempted to reorder // The Java program
This line was provided to you in its correct order. Do not reorder it.
Moved from problem to solution at line 24: {
Submit Parsons Solution clicked @ 1455340961764
This line is not in its correct location: firstInput = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 13 to 14: firstInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1455340975271
This line is not in its correct location: secondNum = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the second value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 16 to 17: secondNum = stdin.nextShort();
Submit Parsons Solution clicked @ 1455340979542
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (1 moves): // The Java program
Attempted to reorder line 1
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (1 moves): short firstInput;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondNum
Line 14 (1 moves): short secondNum;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstInput
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 12
Reordered from line 13 to 14
Line 18 (3 moves): firstInput = stdin.nextShort();
Moved from problem to solution at line 9
Reordered from line 10 to 14
Reordered from line 13 to 14
Line 20 (0 moves): // Read secondNum
Line 21 (1 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 17
Line 22 (2 moves): secondNum = stdin.nextShort();
Moved from problem to solution at line 14
Reordered from line 16 to 17
Line 24 (0 moves): // If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
Line 25 (1 moves): if( firstInput  <  secondNum )
Moved from problem to solution at line 16
Line 26 (1 moves): {
Moved from problem to solution at line 17
Line 27 (2 moves): System.out.print( firstInput);
Moved from problem to solution at line 17
Reordered from line 20 to 18
Line 28 (1 moves): } // End of if-clause
Moved from problem to solution at line 17
Line 29 (3 moves): else
Moved from problem to solution at line 18
Reordered from line 19 to 18
Reordered from line 18 to 17
Line 30 (1 moves): {
Moved from problem to solution at line 24
Line 31 (1 moves): System.out.print( secondNum);
Moved from problem to solution at line 18
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 23
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 29 (1 moves): Else
Moved from problem to trash at line 0
LINE 14 (1 moves): short secondNum
Moved from problem to trash at line 1
Your Grade:
You took 23 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1455340982770
Time spent on this problem: 304 seconds
<HR>
