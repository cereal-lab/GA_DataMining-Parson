Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
if( firstNum  <  secondInput )
System.out.print( "Enter the second value");
System.out.print( "Enter the first value");
} // End of if-clause
short firstNum;
secondInput = stdin.nextShort();
{
firstNum = stdin.nextShort();
else
else;
} // End of else-clause
System.out.print( secondInput);
{
short secondInput;
System.out.print( firstNum);
System.out.print( firstNum)
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondInput
// Read firstNum
// Read secondInput
// If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
if( firstNum  <  secondInput )
System.out.print( "Enter the second value");
System.out.print( "Enter the first value");
} // End of if-clause
short firstNum;
secondInput = stdin.nextShort();
{
firstNum = stdin.nextShort();
else
else;
} // End of else-clause
System.out.print( secondInput);
{
short secondInput;
System.out.print( firstNum);
System.out.print( firstNum)
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondInput
// Read firstNum
// Read secondInput
// If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: short firstNum;
Moved from problem to solution at line 10: short secondInput;
Reordered from line 10 to 12: short secondInput;
Reordered from line 12 to 11: short secondInput;
Moved from problem to solution at line 13: firstNum = stdin.nextShort();
Moved from problem to solution at line 15: secondInput = stdin.nextShort();
Moved from problem to solution at line 17: if( firstNum  <  secondInput )
Attempted to reorder {
This line was provided to you in its correct order. Do not reorder it.
Moved from problem to solution at line 18: System.out.print( secondInput);
Moved from problem to solution at line 17: System.out.print( "Enter the first value");
Moved from solution to problem at line 8: if( firstNum  <  secondInput )
Moved from problem to solution at line 18: if( firstNum  <  secondInput )
Moved from solution to problem at line 5: System.out.print( secondInput);
Moved from problem to solution at line 19: System.out.print( firstNum);
Moved from problem to solution at line 20: else
Moved from problem to solution at line 21: System.out.print( secondInput);
Moved from problem to solution at line 20: } // End of if-clause
Moved from problem to solution at line 23: } // End of else-clause
Moved from problem to solution at line 19: {
Reordered from line 19 to 18: {
Reordered from line 18 to 19: {
Moved from problem to solution at line 23: {
Moved from problem to trash at line 0: System.out.print( firstNum)
Moved from problem to trash at line 1: System.out.print( "Enter the second value");
Moved from problem to trash at line 2: else;
Submit Parsons Solution clicked @ 1455403338625
This line is not in its correct location: firstNum = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to problem at line 13: firstNum = stdin.nextShort();
Reordered from line 16 to 13: System.out.print( "Enter the first value");
Moved from problem to trash at line 3: firstNum = stdin.nextShort();
Submit Parsons Solution clicked @ 1455403415706
Other lines should appear before this line: // Read secondInput
Insert this line in its place: firstNum = stdin.nextShort();
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 15 to 14: secondInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1455403436590
This line is not in its correct location: secondInput = stdin.nextShort();
Insert this line in its place: firstNum = stdin.nextShort();
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 14 to 15: secondInput = stdin.nextShort();
Moved from trash to solution at line 14: firstNum = stdin.nextShort();
Submit Parsons Solution clicked @ 1455403514715
This line is not in its correct location: secondInput = stdin.nextShort();
Insert this line in its place: System.out.print( "Enter the second value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 3: secondInput = stdin.nextShort();
Moved from trash to solution at line 16: System.out.print( "Enter the second value");
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1455404019525
Other lines should appear before this line: // If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
Insert this line in its place: secondInput = stdin.nextShort();
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 17: secondInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1455404044586
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (1 moves): {
Attempted to reorder line 4
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstNum
Line 11 (1 moves): short firstNum;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondInput
Line 14 (3 moves): short secondInput;
Moved from problem to solution at line 10
Reordered from line 10 to 12
Reordered from line 12 to 11
Line 16 (0 moves): // Read firstNum
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 17
Reordered from line 16 to 13
Line 18 (4 moves): firstNum = stdin.nextShort();
Moved from problem to solution at line 13
Moved from solution to problem at line 13
Moved from problem to trash at line 3
Moved from trash to solution at line 14
Line 20 (0 moves): // Read secondInput
Line 21 (2 moves): System.out.print( "Enter the second value");
Moved from problem to trash at line 1
Moved from trash to solution at line 16
Line 22 (5 moves): secondInput = stdin.nextShort();
Moved from problem to solution at line 15
Reordered from line 15 to 14
Reordered from line 14 to 15
Moved from solution to trash at line 3
Moved from trash to solution at line 17
Line 24 (0 moves): // If firstNum is less than secondInput, print firstNum. Otherwise, print secondInput
Line 25 (3 moves): if( firstNum  <  secondInput )
Moved from problem to solution at line 17
Moved from solution to problem at line 8
Moved from problem to solution at line 18
Line 26 (3 moves): {
Moved from problem to solution at line 19
Reordered from line 19 to 18
Reordered from line 18 to 19
Line 27 (1 moves): System.out.print( firstNum);
Moved from problem to solution at line 19
Line 28 (1 moves): } // End of if-clause
Moved from problem to solution at line 20
Line 29 (1 moves): else
Moved from problem to solution at line 20
Line 30 (1 moves): {
Moved from problem to solution at line 23
Line 31 (3 moves): System.out.print( secondInput);
Moved from problem to solution at line 18
Moved from solution to problem at line 5
Moved from problem to solution at line 21
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 23
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 27 (1 moves): System.out.print( firstNum)
Moved from problem to trash at line 0
LINE 29 (1 moves): else;
Moved from problem to trash at line 2
Your Grade:
You took 33 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1455404047217
Time spent on this problem: 1210 seconds
<HR>
