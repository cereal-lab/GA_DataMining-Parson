Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
secondNum = stdin.nextInt();
System.out.print( firstNum);
System.out.print( firstNum)
} // End of if-clause
System.out.print( "Enter the second value");
System.out.print( "Enter the first value");
System.out.print( secondNum);
{
} // End of else-clause
if( firstNum  <  secondNum )
if( firstNum  <  secondNum ):
{
int secondNum;
firstNum = stdin.nextInt();
int firstNum;
else
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondNum
// Read firstNum
// Read secondNum
// If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
secondNum = stdin.nextInt();
System.out.print( firstNum);
System.out.print( firstNum)
} // End of if-clause
System.out.print( "Enter the second value");
System.out.print( "Enter the first value");
System.out.print( secondNum);
{
} // End of else-clause
if( firstNum  <  secondNum )
if( firstNum  <  secondNum ):
{
int secondNum;
firstNum = stdin.nextInt();
int firstNum;
else
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstNum
// Declare secondNum
// Read firstNum
// Read secondNum
// If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 8: int firstNum;
Moved from problem to solution at line 10: int secondNum;
Moved from problem to solution at line 12: System.out.print( "Enter the first value");
Moved from problem to solution at line 13: firstNum = stdin.nextInt();
Moved from problem to solution at line 15: System.out.print( "Enter the second value");
Moved from problem to solution at line 16: secondNum = stdin.nextInt();
Moved from problem to solution at line 18: if( firstNum  <  secondNum )
Moved from problem to solution at line 19: {
Moved from problem to solution at line 20: System.out.print( firstNum);
Moved from problem to solution at line 21: } // End of if-clause
Moved from problem to solution at line 21: else
Moved from problem to solution at line 23: {
Moved from problem to solution at line 24: System.out.print( secondNum);
Moved from problem to solution at line 25: } // End of else-clause
Moved from problem to trash at line 0: if( firstNum  <  secondNum ):
Moved from problem to trash at line 1: System.out.print( firstNum)
Submit Parsons Solution clicked @ 1454872997203
This line is not in its correct location: int firstNum;
Either delete it or move it past this line: // Declare firstNum
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 8 to 9: int firstNum;
Reordered from line 10 to 11: int secondNum;
Reordered from line 13 to 14: firstNum = stdin.nextInt();
Reordered from line 12 to 13: System.out.print( "Enter the first value");
Reordered from line 16 to 17: secondNum = stdin.nextInt();
Reordered from line 15 to 16: System.out.print( "Enter the second value");
Attempted to reorder // If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 25 to 26: } // End of else-clause
Reordered from line 24 to 25: System.out.print( secondNum);
Reordered from line 23 to 24: {
Reordered from line 22 to 23: } // End of if-clause
Reordered from line 21 to 22: else
Reordered from line 20 to 21: System.out.print( firstNum);
Reordered from line 19 to 20: {
Reordered from line 18 to 19: if( firstNum  <  secondNum )
Submit Parsons Solution clicked @ 1454873055183
This line is not in its correct location: else
Move this line in its place: } // End of if-clause
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 22 to 23: else
Submit Parsons Solution clicked @ 1454873063910
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstNum
Line 11 (2 moves): int firstNum;
Moved from problem to solution at line 8
Reordered from line 8 to 9
Line 13 (0 moves): // Declare secondNum
Line 14 (2 moves): int secondNum;
Moved from problem to solution at line 10
Reordered from line 10 to 11
Line 16 (0 moves): // Read firstNum
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 12
Reordered from line 12 to 13
Line 18 (2 moves): firstNum = stdin.nextInt();
Moved from problem to solution at line 13
Reordered from line 13 to 14
Line 20 (0 moves): // Read secondNum
Line 21 (2 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 15
Reordered from line 15 to 16
Line 22 (2 moves): secondNum = stdin.nextInt();
Moved from problem to solution at line 16
Reordered from line 16 to 17
Line 24 (1 moves): // If firstNum is less than secondNum, print firstNum. Otherwise, print secondNum
Attempted to reorder line 24
Line 25 (2 moves): if( firstNum  <  secondNum )
Moved from problem to solution at line 18
Reordered from line 18 to 19
Line 26 (2 moves): {
Moved from problem to solution at line 19
Reordered from line 19 to 20
Line 27 (2 moves): System.out.print( firstNum);
Moved from problem to solution at line 20
Reordered from line 20 to 21
Line 28 (2 moves): } // End of if-clause
Moved from problem to solution at line 21
Reordered from line 22 to 23
Line 29 (3 moves): else
Moved from problem to solution at line 21
Reordered from line 21 to 22
Reordered from line 22 to 23
Line 30 (2 moves): {
Moved from problem to solution at line 23
Reordered from line 23 to 24
Line 31 (2 moves): System.out.print( secondNum);
Moved from problem to solution at line 24
Reordered from line 24 to 25
Line 32 (2 moves): } // End of else-clause
Moved from problem to solution at line 25
Reordered from line 25 to 26
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 25 (1 moves): if( firstNum  <  secondNum ):
Moved from problem to trash at line 0
LINE 27 (1 moves): System.out.print( firstNum)
Moved from problem to trash at line 1
Your Grade:
You took 31 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1454873067761
Time spent on this problem: 258 seconds
<HR>
