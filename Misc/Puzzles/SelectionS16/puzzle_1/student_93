Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
short firstInput;
short secondValue;
secondValue = stdin.nextShort();
{
System.out.print( secondValue);
System.out.print( secondValue)
else
{
if( firstInput  <  secondValue )
if( firstInput  <  secondValue ):
} // End of else-clause
firstInput = stdin.nextShort();
System.out.print( firstInput);
System.out.print( "Enter the first value");
System.out.print( "Enter the second value");
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
short firstInput;
short secondValue;
secondValue = stdin.nextShort();
{
System.out.print( secondValue);
System.out.print( secondValue)
else
{
if( firstInput  <  secondValue )
if( firstInput  <  secondValue ):
} // End of else-clause
firstInput = stdin.nextShort();
System.out.print( firstInput);
System.out.print( "Enter the first value");
System.out.print( "Enter the second value");
} // End of if-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 8: short firstInput;
Moved from problem to solution at line 10: short secondValue;
Moved from problem to solution at line 14: if( firstInput  <  secondValue )
Moved from problem to solution at line 15: else
Moved from problem to solution at line 17: System.out.print( "Enter the second value");
Moved from problem to trash at line 0: if( firstInput  <  secondValue ):
Moved from problem to solution at line 15: {
Reordered from line 15 to 16: {
Moved from problem to solution at line 12: secondValue = stdin.nextShort();
Moved from problem to solution at line 19: System.out.print( secondValue);
Moved from solution to problem at line 15: System.out.print( "Enter the second value");
Moved from problem to solution at line 19: } // End of if-clause
Reordered from line 20 to 16: System.out.print( secondValue);
Reordered from line 16 to 21: System.out.print( secondValue);
Reordered from line 19 to 16: } // End of if-clause
Moved from problem to solution at line 20: System.out.print( firstInput);
Attempted to reorder // If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 15 to 20: if( firstInput  <  secondValue )
Reordered from line 19 to 21: System.out.print( firstInput);
Reordered from line 16 to 22: else
Reordered from line 21 to 23: System.out.print( secondValue);
Reordered from line 16 to 22: {
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Attempted to reorder } // End of class Problem
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 22 to 21: {
Moved from problem to solution at line 21: System.out.print( secondValue)
Reordered from line 21 to 22: System.out.print( secondValue)
Moved from problem to solution at line 23: } // End of else-clause
Moved from problem to solution at line 10: firstInput = stdin.nextShort();
Reordered from line 11 to 9: short secondValue;
Moved from problem to trash at line 1: System.out.print( "Enter the first value");
Moved from problem to trash at line 2: System.out.print( "Enter the second value");
Moved from solution to trash at line 3: System.out.print( secondValue)
Reordered from line 25 to 22: System.out.print( secondValue);
Moved from problem to solution at line 24: {
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1455304969183
This line is not in its correct location: short firstInput;
Either delete it or move it past this line: // Declare firstInput
Sorry, your solution is not yet complete and correct.
Please correct your answer
Outdented line 8: short firstInput;
Submit Parsons Solution clicked @ 1455304992229
This line is not in its correct location: short firstInput;
Either delete it or move it past this line: // Declare firstInput
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 4: short firstInput;
Submit Parsons Solution clicked @ 1455304998841
This line is not in its correct location: short secondValue;
Either delete it or move it past this line: // Declare firstInput
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 3: short secondValue;
Submit Parsons Solution clicked @ 1455305002830
This line is not in its correct location: firstInput = stdin.nextShort();
Insert this line in its place: short firstInput;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 5: firstInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1455305017505
Other lines should appear before this line: // Declare secondValue
Insert this line in its place: short firstInput;
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Explain Parsons Solution clicked @ 1455305026050
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 13 (0 moves): // Declare secondValue
Line 22 (1 moves): secondValue = stdin.nextShort();
Moved from problem to solution at line 12
Line 16 (0 moves): // Read firstInput
Line 20 (0 moves): // Read secondValue
Line 28 (2 moves): } // End of if-clause
Moved from problem to solution at line 19
Reordered from line 19 to 16
Line 24 (1 moves): // If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
Attempted to reorder line 24
Line 25 (2 moves): if( firstInput  <  secondValue )
Moved from problem to solution at line 14
Reordered from line 15 to 20
Line 33 (0 moves): }  // End of method main
Line 27 (2 moves): System.out.print( firstInput);
Moved from problem to solution at line 20
Reordered from line 19 to 21
Line 29 (2 moves): else
Moved from problem to solution at line 15
Reordered from line 16 to 22
Line 31 (5 moves): System.out.print( secondValue);
Moved from problem to solution at line 19
Reordered from line 20 to 16
Reordered from line 16 to 21
Reordered from line 21 to 23
Reordered from line 25 to 22
Line 30 (4 moves): {
Moved from problem to solution at line 15
Reordered from line 15 to 16
Reordered from line 16 to 22
Reordered from line 22 to 21
Line 30 (1 moves): {
Moved from problem to solution at line 24
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 23
Line 35 (2 moves): } // End of class Problem
Attempted to reorder line 35
Attempted to reorder line 35
LINE 25 (1 moves): if( firstInput  <  secondValue ):
Moved from problem to trash at line 0
Line 17 (1 moves): System.out.print( "Enter the first value");
Moved from problem to trash at line 1
Line 21 (3 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 17
Moved from solution to problem at line 15
Moved from problem to trash at line 2
LINE 31 (3 moves): System.out.print( secondValue)
Moved from problem to solution at line 21
Reordered from line 21 to 22
Moved from solution to trash at line 3
Line 11 (3 moves): short firstInput;
Moved from problem to solution at line 8
Outdented line 8
Moved from solution to trash at line 4
Line 14 (3 moves): short secondValue;
Moved from problem to solution at line 10
Reordered from line 11 to 9
Moved from solution to trash at line 3
Line 18 (2 moves): firstInput = stdin.nextShort();
Moved from problem to solution at line 10
Moved from solution to trash at line 5
Since you quit, this problem is being marked as not attempted
Your Grade:
You took 35 steps before bailing out of a Parsons puzzle containing 16 lines of code.
Your answer so far is as follows:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
secondValue = stdin.nextShort();
// Read firstInput
// Read secondValue
} // End of if-clause
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
if( firstInput  <  secondValue )
}  // End of method main
System.out.print( firstInput);
else
System.out.print( secondValue);
{
{
} // End of else-clause
} // End of class Problem
The lines you deleted so far are as follows:
if( firstInput  <  secondValue ):
System.out.print( "Enter the first value");
System.out.print( "Enter the second value");
System.out.print( secondValue)
short firstInput;
short secondValue;
firstInput = stdin.nextShort();
The correct answer is as follows:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
short firstInput;
// Declare secondValue
short secondValue;
// Read firstInput
System.out.print( "Enter the first value");
firstInput = stdin.nextShort();
// Read secondValue
System.out.print( "Enter the second value");
secondValue = stdin.nextShort();
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
if( firstInput  <  secondValue )
{
System.out.print( firstInput);
} // End of if-clause
else
{
System.out.print( secondValue);
} // End of else-clause
}  // End of method main
} // End of class Problem
Click on 'Next Problem' button to go to the next problem
Next Problem clicked @ 1455305043904
Time spent on this problem: 1582 seconds
<HR>
