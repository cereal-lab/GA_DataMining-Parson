Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( firstInput);
} // End of if-clause
short firstInput;
if( firstInput  <  secondNum )
firstInput = stdin.nextShort();
{
else
System.out.print( "Enter the first value");
secondNum = stdin.nextShort();
firstInput = stdin.nextShort()
System.out.print( "Enter the second value");
} // End of else-clause
{
secondNum == stdin.nextShort();
System.out.print( secondNum);
short secondNum;
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondNum
// Read firstInput
// Read secondNum
// If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
System.out.print( firstInput);
} // End of if-clause
short firstInput;
if( firstInput  <  secondNum )
firstInput = stdin.nextShort();
{
else
System.out.print( "Enter the first value");
secondNum = stdin.nextShort();
firstInput = stdin.nextShort()
System.out.print( "Enter the second value");
} // End of else-clause
{
secondNum == stdin.nextShort();
System.out.print( secondNum);
short secondNum;
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondNum
// Read firstInput
// Read secondNum
// If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 8: short firstInput;
Reordered from line 8 to 10: short firstInput;
Reordered from line 10 to 9: short firstInput;
Moved from problem to solution at line 11: short secondNum;
Moved from problem to solution at line 13: firstInput = stdin.nextShort();
Moved from problem to solution at line 15: secondNum = stdin.nextShort();
Moved from problem to solution at line 17: if( firstInput  <  secondNum )
Moved from problem to solution at line 18: System.out.print( "Enter the first value");
Moved from problem to solution at line 18: {
Moved from problem to solution at line 20: {
Moved from solution to problem at line 16: {
Moved from problem to solution at line 19: } // End of if-clause
Reordered from line 19 to 21: } // End of if-clause
Attempted to reorder }  // End of method main
This line was provided to you in its correct order. Do not reorder it.
Reordered from line 21 to 20: } // End of if-clause
Moved from problem to solution at line 21: else
Reordered from line 19 to 16: System.out.print( "Enter the first value");
Moved from problem to solution at line 17: System.out.print( "Enter the second value");
Moved from problem to solution at line 21: System.out.print( firstInput);
Moved from problem to solution at line 24: secondNum == stdin.nextShort();
Moved from problem to solution at line 25: } // End of else-clause
Moved from problem to solution at line 24: {
Moved from solution to problem at line 13: secondNum == stdin.nextShort();
Moved from problem to solution at line 25: System.out.print( secondNum);
Moved from problem to trash at line 0: firstInput = stdin.nextShort()
Moved from problem to trash at line 1: secondNum == stdin.nextShort();
Submit Parsons Solution clicked @ 1457590567132
This line is not in its correct location: firstInput = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 13 to 14: firstInput = stdin.nextShort();
Reordered from line 14 to 13: firstInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1457590577852
This line is not in its correct location: firstInput = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1457590579332
This line is not in its correct location: firstInput = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1457590581112
This line is not in its correct location: firstInput = stdin.nextShort();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to problem at line 8: firstInput = stdin.nextShort()
Moved from solution to problem at line 9: firstInput = stdin.nextShort();
Moved from problem to solution at line 13: firstInput = stdin.nextShort()
Moved from problem to trash at line 1: firstInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1457590600832
Every statement must end with a semi-colon ;
Delete this line: firstInput = stdin.nextShort()
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: firstInput = stdin.nextShort()
You have been working on this problem for a while. I recommend that you click on 'Quit' so that I can display the correct answer for you to compare.
Submit Parsons Solution clicked @ 1457590617622
Other lines should appear before this line: // Read secondNum
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Submit Parsons Solution clicked @ 1457590619802
Other lines should appear before this line: // Read secondNum
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 12: firstInput = stdin.nextShort();
Reordered from line 12 to 14: firstInput = stdin.nextShort();
Reordered from line 16 to 14: System.out.print( "Enter the first value");
Reordered from line 17 to 15: System.out.print( "Enter the second value");
Reordered from line 15 to 16: System.out.print( "Enter the second value");
Reordered from line 14 to 13: System.out.print( "Enter the first value");
Reordered from line 15 to 14: firstInput = stdin.nextShort();
Submit Parsons Solution clicked @ 1457590679223
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (3 moves): short firstInput;
Moved from problem to solution at line 8
Reordered from line 8 to 10
Reordered from line 10 to 9
Line 13 (0 moves): // Declare secondNum
Line 14 (1 moves): short secondNum;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstInput
Line 17 (4 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 18
Reordered from line 19 to 16
Reordered from line 16 to 14
Reordered from line 14 to 13
Line 18 (8 moves): firstInput = stdin.nextShort();
Moved from problem to solution at line 13
Reordered from line 13 to 14
Reordered from line 14 to 13
Moved from solution to problem at line 9
Moved from problem to trash at line 1
Moved from trash to solution at line 12
Reordered from line 12 to 14
Reordered from line 15 to 14
Line 20 (0 moves): // Read secondNum
Line 21 (3 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 17
Reordered from line 17 to 15
Reordered from line 15 to 16
Line 22 (1 moves): secondNum = stdin.nextShort();
Moved from problem to solution at line 15
Line 24 (0 moves): // If firstInput is less than secondNum, print firstInput. Otherwise, print secondNum
Line 25 (1 moves): if( firstInput  <  secondNum )
Moved from problem to solution at line 17
Line 26 (1 moves): {
Moved from problem to solution at line 18
Line 27 (1 moves): System.out.print( firstInput);
Moved from problem to solution at line 21
Line 28 (3 moves): } // End of if-clause
Moved from problem to solution at line 19
Reordered from line 19 to 21
Reordered from line 21 to 20
Line 29 (1 moves): else
Moved from problem to solution at line 21
Line 30 (3 moves): {
Moved from problem to solution at line 20
Moved from solution to problem at line 16
Moved from problem to solution at line 24
Line 31 (1 moves): System.out.print( secondNum);
Moved from problem to solution at line 25
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 25
Line 33 (1 moves): }  // End of method main
Attempted to reorder line 33
Line 35 (0 moves): } // End of class Problem
LINE 22 (3 moves): secondNum == stdin.nextShort();
Moved from problem to solution at line 24
Moved from solution to problem at line 13
Moved from problem to trash at line 1
LINE 18 (4 moves): firstInput = stdin.nextShort()
Moved from problem to trash at line 0
Moved from trash to problem at line 8
Moved from problem to solution at line 13
Moved from solution to trash at line 2
Your Grade:
You took 39 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1457590692173
Time spent on this problem: 335 seconds
<HR>
