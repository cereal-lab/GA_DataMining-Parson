Problem No. 1
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
{
System.out.print( "Enter the second value");
firstInput == stdin.nextInt();
firstInput = stdin.nextInt();
} // End of if-clause
secondValue = stdin.nextInt();
else
{
System.out.print( "Enter the first value");
System.out.print( secondValue);
int firstInput;
System.out.print( firstInput);
System.out.print( firstInput)
if( firstInput  <  secondValue )
int secondValue;
} // End of else-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
{
System.out.print( "Enter the second value");
firstInput == stdin.nextInt();
firstInput = stdin.nextInt();
} // End of if-clause
secondValue = stdin.nextInt();
else
{
System.out.print( "Enter the first value");
System.out.print( secondValue);
int firstInput;
System.out.print( firstInput);
System.out.print( firstInput)
if( firstInput  <  secondValue )
int secondValue;
} // End of else-clause
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
// The Java program
import java.util.Scanner;
public class Problem
{
public static void main( String args[] )
{
Scanner stdin = new Scanner( System.in );
// Declare firstInput
// Declare secondValue
// Read firstInput
// Read secondValue
// If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
}  // End of method main
} // End of class Problem
Using Template # 2005
Stage: Pretest / Feedback Amount: Explanatory / Feedback Type: Demand/Selection.ifElse.Parsons.Single.Simple
The Problem:
Moved from problem to solution at line 9: int firstInput;
Moved from problem to solution at line 11: int secondValue;
Moved from problem to solution at line 14: System.out.print( secondValue);
Moved from problem to trash at line 0: System.out.print( firstInput)
Moved from problem to solution at line 13: System.out.print( firstInput);
Moved from problem to solution at line 14: firstInput = stdin.nextInt();
Moved from problem to trash at line 1: firstInput == stdin.nextInt();
Moved from problem to solution at line 17: secondValue = stdin.nextInt();
Moved from problem to solution at line 19: if( firstInput  <  secondValue )
Moved from problem to solution at line 20: {
Moved from problem to solution at line 21: System.out.print( "Enter the first value");
Moved from problem to solution at line 22: } // End of if-clause
Moved from problem to solution at line 23: else
Moved from problem to solution at line 24: {
Moved from problem to solution at line 25: System.out.print( "Enter the second value");
Moved from problem to solution at line 26: } // End of else-clause
Submit Parsons Solution clicked @ 1462139523984
This line is not in its correct location: System.out.print( firstInput);
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 13 to 14: System.out.print( firstInput);
Submit Parsons Solution clicked @ 1462139540100
This line is not in its correct location: firstInput = stdin.nextInt();
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: firstInput = stdin.nextInt();
Moved from trash to solution at line 14: firstInput == stdin.nextInt();
Submit Parsons Solution clicked @ 1462139568130
This line is not in its correct location: System.out.print( firstInput);
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 13 to 14: System.out.print( firstInput);
Submit Parsons Solution clicked @ 1462139575730
== is comparison operator. Use = operator to assign to firstInput
Delete this line: firstInput == stdin.nextInt();
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from solution to trash at line 2: firstInput == stdin.nextInt();
Submit Parsons Solution clicked @ 1462139589733
This line is not in its correct location: System.out.print( firstInput);
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Moved from trash to solution at line 14: firstInput = stdin.nextInt();
Submit Parsons Solution clicked @ 1462139599335
This line is not in its correct location: System.out.print( firstInput);
Move this line in its place: System.out.print( "Enter the first value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 21 to 13: System.out.print( "Enter the first value");
Submit Parsons Solution clicked @ 1462139648660
This line is not in its correct location: System.out.print( firstInput);
Move this line in its place: firstInput = stdin.nextInt();
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 14 to 22: System.out.print( firstInput);
Reordered from line 22 to 21: System.out.print( firstInput);
Submit Parsons Solution clicked @ 1462139670195
This line is not in its correct location: System.out.print( secondValue);
Move this line in its place: System.out.print( "Enter the second value");
This is the code needed to implement this section
Sorry, your solution is not yet complete and correct.
Please correct your answer
Reordered from line 16 to 25: System.out.print( secondValue);
Reordered from line 24 to 16: System.out.print( "Enter the second value");
Submit Parsons Solution clicked @ 1462139694611
Your Answer:
Here is a summary of your actions sorted by line
Line 1 (0 moves): // The Java program
Line 2 (0 moves): import java.util.Scanner;
Line 3 (0 moves): public class Problem
Line 4 (0 moves): {
Line 6 (0 moves): public static void main( String args[] )
Line 7 (0 moves): {
Line 8 (0 moves): Scanner stdin = new Scanner( System.in );
Line 10 (0 moves): // Declare firstInput
Line 11 (1 moves): int firstInput;
Moved from problem to solution at line 9
Line 13 (0 moves): // Declare secondValue
Line 14 (1 moves): int secondValue;
Moved from problem to solution at line 11
Line 16 (0 moves): // Read firstInput
Line 17 (2 moves): System.out.print( "Enter the first value");
Moved from problem to solution at line 21
Reordered from line 21 to 13
Line 18 (3 moves): firstInput = stdin.nextInt();
Moved from problem to solution at line 14
Moved from solution to trash at line 2
Moved from trash to solution at line 14
Line 20 (0 moves): // Read secondValue
Line 21 (2 moves): System.out.print( "Enter the second value");
Moved from problem to solution at line 25
Reordered from line 24 to 16
Line 22 (1 moves): secondValue = stdin.nextInt();
Moved from problem to solution at line 17
Line 24 (0 moves): // If firstInput is less than secondValue, print firstInput. Otherwise, print secondValue
Line 25 (1 moves): if( firstInput  <  secondValue )
Moved from problem to solution at line 19
Line 26 (1 moves): {
Moved from problem to solution at line 20
Line 27 (5 moves): System.out.print( firstInput);
Moved from problem to solution at line 13
Reordered from line 13 to 14
Reordered from line 13 to 14
Reordered from line 14 to 22
Reordered from line 22 to 21
Line 28 (1 moves): } // End of if-clause
Moved from problem to solution at line 22
Line 29 (1 moves): else
Moved from problem to solution at line 23
Line 30 (1 moves): {
Moved from problem to solution at line 24
Line 31 (2 moves): System.out.print( secondValue);
Moved from problem to solution at line 14
Reordered from line 16 to 25
Line 32 (1 moves): } // End of else-clause
Moved from problem to solution at line 26
Line 33 (0 moves): }  // End of method main
Line 35 (0 moves): } // End of class Problem
LINE 27 (1 moves): System.out.print( firstInput)
Moved from problem to trash at line 0
LINE 18 (3 moves): firstInput == stdin.nextInt();
Moved from problem to trash at line 1
Moved from trash to solution at line 14
Moved from solution to trash at line 2
Your Grade:
You took 27 steps to solve a Parsons puzzle containing 16 lines of code.
Next Problem clicked @ 1462139702883
Time spent on this problem: 378 seconds
<HR>
